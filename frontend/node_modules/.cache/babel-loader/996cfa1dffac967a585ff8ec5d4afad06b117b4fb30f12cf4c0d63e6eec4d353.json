{"ast":null,"code":"import * as t from \"react\";\nimport { memo as e, useMemo as i, useCallback as n, createElement as r } from \"react\";\nimport { textPropsByEngine as a, useMotionConfig as o, degreesToRadians as l } from \"@nivo/core\";\nimport { useTheme as c, useExtendedAxisTheme as s, extendAxisTheme as f } from \"@nivo/theming\";\nimport { Text as d, setCanvasFont as u, drawCanvasText as x } from \"@nivo/text\";\nimport { animated as m, useSpring as y, useTransition as g } from \"@react-spring/web\";\nimport { timeFormat as v } from \"d3-time-format\";\nimport { format as k } from \"d3-format\";\nimport { getScaleTicks as h, centerScale as p } from \"@nivo/scales\";\nimport { jsxs as b, jsx as P, Fragment as S } from \"react/jsx-runtime\";\nfunction A() {\n  return A = Object.assign ? Object.assign.bind() : function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var i = arguments[e];\n      for (var n in i) ({}).hasOwnProperty.call(i, n) && (t[n] = i[n]);\n    }\n    return t;\n  }, A.apply(null, arguments);\n}\nvar T = function (t) {\n    var e,\n      i = t.axis,\n      n = t.scale,\n      r = t.ticksPosition,\n      o = t.tickValues,\n      l = t.tickSize,\n      c = t.tickPadding,\n      s = t.tickRotation,\n      f = t.truncateTickAt,\n      d = t.engine,\n      u = void 0 === d ? \"svg\" : d,\n      x = h(n, o),\n      m = a[u],\n      y = \"bandwidth\" in n ? p(n) : n,\n      g = {\n        lineX: 0,\n        lineY: 0\n      },\n      v = {\n        textX: 0,\n        textY: 0\n      },\n      k = \"object\" == typeof document && \"rtl\" === document.dir,\n      b = m.align.center,\n      P = m.baseline.center;\n    \"x\" === i ? (e = function (t) {\n      var e;\n      return {\n        x: null != (e = y(t)) ? e : 0,\n        y: 0\n      };\n    }, g.lineY = l * (\"after\" === r ? 1 : -1), v.textY = (l + c) * (\"after\" === r ? 1 : -1), P = \"after\" === r ? m.baseline.top : m.baseline.bottom, 0 === s ? b = m.align.center : \"after\" === r && s < 0 || \"before\" === r && s > 0 ? (b = m.align[k ? \"left\" : \"right\"], P = m.baseline.center) : (\"after\" === r && s > 0 || \"before\" === r && s < 0) && (b = m.align[k ? \"right\" : \"left\"], P = m.baseline.center)) : (e = function (t) {\n      var e;\n      return {\n        x: 0,\n        y: null != (e = y(t)) ? e : 0\n      };\n    }, g.lineX = l * (\"after\" === r ? 1 : -1), v.textX = (l + c) * (\"after\" === r ? 1 : -1), b = \"after\" === r ? m.align.left : m.align.right);\n    return {\n      ticks: x.map(function (t) {\n        var i = \"string\" == typeof t ? function (t) {\n          var e = String(t).length;\n          return f && f > 0 && e > f ? \"\" + String(t).slice(0, f).concat(\"...\") : \"\" + t;\n        }(t) : t;\n        return A({\n          key: t instanceof Date ? \"\" + t.valueOf() : \"\" + t,\n          value: i\n        }, e(t), g, v);\n      }),\n      textAlign: b,\n      textBaseline: P\n    };\n  },\n  w = function (t, e) {\n    if (void 0 === t || \"function\" == typeof t) return t;\n    if (\"time\" === e.type) {\n      var i = v(t);\n      return function (t) {\n        return i(t instanceof Date ? t : new Date(t));\n      };\n    }\n    return k(t);\n  },\n  O = function (t) {\n    var e,\n      i = t.width,\n      n = t.height,\n      r = t.scale,\n      a = t.axis,\n      o = t.values,\n      l = (e = o, Array.isArray(e) ? o : void 0) || h(r, o),\n      c = \"bandwidth\" in r ? p(r) : r,\n      s = \"x\" === a ? l.map(function (t) {\n        var e, i;\n        return {\n          key: t instanceof Date ? \"\" + t.valueOf() : \"\" + t,\n          x1: null != (e = c(t)) ? e : 0,\n          x2: null != (i = c(t)) ? i : 0,\n          y1: 0,\n          y2: n\n        };\n      }) : l.map(function (t) {\n        var e, n;\n        return {\n          key: t instanceof Date ? \"\" + t.valueOf() : \"\" + t,\n          x1: 0,\n          x2: i,\n          y1: null != (e = c(t)) ? e : 0,\n          y2: null != (n = c(t)) ? n : 0\n        };\n      });\n    return s;\n  },\n  X = e(function (t) {\n    var e,\n      n = t.value,\n      r = t.format,\n      a = t.lineX,\n      o = t.lineY,\n      l = t.onClick,\n      c = t.textBaseline,\n      s = t.textAnchor,\n      f = t.theme,\n      u = t.animatedProps,\n      x = null != (e = null == r ? void 0 : r(n)) ? e : n,\n      y = i(function () {\n        var t = {\n          opacity: u.opacity\n        };\n        return l ? {\n          style: A({}, t, {\n            cursor: \"pointer\"\n          }),\n          onClick: function (t) {\n            return l(t, x);\n          }\n        } : {\n          style: t\n        };\n      }, [u.opacity, l, x]);\n    return b(m.g, A({\n      transform: u.transform\n    }, y, {\n      children: [P(\"line\", {\n        x1: 0,\n        x2: a,\n        y1: 0,\n        y2: o,\n        style: f.line\n      }), P(d, {\n        dominantBaseline: c,\n        textAnchor: s,\n        transform: u.textTransform,\n        style: f.text,\n        children: \"\" + x\n      })]\n    }));\n  }),\n  Y = {\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legendPosition: \"middle\",\n    legendOffset: 0\n  },\n  B = function (e) {\n    var r = e.axis,\n      a = e.scale,\n      l = e.x,\n      f = void 0 === l ? 0 : l,\n      u = e.y,\n      x = void 0 === u ? 0 : u,\n      v = e.length,\n      k = e.ticksPosition,\n      h = e.tickValues,\n      p = e.tickSize,\n      O = void 0 === p ? Y.tickSize : p,\n      B = e.tickPadding,\n      z = void 0 === B ? Y.tickPadding : B,\n      R = e.tickRotation,\n      V = void 0 === R ? Y.tickRotation : R,\n      C = e.format,\n      D = e.renderTick,\n      j = void 0 === D ? X : D,\n      E = e.truncateTickAt,\n      W = e.legend,\n      q = e.legendPosition,\n      H = void 0 === q ? Y.legendPosition : q,\n      I = e.legendOffset,\n      F = void 0 === I ? Y.legendOffset : I,\n      G = e.style,\n      J = e.onClick,\n      K = e.ariaHidden,\n      L = c(),\n      M = s(L.axis, G),\n      N = i(function () {\n        return w(C, a);\n      }, [C, a]),\n      Q = T({\n        axis: r,\n        scale: a,\n        ticksPosition: k,\n        tickValues: h,\n        tickSize: O,\n        tickPadding: z,\n        tickRotation: V,\n        truncateTickAt: E\n      }),\n      U = Q.ticks,\n      Z = Q.textAlign,\n      $ = Q.textBaseline,\n      _ = null;\n    if (void 0 !== W) {\n      var tt,\n        et = 0,\n        it = 0,\n        nt = 0;\n      \"y\" === r ? (nt = -90, et = F, \"start\" === H ? (tt = \"start\", it = v) : \"middle\" === H ? (tt = \"middle\", it = v / 2) : \"end\" === H && (tt = \"end\")) : (it = F, \"start\" === H ? tt = \"start\" : \"middle\" === H ? (tt = \"middle\", et = v / 2) : \"end\" === H && (tt = \"end\", et = v)), _ = P(S, {\n        children: P(d, {\n          transform: \"translate(\" + et + \", \" + it + \") rotate(\" + nt + \")\",\n          textAnchor: tt,\n          style: A({}, M.legend.text, {\n            dominantBaseline: \"central\"\n          }),\n          children: W\n        })\n      });\n    }\n    var rt = o(),\n      at = rt.animate,\n      ot = rt.config,\n      lt = y({\n        transform: \"translate(\" + f + \",\" + x + \")\",\n        lineX2: \"x\" === r ? v : 0,\n        lineY2: \"x\" === r ? 0 : v,\n        config: ot,\n        immediate: !at\n      }),\n      ct = n(function (t) {\n        return {\n          opacity: 1,\n          transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n          textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + V + \")\"\n        };\n      }, [V]),\n      st = n(function (t) {\n        return {\n          opacity: 0,\n          transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n          textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + V + \")\"\n        };\n      }, [V]),\n      ft = g(U, {\n        keys: function (t) {\n          return t.key;\n        },\n        initial: ct,\n        from: st,\n        enter: ct,\n        update: ct,\n        leave: {\n          opacity: 0\n        },\n        config: ot,\n        immediate: !at\n      });\n    return b(m.g, {\n      transform: lt.transform,\n      \"aria-hidden\": K,\n      children: [ft(function (e, i, n, r) {\n        return t.createElement(j, A({\n          tickIndex: r,\n          format: N,\n          rotate: V,\n          textBaseline: $,\n          textAnchor: Z,\n          truncateTickAt: E,\n          animatedProps: e,\n          theme: M.ticks\n        }, i, J ? {\n          onClick: J\n        } : {}));\n      }), P(m.line, {\n        style: M.domain.line,\n        x1: 0,\n        x2: lt.lineX2,\n        y1: 0,\n        y2: lt.lineY2\n      }), _]\n    });\n  },\n  z = e(B),\n  R = [\"top\", \"right\", \"bottom\", \"left\"],\n  V = e(function (t) {\n    var e = t.xScale,\n      i = t.yScale,\n      n = t.width,\n      r = t.height,\n      a = {\n        top: t.top,\n        right: t.right,\n        bottom: t.bottom,\n        left: t.left\n      };\n    return P(S, {\n      children: R.map(function (t) {\n        var o = a[t];\n        if (!o) return null;\n        var l = \"top\" === t || \"bottom\" === t;\n        return P(z, A({}, o, {\n          axis: l ? \"x\" : \"y\",\n          x: \"right\" === t ? n : 0,\n          y: \"bottom\" === t ? r : 0,\n          scale: l ? e : i,\n          length: l ? n : r,\n          ticksPosition: \"top\" === t || \"left\" === t ? \"before\" : \"after\",\n          truncateTickAt: o.truncateTickAt\n        }), t);\n      })\n    });\n  }),\n  C = e(function (t) {\n    var e = t.animatedProps,\n      i = c();\n    return P(m.line, A({}, e, i.grid.line));\n  }),\n  D = e(function (t) {\n    var e = t.lines,\n      i = o(),\n      n = i.animate,\n      a = i.config,\n      l = g(e, {\n        keys: function (t) {\n          return t.key;\n        },\n        initial: function (t) {\n          return {\n            opacity: 1,\n            x1: t.x1,\n            x2: t.x2,\n            y1: t.y1,\n            y2: t.y2\n          };\n        },\n        from: function (t) {\n          return {\n            opacity: 0,\n            x1: t.x1,\n            x2: t.x2,\n            y1: t.y1,\n            y2: t.y2\n          };\n        },\n        enter: function (t) {\n          return {\n            opacity: 1,\n            x1: t.x1,\n            x2: t.x2,\n            y1: t.y1,\n            y2: t.y2\n          };\n        },\n        update: function (t) {\n          return {\n            opacity: 1,\n            x1: t.x1,\n            x2: t.x2,\n            y1: t.y1,\n            y2: t.y2\n          };\n        },\n        leave: {\n          opacity: 0\n        },\n        config: a,\n        immediate: !n\n      });\n    return P(\"g\", {\n      children: l(function (t, e) {\n        return r(C, A({}, e, {\n          key: e.key,\n          animatedProps: t\n        }));\n      })\n    });\n  }),\n  j = e(function (t) {\n    var e = t.width,\n      n = t.height,\n      r = t.xScale,\n      a = t.yScale,\n      o = t.xValues,\n      l = t.yValues,\n      c = i(function () {\n        return !!r && O({\n          width: e,\n          height: n,\n          scale: r,\n          axis: \"x\",\n          values: o\n        });\n      }, [r, o, e, n]),\n      s = i(function () {\n        return !!a && O({\n          width: e,\n          height: n,\n          scale: a,\n          axis: \"y\",\n          values: l\n        });\n      }, [n, e, a, l]);\n    return b(S, {\n      children: [c && P(D, {\n        lines: c\n      }), s && P(D, {\n        lines: s\n      })]\n    });\n  }),\n  E = function (t, e) {\n    var i,\n      n,\n      r = e.axis,\n      a = e.scale,\n      o = e.x,\n      c = void 0 === o ? 0 : o,\n      s = e.y,\n      d = void 0 === s ? 0 : s,\n      m = e.length,\n      y = e.ticksPosition,\n      g = e.tickValues,\n      v = e.tickSize,\n      k = void 0 === v ? Y.tickSize : v,\n      h = e.tickPadding,\n      p = void 0 === h ? Y.tickPadding : h,\n      b = e.tickRotation,\n      P = void 0 === b ? Y.tickRotation : b,\n      S = e.format,\n      A = e.legend,\n      w = e.legendPosition,\n      O = void 0 === w ? Y.legendPosition : w,\n      X = e.legendOffset,\n      B = void 0 === X ? Y.legendOffset : X,\n      z = e.theme,\n      R = e.style,\n      V = T({\n        axis: r,\n        scale: a,\n        ticksPosition: y,\n        tickValues: g,\n        tickSize: k,\n        tickPadding: p,\n        tickRotation: P,\n        engine: \"canvas\"\n      }),\n      C = V.ticks,\n      D = V.textAlign,\n      j = V.textBaseline;\n    t.save(), t.translate(c, d);\n    var E = f(z.axis, R);\n    t.textAlign = D, t.textBaseline = j, u(t, E.ticks.text);\n    var W = null != (i = E.domain.line.strokeWidth) ? i : 0;\n    \"string\" != typeof W && W > 0 && (t.lineWidth = W, t.lineCap = \"square\", E.domain.line.stroke && (t.strokeStyle = E.domain.line.stroke), t.beginPath(), t.moveTo(0, 0), t.lineTo(\"x\" === r ? m : 0, \"x\" === r ? 0 : m), t.stroke());\n    var q = \"function\" == typeof S ? S : function (t) {\n        return \"\" + t;\n      },\n      H = null != (n = E.ticks.line.strokeWidth) ? n : 0,\n      I = \"string\" != typeof H && H > 0;\n    if (C.forEach(function (e) {\n      I && (t.lineWidth = H, t.lineCap = \"square\", E.ticks.line.stroke && (t.strokeStyle = E.ticks.line.stroke), t.beginPath(), t.moveTo(e.x, e.y), t.lineTo(e.x + e.lineX, e.y + e.lineY), t.stroke());\n      var i = q(e.value);\n      t.save(), t.translate(e.x + e.textX, e.y + e.textY), t.rotate(l(P)), x(t, E.ticks.text, \"\" + i), t.fillText(\"\" + i, 0, 0), t.restore();\n    }), void 0 !== A) {\n      var F = 0,\n        G = 0,\n        J = 0,\n        K = \"center\";\n      \"y\" === r ? (J = -90, F = B, \"start\" === O ? (K = \"start\", G = m) : \"middle\" === O ? (K = \"center\", G = m / 2) : \"end\" === O && (K = \"end\")) : (G = B, \"start\" === O ? K = \"start\" : \"middle\" === O ? (K = \"center\", F = m / 2) : \"end\" === O && (K = \"end\", F = m)), t.translate(F, G), t.rotate(l(J)), u(t, E.legend.text), E.legend.text.fill && (t.fillStyle = E.legend.text.fill), t.textAlign = K, t.textBaseline = \"middle\", x(t, E.legend.text, A);\n    }\n    t.restore();\n  },\n  W = function (t, e) {\n    var i = e.xScale,\n      n = e.yScale,\n      r = e.width,\n      a = e.height,\n      o = e.top,\n      l = e.right,\n      c = e.bottom,\n      s = e.left,\n      f = e.theme,\n      d = {\n        top: o,\n        right: l,\n        bottom: c,\n        left: s\n      };\n    R.forEach(function (e) {\n      var o = d[e];\n      if (!o) return null;\n      var l = \"top\" === e || \"bottom\" === e,\n        c = \"top\" === e || \"left\" === e ? \"before\" : \"after\",\n        s = l ? i : n,\n        u = w(o.format, s);\n      E(t, A({}, o, {\n        axis: l ? \"x\" : \"y\",\n        x: \"right\" === e ? r : 0,\n        y: \"bottom\" === e ? a : 0,\n        scale: s,\n        format: u,\n        length: l ? r : a,\n        ticksPosition: c,\n        theme: f\n      }));\n    });\n  },\n  q = function (t, e) {\n    var i = e.width,\n      n = e.height,\n      r = e.scale,\n      a = e.axis,\n      o = e.values;\n    O({\n      width: i,\n      height: n,\n      scale: r,\n      axis: a,\n      values: o\n    }).forEach(function (e) {\n      t.beginPath(), t.moveTo(e.x1, e.y1), t.lineTo(e.x2, e.y2), t.stroke();\n    });\n  };\nexport { V as Axes, z as Axis, X as AxisTick, j as Grid, C as GridLine, D as GridLines, B as NonMemoizedAxis, Y as defaultAxisProps, R as positions, W as renderAxesToCanvas, E as renderAxisToCanvas, q as renderGridLinesToCanvas };","map":{"version":3,"names":["T","computeCartesianTicks","t","e","i","axis","n","scale","r","ticksPosition","o","tickValues","l","tickSize","c","tickPadding","s","tickRotation","f","truncateTickAt","d","engine","u","x","h","m","a","y","p","g","lineX","lineY","v","textX","textY","k","document","dir","b","align","center","P","baseline","translate","top","bottom","left","right","ticks","map","String","length","slice","concat","A","key","Date","valueOf","value","textAlign","textBaseline","w","getFormatter","type","O","computeGridLines","width","height","values","Array","isArray","x1","x2","y1","y2","X","format","onClick","textAnchor","theme","animatedProps","opacity","style","cursor","transform","children","line","dominantBaseline","textTransform","text","Y","legendPosition","legendOffset","B","NonMemoizedAxis","z","R","V","C","D","renderTick","j","E","W","legend","q","H","I","F","G","J","K","ariaHidden","L","M","N","Q","U","Z","$","_","tt","et","it","nt","S","rt","at","animate","ot","config","lt","lineX2","lineY2","immediate","ct","st","ft","keys","initial","from","enter","update","leave","createElement","tickIndex","rotate","domain","xScale","yScale","grid","lines","xValues","yValues","renderAxisToCanvas","save","strokeWidth","lineWidth","lineCap","stroke","strokeStyle","beginPath","moveTo","lineTo","forEach","fillText","restore","fill","fillStyle","renderAxesToCanvas","renderGridLinesToCanvas","Axes","Axis","AxisTick","Grid","GridLine","GridLines","defaultAxisProps","positions"],"sources":["C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\axes\\src\\compute.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\axes\\src\\components\\AxisTick.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\axes\\src\\defaults.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\axes\\src\\components\\Axis.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\axes\\src\\props.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\axes\\src\\components\\Axes.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\axes\\src\\components\\GridLine.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\axes\\src\\components\\GridLines.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\axes\\src\\components\\Grid.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\axes\\src\\canvas.ts"],"sourcesContent":["import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-expect-error no types\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    truncateTickAt,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    truncateTickAt?: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const truncateTick = (value: string) => {\n        const valueLength = String(value).length\n\n        if (truncateTickAt && truncateTickAt > 0 && valueLength > truncateTickAt) {\n            return `${String(value).slice(0, truncateTickAt).concat('...')}`\n        }\n        return `${value}`\n    }\n\n    const ticks = values.map((value: Value) => {\n        const processedValue =\n            typeof value === 'string' ? (truncateTick(value) as unknown as Value) : value\n        return {\n            key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n            value: processedValue,\n            ...translate(value),\n            ...line,\n            ...text,\n        }\n    })\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { Text } from '@nivo/text'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    theme,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.line} />\n            <Text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.text}\n            >\n                {`${value}`}\n            </Text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { AxisProps } from './types'\n\nexport const defaultAxisProps: Pick<\n    Required<AxisProps>,\n    'tickSize' | 'tickPadding' | 'tickRotation' | 'legendPosition' | 'legendOffset'\n> = {\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legendPosition: 'middle',\n    legendOffset: 0,\n}\n","import { useMotionConfig } from '@nivo/core'\nimport { useTheme, useExtendedAxisTheme } from '@nivo/theming'\nimport { Text } from '@nivo/text'\nimport { AnyScale, ScaleValue } from '@nivo/scales'\nimport { animated, useSpring, useTransition } from '@react-spring/web'\nimport * as React from 'react'\nimport { memo, useCallback, useMemo } from 'react'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisProps } from '../types'\nimport { AxisTick } from './AxisTick'\nimport { defaultAxisProps } from '../defaults'\n\nexport const NonMemoizedAxis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = defaultAxisProps.tickSize,\n    tickPadding = defaultAxisProps.tickPadding,\n    tickRotation = defaultAxisProps.tickRotation,\n    format,\n    renderTick = AxisTick,\n    truncateTickAt,\n    legend,\n    legendPosition = defaultAxisProps.legendPosition,\n    legendOffset = defaultAxisProps.legendOffset,\n    style,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n    const axisTheme = useExtendedAxisTheme(theme.axis, style)\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        truncateTickAt,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <>\n                <Text\n                    transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                    textAnchor={textAnchor}\n                    style={{\n                        ...axisTheme.legend.text,\n                        dominantBaseline: 'central',\n                    }}\n                >\n                    {legend}\n                </Text>\n            </>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const getAnimatedProps = useCallback(\n        (tick: (typeof ticks)[0]) => {\n            return {\n                opacity: 1,\n                transform: `translate(${tick.x},${tick.y})`,\n                textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n            }\n        },\n        [tickRotation]\n    )\n    const getFromAnimatedProps = useCallback(\n        (tick: (typeof ticks)[0]) => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        [tickRotation]\n    )\n\n    const transition = useTransition<\n        (typeof ticks)[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: getAnimatedProps,\n        from: getFromAnimatedProps,\n        enter: getAnimatedProps,\n        update: getAnimatedProps,\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    truncateTickAt: truncateTickAt,\n                    animatedProps: transitionProps,\n                    theme: axisTheme.ticks,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={axisTheme.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nexport const Axis = memo(NonMemoizedAxis) as typeof NonMemoizedAxis\n","export const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                            truncateTickAt={axis.truncateTickAt}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo, SVGAttributes } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/theming'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return (\n            <animated.line\n                {...animatedProps}\n                {...(theme.grid.line as SVGAttributes<SVGLineElement>)}\n            />\n        )\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians } from '@nivo/core'\nimport { Theme, PartialTheme, extendAxisTheme } from '@nivo/theming'\nimport { setCanvasFont, drawCanvasText } from '@nivo/text'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { defaultAxisProps } from './defaults'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProps, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n        ticksPosition,\n        tickValues,\n        tickSize = defaultAxisProps.tickSize,\n        tickPadding = defaultAxisProps.tickPadding,\n        tickRotation = defaultAxisProps.tickRotation,\n        format: _format,\n        legend,\n        legendPosition = defaultAxisProps.legendPosition,\n        legendOffset = defaultAxisProps.legendOffset,\n        theme,\n        style,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: Theme\n        style?: PartialTheme['axis']\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    const axisTheme = extendAxisTheme(theme.axis, style)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n\n    setCanvasFont(ctx, axisTheme.ticks.text)\n\n    const domainLineWidth = axisTheme.domain.line.strokeWidth ?? 0\n    if (typeof domainLineWidth !== 'string' && domainLineWidth > 0) {\n        ctx.lineWidth = domainLineWidth\n        ctx.lineCap = 'square'\n\n        if (axisTheme.domain.line.stroke) {\n            ctx.strokeStyle = axisTheme.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    const tickLineWidth = axisTheme.ticks.line.strokeWidth ?? 0\n    const shouldRenderTickLine = typeof tickLineWidth !== 'string' && tickLineWidth > 0\n    ticks.forEach(tick => {\n        if (shouldRenderTickLine) {\n            ctx.lineWidth = tickLineWidth\n            ctx.lineCap = 'square'\n\n            if (axisTheme.ticks.line.stroke) {\n                ctx.strokeStyle = axisTheme.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        drawCanvasText(ctx, axisTheme.ticks.text, `${value}`)\n\n        ctx.fillText(`${value}`, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        setCanvasFont(ctx, axisTheme.legend.text)\n\n        if (axisTheme.legend.text.fill) {\n            ctx.fillStyle = axisTheme.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        drawCanvasText(ctx, axisTheme.legend.text, legend)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProps<X> | null\n        right?: CanvasAxisProps<Y> | null\n        bottom?: CanvasAxisProps<X> | null\n        left?: CanvasAxisProps<Y> | null\n        theme: Theme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProps<X> | undefined\n            : CanvasAxisProps<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}