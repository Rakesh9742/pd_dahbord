{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\EngineeringCharts.jsx\";\nimport React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport './EngineeringCharts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartColors = ['#7367f0', '#28c76f', '#ff9f43', '#ea5455', '#00cfe8', '#ff5b5c', '#9c8cfc', '#f8d3ff'];\n\n// Helper to prepare data for bar/line charts\nconst prepareStageMetricData = (data, metric) => {\n  // Group by stage\n  const grouped = {};\n  data.forEach(row => {\n    const stage = row.stage || 'Unknown';\n    if (!grouped[stage]) grouped[stage] = [];\n    grouped[stage].push(row);\n  });\n  // Aggregate (average) metric per stage\n  return Object.entries(grouped).map(([stage, rows]) => ({\n    stage,\n    value: rows.reduce((sum, r) => sum + (parseFloat(r[metric]) || 0), 0) / rows.length\n  }));\n};\nconst metricLabels = {\n  area_um2: 'Area (um²)',\n  internal_timing: 'Internal Timing',\n  utilization: 'Utilization (%)',\n  interface_timing: 'Interface Timing',\n  congestion_drc_metrics: 'Congestion/DRC'\n};\nconst metrics = ['area_um2', 'internal_timing', 'utilization', 'interface_timing', 'congestion_drc_metrics'];\nconst EngineeringCharts = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"engineering-charts-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"engineering-charts-grid\",\n      children: metrics.map((metric, idx) => {\n        const chartData = prepareStageMetricData(data, metric);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"engineering-chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: metricLabels[metric]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"engineering-chart-inner\",\n            children: /*#__PURE__*/_jsxDEV(ResponsiveBar, {\n              data: chartData,\n              keys: ['value'],\n              indexBy: \"stage\",\n              margin: {\n                top: 30,\n                right: 30,\n                bottom: 60,\n                left: 60\n              },\n              padding: 0.3,\n              colors: chartColors[idx % chartColors.length],\n              axisBottom: {\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: -30,\n                legend: 'Stage',\n                legendPosition: 'middle',\n                legendOffset: 40\n              },\n              axisLeft: {\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: metricLabels[metric],\n                legendPosition: 'middle',\n                legendOffset: -50\n              },\n              tooltip: ({\n                id,\n                value,\n                indexValue\n              }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#222',\n                  background: '#fff',\n                  padding: 8,\n                  borderRadius: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: indexValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 52\n                }, this), metricLabels[metric], \": \", value && !isNaN(value) ? value.toFixed(2) : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this),\n              theme: {\n                axis: {\n                  ticks: {\n                    text: {\n                      fill: '#b4b7bd'\n                    }\n                  },\n                  legend: {\n                    text: {\n                      fill: '#b4b7bd'\n                    }\n                  }\n                },\n                legends: {\n                  text: {\n                    fill: '#b4b7bd'\n                  }\n                },\n                tooltip: {\n                  container: {\n                    background: '#fff',\n                    color: '#222'\n                  }\n                }\n              },\n              enableLabel: false,\n              animate: true,\n              motionStiffness: 90,\n              motionDamping: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, metric, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = EngineeringCharts;\nexport default EngineeringCharts;\nvar _c;\n$RefreshReg$(_c, \"EngineeringCharts\");","map":{"version":3,"names":["React","ResponsiveBar","jsxDEV","_jsxDEV","chartColors","prepareStageMetricData","data","metric","grouped","forEach","row","stage","push","Object","entries","map","rows","value","reduce","sum","r","parseFloat","length","metricLabels","area_um2","internal_timing","utilization","interface_timing","congestion_drc_metrics","metrics","EngineeringCharts","className","children","idx","chartData","fileName","_jsxFileName","lineNumber","columnNumber","keys","indexBy","margin","top","right","bottom","left","padding","colors","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","tooltip","id","indexValue","style","color","background","borderRadius","isNaN","toFixed","theme","axis","ticks","text","fill","legends","container","enableLabel","animate","motionStiffness","motionDamping","_c","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/EngineeringCharts.jsx"],"sourcesContent":["import React from 'react';\r\nimport { ResponsiveBar } from '@nivo/bar';\r\nimport './EngineeringCharts.css';\r\n\r\nconst chartColors = [\r\n  '#7367f0', '#28c76f', '#ff9f43', '#ea5455', '#00cfe8', '#ff5b5c', '#9c8cfc', '#f8d3ff'\r\n];\r\n\r\n// Helper to prepare data for bar/line charts\r\nconst prepareStageMetricData = (data, metric) => {\r\n  // Group by stage\r\n  const grouped = {};\r\n  data.forEach(row => {\r\n    const stage = row.stage || 'Unknown';\r\n    if (!grouped[stage]) grouped[stage] = [];\r\n    grouped[stage].push(row);\r\n  });\r\n  // Aggregate (average) metric per stage\r\n  return Object.entries(grouped).map(([stage, rows]) => ({\r\n    stage,\r\n    value: rows.reduce((sum, r) => sum + (parseFloat(r[metric]) || 0), 0) / rows.length\r\n  }));\r\n};\r\n\r\nconst metricLabels = {\r\n  area_um2: 'Area (um²)',\r\n  internal_timing: 'Internal Timing',\r\n  utilization: 'Utilization (%)',\r\n  interface_timing: 'Interface Timing',\r\n  congestion_drc_metrics: 'Congestion/DRC',\r\n};\r\n\r\nconst metrics = [\r\n  'area_um2',\r\n  'internal_timing',\r\n  'utilization',\r\n  'interface_timing',\r\n  'congestion_drc_metrics',\r\n];\r\n\r\nconst EngineeringCharts = ({ data }) => {\r\n  return (\r\n    <div className=\"engineering-charts-container\">\r\n      <div className=\"engineering-charts-grid\">\r\n        {metrics.map((metric, idx) => {\r\n          const chartData = prepareStageMetricData(data, metric);\r\n          return (\r\n            <div key={metric} className=\"engineering-chart-card\">\r\n              <h4>{metricLabels[metric]}</h4>\r\n              <div className=\"engineering-chart-inner\">\r\n                <ResponsiveBar\r\n                  data={chartData}\r\n                  keys={['value']}\r\n                  indexBy=\"stage\"\r\n                  margin={{ top: 30, right: 30, bottom: 60, left: 60 }}\r\n                  padding={0.3}\r\n                  colors={chartColors[idx % chartColors.length]}\r\n                  axisBottom={{\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: -30,\r\n                    legend: 'Stage',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 40,\r\n                  }}\r\n                  axisLeft={{\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: metricLabels[metric],\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -50,\r\n                  }}\r\n                  tooltip={({ id, value, indexValue }) => (\r\n                    <div style={{ color: '#222', background: '#fff', padding: 8, borderRadius: 8 }}>\r\n                      <strong>{indexValue}</strong><br />\r\n                      {metricLabels[metric]}: {value && !isNaN(value) ? value.toFixed(2) : 'N/A'}\r\n                    </div>\r\n                  )}\r\n                  theme={{\r\n                    axis: {\r\n                      ticks: { text: { fill: '#b4b7bd' } },\r\n                      legend: { text: { fill: '#b4b7bd' } },\r\n                    },\r\n                    legends: { text: { fill: '#b4b7bd' } },\r\n                    tooltip: { container: { background: '#fff', color: '#222' } },\r\n                  }}\r\n                  enableLabel={false}\r\n                  animate\r\n                  motionStiffness={90}\r\n                  motionDamping={15}\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EngineeringCharts; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}