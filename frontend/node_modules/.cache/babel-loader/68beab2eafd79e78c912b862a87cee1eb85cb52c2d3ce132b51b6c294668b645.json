{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\EngineeringCharts.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport './EngineeringCharts.css';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell, LineChart, Line, AreaChart, Area } from 'recharts';\n\n// Custom Tooltip Component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltip-label\",\n        children: `Stage: ${label}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), payload.map((entry, index) => {\n        let displayValue = entry.value;\n        let displayName = entry.name;\n\n        // Format timing values\n        if (entry.dataKey.includes('internal_timing_')) {\n          const timingType = entry.dataKey.split('_').pop().toUpperCase();\n          displayName = `Internal Timing ${timingType}`;\n          displayValue = entry.value.toFixed(2);\n        } else if (entry.dataKey === 'internal_timing') {\n          // Handle the combined internal timing string\n          displayName = 'Internal Timing';\n          displayValue = entry.value; // Keep as string format \"WNS/TNS/FEP\"\n        }\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-value\",\n          style: {\n            color: entry.color\n          },\n          children: `${displayName}: ${displayValue}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n\n// Custom Pie Chart Tooltip\n_c = CustomTooltip;\nconst PieChartTooltip = ({\n  active,\n  payload\n}) => {\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltip-label\",\n        children: payload[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltip-value\",\n        style: {\n          color: payload[0].color\n        },\n        children: `Value: ${payload[0].value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n\n// Debounce hook to prevent excessive re-renders\n_c2 = PieChartTooltip;\nconst useDebounce = (value, delay) => {\n  _s();\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n};\n\n// Accept selectedDomainId and/or projectFilters as props\n_s(useDebounce, \"KDuPAtDOgxm8PU6legVJOb3oOmA=\");\nconst EngineeringCharts = ({\n  selectedDomainId,\n  projectFilters\n}) => {\n  _s2();\n  var _filterOptions$experi, _filterOptions$blocks;\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filterOptionsLoading, setFilterOptionsLoading] = useState(false);\n  // Replace single metric selection with multi-metric selection (max 2)\n  const [selectedMetrics, setSelectedMetrics] = useState(['area', 'utilization']);\n  const [filters, setFilters] = useState({\n    project_id: '',\n    experiment: '',\n    block_name: ''\n  });\n  const [filterOptions, setFilterOptions] = useState({});\n  const token = localStorage.getItem('token');\n\n  // Debounce filters to prevent excessive API calls\n  const debouncedFilters = useDebounce(filters, 300);\n  const metrics = [{\n    key: 'area',\n    label: 'Area (μm²)',\n    color: '#8884d8'\n  }, {\n    key: 'internal_timing',\n    label: 'Internal Timing (WNS/TNS/FEP)',\n    color: '#82ca9d'\n  }, {\n    key: 'interface_timing',\n    label: 'Interface Timing',\n    color: '#ffc658'\n  }, {\n    key: 'utilization',\n    label: 'Utilization (%)',\n    color: '#ff7300'\n  }, {\n    key: 'congestion',\n    label: 'Congestion',\n    color: '#ff0000'\n  }, {\n    key: 'inst_count',\n    label: 'Instance Count',\n    color: '#00ff00'\n  }];\n\n  // Colors for pie charts\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D'];\n\n  // Memoize the fetch functions to prevent unnecessary re-renders\n  const fetchFilterOptions = useCallback(async () => {\n    try {\n      setFilterOptionsLoading(true);\n      const queryParams = new URLSearchParams();\n      if (selectedDomainId) {\n        queryParams.append('domain_id', selectedDomainId);\n      }\n      if (filters.project_id) {\n        queryParams.append('project_id', filters.project_id);\n      }\n      if (filters.block_name) {\n        queryParams.append('block_name', filters.block_name);\n      }\n      const response = await fetch(`http://localhost:5000/api/data/filter-options?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setFilterOptions(data);\n      }\n    } catch (error) {\n      console.error('Error fetching filter options:', error);\n    } finally {\n      setFilterOptionsLoading(false);\n    }\n  }, [selectedDomainId, filters.project_id, filters.block_name, token]);\n  const fetchChartData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const queryParams = new URLSearchParams();\n      if (selectedDomainId) queryParams.append('domain_id', selectedDomainId);\n      if (debouncedFilters.project_id) queryParams.append('project_id', debouncedFilters.project_id);\n      if (debouncedFilters.experiment) queryParams.append('experiment', debouncedFilters.experiment);\n      if (debouncedFilters.block_name) queryParams.append('block_name', debouncedFilters.block_name);\n      const response = await fetch(`http://localhost:5000/api/data/pd-data?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const result = await response.json();\n        processChartData(result.data);\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedDomainId, debouncedFilters, token]);\n  useEffect(() => {\n    if (selectedDomainId) {\n      fetchFilterOptions();\n    } else {\n      // Clear filter options when no domain is selected\n      setFilterOptions({});\n    }\n  }, [fetchFilterOptions, selectedDomainId]);\n  useEffect(() => {\n    if (selectedDomainId) {\n      fetchChartData();\n    } else {\n      // Clear chart data when no domain is selected\n      setChartData([]);\n      setLoading(false);\n    }\n  }, [fetchChartData, selectedDomainId]);\n\n  // Add a normalization function for stage names\n  const normalizeStage = s => {\n    if (!s) return 'Unknown';\n    const lower = s.trim().toLowerCase();\n    if (lower === 'synthesis') return 'synthesis';\n    if (lower === 'floorplan') return 'Floorplan';\n    if (lower === 'placement') return 'Placement';\n    return 'Unknown';\n  };\n  const processChartData = useCallback(data => {\n    // Define the expected stage order\n    const stageOrder = ['synthesis', 'Floorplan', 'Placement'];\n\n    // Group data by stage and calculate metrics\n    const stageData = {};\n    data.forEach(item => {\n      const stage = normalizeStage(item.stage);\n      if (!stageData[stage]) {\n        stageData[stage] = {\n          stage,\n          count: 0,\n          area_sum: 0,\n          internal_timing_wns_sum: 0,\n          internal_timing_tns_sum: 0,\n          internal_timing_fep_sum: 0,\n          interface_timing_sum: 0,\n          utilization_sum: 0,\n          congestion_sum: 0,\n          inst_count_sum: 0,\n          pass_count: 0,\n          fail_count: 0,\n          error_count: 0\n        };\n      }\n      stageData[stage].count++;\n      stageData[stage].area_sum += parseFloat(item.area_um2) || 0;\n\n      // Process internal timing - extract WNS, TNS, FEP values from complex strings\n      // Example: \"Setup: r2r: -0.35/-3.8/264 Hold: NA\"\n      // We extract: WNS = -0.35, TNS = -3.8, FEP = 264\n      let internalTimingWNS = 0;\n      let internalTimingTNS = 0;\n      let internalTimingFEP = 0;\n      if (item.internal_timing) {\n        // Look for patterns like \"r2r: -0.35/-3.8/264\" or \"i2r: -0.02/-1.4/241\"\n        const timingMatches = item.internal_timing.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/g);\n        if (timingMatches) {\n          // Take the first match (usually r2r)\n          const firstMatch = timingMatches[0];\n          const values = firstMatch.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/);\n          if (values) {\n            internalTimingWNS = parseFloat(values[1]) || 0;\n            internalTimingTNS = parseFloat(values[2]) || 0;\n            internalTimingFEP = parseFloat(values[3]) || 0;\n          }\n        }\n      }\n      stageData[stage].internal_timing_wns_sum += internalTimingWNS;\n      stageData[stage].internal_timing_tns_sum += internalTimingTNS;\n      stageData[stage].internal_timing_fep_sum += internalTimingFEP;\n\n      // Process interface timing - extract numeric values from complex strings\n      let interfaceTimingValue = 0;\n      if (item.interface_timing) {\n        const timingMatch = item.interface_timing.match(/(-?\\d+\\.?\\d*)/);\n        if (timingMatch) {\n          interfaceTimingValue = parseFloat(timingMatch[1]);\n        }\n      }\n      stageData[stage].interface_timing_sum += interfaceTimingValue;\n      stageData[stage].utilization_sum += parseFloat(item.utilization) || 0;\n      stageData[stage].inst_count_sum += parseInt(item.inst_count) || 0;\n\n      // Handle congestion (might be text, try to extract numeric value)\n      const congestionValue = parseFloat(item.congestion_drc_metrics) || 0;\n      stageData[stage].congestion_sum += congestionValue;\n\n      // Count status\n      if (item.run_status === 'pass') stageData[stage].pass_count++;else if (item.run_status === 'fail') stageData[stage].fail_count++;else if (item.run_status === 'continue_with_error') stageData[stage].error_count++;\n    });\n\n    // Calculate averages and format for charts, maintaining stage order\n    const processedData = stageOrder.map(stage => {\n      const stageInfo = stageData[stage] || {};\n      const count = stageInfo.count || 0;\n      return {\n        stage,\n        count,\n        area: count > 0 ? Number(stageInfo.area_sum) / count : 0,\n        internal_timing: count > 0 ? `${Number(stageInfo.internal_timing_wns_sum) / count}/${Number(stageInfo.internal_timing_tns_sum) / count}/${Number(stageInfo.internal_timing_fep_sum) / count}` : '0/0/0',\n        internal_timing_wns: count > 0 ? Number(stageInfo.internal_timing_wns_sum) / count : 0,\n        internal_timing_tns: count > 0 ? Number(stageInfo.internal_timing_tns_sum) / count : 0,\n        internal_timing_fep: count > 0 ? Number(stageInfo.internal_timing_fep_sum) / count : 0,\n        interface_timing: count > 0 ? Number(stageInfo.interface_timing_sum) / count : 0,\n        utilization: count > 0 ? Number(stageInfo.utilization_sum) / count : 0,\n        congestion: count > 0 ? Number(stageInfo.congestion_sum) / count : 0,\n        inst_count: count > 0 ? Number(stageInfo.inst_count_sum) / count : 0,\n        pass_rate: count > 0 ? stageInfo.pass_count / count * 100 : 0,\n        fail_rate: count > 0 ? stageInfo.fail_count / count * 100 : 0,\n        error_rate: count > 0 ? stageInfo.error_count / count * 100 : 0\n      };\n    });\n    setChartData(processedData);\n\n    // Debug: Log the processed data for each internal timing metric\n    console.log('Chart Data for WNS:', processedData.map(d => ({\n      stage: d.stage,\n      wns: d.internal_timing_wns,\n      type: typeof d.internal_timing_wns\n    })));\n    console.log('Chart Data for TNS:', processedData.map(d => ({\n      stage: d.stage,\n      tns: d.internal_timing_tns,\n      type: typeof d.internal_timing_tns\n    })));\n    console.log('Chart Data for FEP:', processedData.map(d => ({\n      stage: d.stage,\n      fep: d.internal_timing_fep,\n      type: typeof d.internal_timing_fep\n    })));\n\n    // Debug: Log the processed data\n    console.log('Processed Chart Data:', processedData);\n    console.log('Available stages in data:', Object.keys(stageData));\n\n    // Debug: Log timing extraction for first few items\n    if (data.length > 0) {\n      console.log('Sample timing extraction:');\n      data.slice(0, 3).forEach((item, index) => {\n        if (item.internal_timing) {\n          const timingMatches = item.internal_timing.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/g);\n          console.log(`Item ${index + 1} - Stage: ${item.stage}, Internal Timing: \"${item.internal_timing}\"`);\n          if (timingMatches) {\n            const firstMatch = timingMatches[0];\n            const values = firstMatch.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/);\n            if (values) {\n              console.log(`  Extracted - WNS: ${values[1]}, TNS: ${values[2]}, FEP: ${values[3]}`);\n            }\n          } else {\n            console.log(`  No timing pattern found`);\n          }\n        }\n      });\n    }\n  }, []);\n  const handleFilterChange = useCallback((key, value) => {\n    setFilters(prev => {\n      const newFilters = {\n        ...prev,\n        [key]: value\n      };\n\n      // Reset dependent filters when parent filter changes\n      if (key === 'project_id') {\n        // Reset experiment and block when project changes\n        newFilters.experiment = '';\n        newFilters.block_name = '';\n        // Show loading state briefly for cascading update\n        setFilterOptionsLoading(true);\n        setTimeout(() => setFilterOptionsLoading(false), 500);\n      } else if (key === 'block_name') {\n        // Reset experiment when block changes\n        newFilters.experiment = '';\n        // Show loading state briefly for cascading update\n        setFilterOptionsLoading(true);\n        setTimeout(() => setFilterOptionsLoading(false), 500);\n      }\n      return newFilters;\n    });\n  }, []);\n\n  // Memoize chart data to prevent unnecessary re-renders\n  const memoizedChartData = useMemo(() => chartData, [chartData]);\n  const memoizedStatusData = useMemo(() => {\n    if (chartData.length === 0) return [];\n    return chartData.map(stage => ({\n      stage: stage.stage,\n      pass: stage.pass_rate,\n      fail: stage.fail_rate,\n      error: stage.error_rate\n    }));\n  }, [chartData]);\n  const renderChart = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading chart data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this);\n    }\n    if (chartData.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available for the selected filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this);\n    }\n\n    // const selectedMetricData = metrics.find(m => m.key === selectedMetric); // This line is no longer needed\n\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: memoizedChartData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        }\n        // Add these props to prevent blinking and improve performance\n        ,\n        syncId: \"engineering-charts\",\n        throttle: 100\n        // Add these props for better stability\n        ,\n        layout: \"horizontal\",\n        barCategoryGap: \"20%\",\n        barGap: 0,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"stage\"\n          // Add these props to prevent x-axis blinking\n          ,\n          allowDataOverflow: false,\n          scale: \"band\",\n          type: \"category\"\n          // Add these props for better axis stability\n          ,\n          axisLine: true,\n          tickLine: true,\n          tick: {\n            fontSize: 12,\n            fill: '#b4b7bd'\n          }\n          // Prevent axis from jumping\n          ,\n          minTickGap: 10,\n          interval: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis\n        // Add these props for better axis stability\n        , {\n          axisLine: true,\n          tickLine: true,\n          tick: {\n            fontSize: 12,\n            fill: '#b4b7bd'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 22\n          }, this)\n          // Add animation and styling props\n          ,\n          animationDuration: 300,\n          animationEasing: \"ease-in-out\"\n          // Add these props for better tooltip behavior\n          ,\n          cursor: {\n            fill: 'rgba(115, 103, 240, 0.1)'\n          },\n          isAnimationActive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend\n        // Add these props for better legend stability\n        , {\n          verticalAlign: \"top\",\n          height: 36,\n          wrapperStyle: {\n            paddingBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), selectedMetrics.map(mKey => {\n          const metric = metrics.find(m => m.key === mKey);\n          return /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: mKey,\n            fill: metric.color,\n            name: metric.label\n            // Add animation props\n            ,\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\"\n            // Add these props for better bar behavior\n            ,\n            radius: [4, 4, 0, 0]\n            // Add hover effects\n            ,\n            onMouseEnter: (data, index) => {\n              // Add custom hover logic if needed\n            }\n          }, mKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStatusChart = () => {\n    if (memoizedStatusData.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Run Status by Engineering Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: memoizedStatusData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }\n          // Add syncId to prevent conflicts\n          ,\n          syncId: \"status-charts\",\n          throttle: 100\n          // Add these props for better stability\n          ,\n          layout: \"horizontal\",\n          barCategoryGap: \"20%\",\n          barGap: 0,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"stage\",\n            allowDataOverflow: false,\n            scale: \"band\",\n            type: \"category\"\n            // Add these props for better axis stability\n            ,\n            axisLine: true,\n            tickLine: true,\n            tick: {\n              fontSize: 12,\n              fill: '#b4b7bd'\n            }\n            // Prevent axis from jumping\n            ,\n            minTickGap: 10,\n            interval: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis\n          // Add these props for better axis stability\n          , {\n            axisLine: true,\n            tickLine: true,\n            tick: {\n              fontSize: 12,\n              fill: '#b4b7bd'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 24\n            }, this),\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\"\n            // Add these props for better tooltip behavior\n            ,\n            cursor: {\n              fill: 'rgba(115, 103, 240, 0.1)'\n            },\n            isAnimationActive: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend\n          // Add these props for better legend stability\n          , {\n            verticalAlign: \"top\",\n            height: 36,\n            wrapperStyle: {\n              paddingBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"pass\",\n            stackId: \"a\",\n            fill: \"#16a34a\",\n            name: \"Pass Rate (%)\",\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\",\n            radius: [4, 4, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"fail\",\n            stackId: \"a\",\n            fill: \"#dc2626\",\n            name: \"Fail Rate (%)\",\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\",\n            radius: [4, 4, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"error\",\n            stackId: \"a\",\n            fill: \"#f59e0b\",\n            name: \"Error Rate (%)\",\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\",\n            radius: [4, 4, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render Heat Map\n  const renderHeatMap = () => {\n    if (chartData.length === 0) return null;\n\n    // Prepare heat map data\n    const heatMapData = chartData.map(stage => ({\n      stage: stage.stage,\n      area: stage.area,\n      utilization: stage.utilization,\n      inst_count: stage.inst_count,\n      congestion: stage.congestion\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heat-map-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Metrics Heat Map by Engineering Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heat-map-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heat-map-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heat-map-cell header\",\n            children: \"Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heat-map-cell header\",\n            children: \"Area (\\u03BCm\\xB2)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heat-map-cell header\",\n            children: \"Utilization (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heat-map-cell header\",\n            children: \"Instance Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heat-map-cell header\",\n            children: \"Congestion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), heatMapData.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heat-map-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heat-map-cell stage\",\n            children: row.stage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heat-map-cell metric\",\n            style: {\n              backgroundColor: `rgba(136, 132, 216, ${Math.min(row.area / 1000, 1)})`,\n              color: row.area > 500 ? 'white' : 'black'\n            },\n            children: row.area.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heat-map-cell metric\",\n            style: {\n              backgroundColor: `rgba(255, 115, 0, ${Math.min(row.utilization / 100, 1)})`,\n              color: row.utilization > 50 ? 'white' : 'black'\n            },\n            children: [row.utilization.toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heat-map-cell metric\",\n            style: {\n              backgroundColor: `rgba(0, 255, 0, ${Math.min(row.inst_count / 10000, 1)})`,\n              color: row.inst_count > 5000 ? 'white' : 'black'\n            },\n            children: row.inst_count.toFixed(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heat-map-cell metric\",\n            style: {\n              backgroundColor: `rgba(255, 0, 0, ${Math.min(row.congestion / 100, 1)})`,\n              color: row.congestion > 50 ? 'white' : 'black'\n            },\n            children: row.congestion.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render Pie Charts\n  const renderPieCharts = () => {\n    if (chartData.length === 0) return null;\n\n    // Prepare pie chart data for different metrics\n    const areaData = chartData.map(stage => ({\n      name: stage.stage,\n      value: stage.area\n    }));\n    const utilizationData = chartData.map(stage => ({\n      name: stage.stage,\n      value: stage.utilization\n    }));\n    const instCountData = chartData.map(stage => ({\n      name: stage.stage,\n      value: stage.inst_count\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie-charts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Distribution by Engineering Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pie-charts-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pie-chart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Area Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: areaData,\n                cx: \"50%\",\n                cy: \"50%\",\n                labelLine: false,\n                label: ({\n                  name,\n                  percent\n                }) => `${name} ${(percent * 100).toFixed(0)}%`,\n                outerRadius: 80,\n                fill: \"#8884d8\",\n                dataKey: \"value\",\n                children: areaData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                content: /*#__PURE__*/_jsxDEV(PieChartTooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pie-chart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Utilization Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: utilizationData,\n                cx: \"50%\",\n                cy: \"50%\",\n                labelLine: false,\n                label: ({\n                  name,\n                  percent\n                }) => `${name} ${(percent * 100).toFixed(0)}%`,\n                outerRadius: 80,\n                fill: \"#ff7300\",\n                dataKey: \"value\",\n                children: utilizationData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                content: /*#__PURE__*/_jsxDEV(PieChartTooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pie-chart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Instance Count Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: instCountData,\n                cx: \"50%\",\n                cy: \"50%\",\n                labelLine: false,\n                label: ({\n                  name,\n                  percent\n                }) => `${name} ${(percent * 100).toFixed(0)}%`,\n                outerRadius: 80,\n                fill: \"#00ff00\",\n                dataKey: \"value\",\n                children: instCountData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                content: /*#__PURE__*/_jsxDEV(PieChartTooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render Line Graphs\n  const renderLineGraphs = () => {\n    if (chartData.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line-graphs-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Trends by Engineering Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-graphs-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-graph-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Area Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: chartData,\n              margin: {\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5\n              },\n              syncId: \"line-charts\",\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"stage\",\n                allowDataOverflow: false,\n                scale: \"band\",\n                type: \"category\",\n                axisLine: true,\n                tickLine: true,\n                tick: {\n                  fontSize: 12,\n                  fill: '#b4b7bd'\n                },\n                minTickGap: 10,\n                interval: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                axisLine: true,\n                tickLine: true,\n                tick: {\n                  fontSize: 12,\n                  fill: '#b4b7bd'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                verticalAlign: \"top\",\n                height: 36,\n                wrapperStyle: {\n                  paddingBottom: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"area\",\n                stroke: \"#8884d8\",\n                name: \"Area (\\u03BCm\\xB2)\",\n                strokeWidth: 3,\n                dot: {\n                  r: 6,\n                  fill: '#8884d8'\n                },\n                activeDot: {\n                  r: 8,\n                  stroke: '#8884d8',\n                  strokeWidth: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-graph-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Utilization Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: chartData,\n              margin: {\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5\n              },\n              syncId: \"line-charts\",\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"stage\",\n                allowDataOverflow: false,\n                scale: \"band\",\n                type: \"category\",\n                axisLine: true,\n                tickLine: true,\n                tick: {\n                  fontSize: 12,\n                  fill: '#b4b7bd'\n                },\n                minTickGap: 10,\n                interval: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                axisLine: true,\n                tickLine: true,\n                tick: {\n                  fontSize: 12,\n                  fill: '#b4b7bd'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                verticalAlign: \"top\",\n                height: 36,\n                wrapperStyle: {\n                  paddingBottom: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"utilization\",\n                stroke: \"#ff7300\",\n                name: \"Utilization (%)\",\n                strokeWidth: 3,\n                dot: {\n                  r: 6,\n                  fill: '#ff7300'\n                },\n                activeDot: {\n                  r: 8,\n                  stroke: '#ff7300',\n                  strokeWidth: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-graph-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Instance Count Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: chartData,\n              margin: {\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5\n              },\n              syncId: \"line-charts\",\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"stage\",\n                allowDataOverflow: false,\n                scale: \"band\",\n                type: \"category\",\n                axisLine: true,\n                tickLine: true,\n                tick: {\n                  fontSize: 12,\n                  fill: '#b4b7bd'\n                },\n                minTickGap: 10,\n                interval: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                axisLine: true,\n                tickLine: true,\n                tick: {\n                  fontSize: 12,\n                  fill: '#b4b7bd'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                verticalAlign: \"top\",\n                height: 36,\n                wrapperStyle: {\n                  paddingBottom: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"inst_count\",\n                stroke: \"#00ff00\",\n                name: \"Instance Count\",\n                strokeWidth: 3,\n                dot: {\n                  r: 6,\n                  fill: '#00ff00'\n                },\n                activeDot: {\n                  r: 8,\n                  stroke: '#00ff00',\n                  strokeWidth: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 825,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render Histograms\n  const renderHistograms = () => {\n    if (chartData.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"histograms-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Metrics Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"histograms-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"histogram-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Area Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: chartData,\n              margin: {\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5\n              },\n              syncId: \"histogram-charts\",\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"stage\",\n                allowDataOverflow: false,\n                scale: \"band\",\n                type: \"category\",\n                axisLine: true,\n                tickLine: true,\n                tick: {\n                  fontSize: 12,\n                  fill: '#b4b7bd'\n                },\n                minTickGap: 10,\n                interval: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                axisLine: true,\n                tickLine: true,\n                tick: {\n                  fontSize: 12,\n                  fill: '#b4b7bd'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 875,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                verticalAlign: \"top\",\n                height: 36,\n                wrapperStyle: {\n                  paddingBottom: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"area\",\n                fill: \"#8884d8\",\n                name: \"Area (\\u03BCm\\xB2)\",\n                radius: [4, 4, 0, 0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"histogram-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Utilization Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: chartData,\n              margin: {\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5\n              },\n              syncId: \"histogram-charts\",\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"stage\",\n                allowDataOverflow: false,\n                scale: \"band\",\n                type: \"category\",\n                axisLine: true,\n                tickLine: true,\n                tick: {\n                  fontSize: 12,\n                  fill: '#b4b7bd'\n                },\n                minTickGap: 10,\n                interval: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                axisLine: true,\n                tickLine: true,\n                tick: {\n                  fontSize: 12,\n                  fill: '#b4b7bd'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 907,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                verticalAlign: \"top\",\n                height: 36,\n                wrapperStyle: {\n                  paddingBottom: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 913,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"utilization\",\n                fill: \"#ff7300\",\n                name: \"Utilization (%)\",\n                radius: [4, 4, 0, 0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 890,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"histogram-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Instance Count Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: chartData,\n              margin: {\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5\n              },\n              syncId: \"histogram-charts\",\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 932,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"stage\",\n                allowDataOverflow: false,\n                scale: \"band\",\n                type: \"category\",\n                axisLine: true,\n                tickLine: true,\n                tick: {\n                  fontSize: 12,\n                  fill: '#b4b7bd'\n                },\n                minTickGap: 10,\n                interval: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                axisLine: true,\n                tickLine: true,\n                tick: {\n                  fontSize: 12,\n                  fill: '#b4b7bd'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 949,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                verticalAlign: \"top\",\n                height: 36,\n                wrapperStyle: {\n                  paddingBottom: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 950,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"inst_count\",\n                fill: \"#00ff00\",\n                name: \"Instance Count\",\n                radius: [4, 4, 0, 0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 951,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"engineering-charts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Engineering Charts Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Visualize engineering data by stages and metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 7\n    }, this), !selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-domain-message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-icon\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please Select a Domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a domain from the main engineering view to see the charts and filter options.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 9\n    }, this), selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter-group ${filterOptionsLoading ? 'loading' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Experiment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.experiment,\n          onChange: e => handleFilterChange('experiment', e.target.value),\n          disabled: filterOptionsLoading,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Experiments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 15\n          }, this), filterOptionsLoading ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Loading Experiments...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 17\n          }, this) : (_filterOptions$experi = filterOptions.experiments) === null || _filterOptions$experi === void 0 ? void 0 : _filterOptions$experi.map(experiment => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: experiment,\n            children: experiment\n          }, experiment, false, {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter-group ${filterOptionsLoading ? 'loading' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Block Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.block_name,\n          onChange: e => handleFilterChange('block_name', e.target.value),\n          disabled: filterOptionsLoading,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Blocks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 15\n          }, this), filterOptionsLoading ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Loading Blocks...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 17\n          }, this) : (_filterOptions$blocks = filterOptions.blocks) === null || _filterOptions$blocks === void 0 ? void 0 : _filterOptions$blocks.map(block => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: block,\n            children: block\n          }, block, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1019,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 9\n    }, this), selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-checkboxes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select up to 2 Metrics to Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-checkboxes-grid\",\n        children: metrics.map(metric => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"metric-checkbox-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedMetrics.includes(metric.key),\n            onChange: () => {\n              setSelectedMetrics(prev => {\n                if (prev.includes(metric.key)) {\n                  // Remove metric\n                  return prev.filter(m => m !== metric.key);\n                } else if (prev.length < 2) {\n                  // Add metric if less than 2 selected\n                  return [...prev, metric.key];\n                } else {\n                  // Max 2 metrics\n                  return prev;\n                }\n              });\n            },\n            disabled: !selectedMetrics.includes(metric.key) && selectedMetrics.length >= 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-checkbox-icon\",\n            style: {\n              backgroundColor: metric.color\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-checkbox-label-text\",\n            children: metric.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 17\n          }, this)]\n        }, metric.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 9\n    }, this), selectedDomainId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-section\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading chart data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 15\n        }, this) : chartData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-data-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No data available for the selected filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 15\n        }, this) : renderHeatMap()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-section\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading chart data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 15\n        }, this) : chartData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-data-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No data available for the selected filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 15\n        }, this) : renderLineGraphs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-section\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading chart data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 15\n        }, this) : chartData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-data-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No data available for the selected filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 15\n        }, this) : renderHistograms()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-section\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading chart data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 15\n        }, this) : chartData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-data-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No data available for the selected filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 15\n        }, this) : renderPieCharts()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), selectedDomainId && renderStatusChart(), selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Stages:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: chartData.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Runs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: chartData.reduce((sum, stage) => sum + stage.count, 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 13\n        }, this), selectedMetrics.map(mKey => {\n          const metric = metrics.find(m => m.key === mKey);\n\n          // Special handling for internal timing - show averages for WNS, TNS, FEP\n          if (mKey === 'internal_timing') {\n            const avgWNS = chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_wns, 0) / chartData.length).toFixed(2) : '0';\n            const avgTNS = chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_tns, 0) / chartData.length).toFixed(2) : '0';\n            const avgFEP = chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_fep, 0) / chartData.length).toFixed(2) : '0';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"Average Internal Timing:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1170,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: [\"WNS: \", avgWNS, \", TNS: \", avgTNS, \", FEP: \", avgFEP]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1171,\n                columnNumber: 21\n              }, this)]\n            }, mKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1169,\n              columnNumber: 19\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"summary-label\",\n              children: [\"Average \", metric === null || metric === void 0 ? void 0 : metric.label, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1180,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"summary-value\",\n              children: chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage[mKey], 0) / chartData.length).toFixed(2) : '0'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 19\n            }, this)]\n          }, mKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1179,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 966,\n    columnNumber: 5\n  }, this);\n};\n_s2(EngineeringCharts, \"yPddGDcqlu2VpWyHyG51YUCQk7o=\", false, function () {\n  return [useDebounce];\n});\n_c3 = EngineeringCharts;\nexport default EngineeringCharts;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"PieChartTooltip\");\n$RefreshReg$(_c3, \"EngineeringCharts\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","PieChart","Pie","Cell","LineChart","Line","AreaChart","Area","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomTooltip","active","payload","label","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","index","displayValue","value","displayName","name","dataKey","includes","timingType","split","pop","toUpperCase","toFixed","style","color","_c","PieChartTooltip","_c2","useDebounce","delay","_s","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","EngineeringCharts","selectedDomainId","projectFilters","_s2","_filterOptions$experi","_filterOptions$blocks","chartData","setChartData","loading","setLoading","filterOptionsLoading","setFilterOptionsLoading","selectedMetrics","setSelectedMetrics","filters","setFilters","project_id","experiment","block_name","filterOptions","setFilterOptions","token","localStorage","getItem","debouncedFilters","metrics","key","COLORS","fetchFilterOptions","queryParams","URLSearchParams","append","response","fetch","headers","ok","data","json","error","console","fetchChartData","result","processChartData","normalizeStage","s","lower","trim","toLowerCase","stageOrder","stageData","forEach","item","stage","count","area_sum","internal_timing_wns_sum","internal_timing_tns_sum","internal_timing_fep_sum","interface_timing_sum","utilization_sum","congestion_sum","inst_count_sum","pass_count","fail_count","error_count","parseFloat","area_um2","internalTimingWNS","internalTimingTNS","internalTimingFEP","internal_timing","timingMatches","match","firstMatch","values","interfaceTimingValue","interface_timing","timingMatch","utilization","parseInt","inst_count","congestionValue","congestion_drc_metrics","run_status","processedData","stageInfo","area","Number","internal_timing_wns","internal_timing_tns","internal_timing_fep","congestion","pass_rate","fail_rate","error_rate","log","d","wns","type","tns","fep","Object","keys","slice","handleFilterChange","prev","newFilters","memoizedChartData","memoizedStatusData","pass","fail","renderChart","width","height","margin","top","right","left","bottom","syncId","throttle","layout","barCategoryGap","barGap","strokeDasharray","allowDataOverflow","scale","axisLine","tickLine","tick","fontSize","fill","minTickGap","interval","content","animationDuration","animationEasing","cursor","isAnimationActive","verticalAlign","wrapperStyle","paddingBottom","mKey","metric","find","m","radius","onMouseEnter","renderStatusChart","stackId","renderHeatMap","heatMapData","row","backgroundColor","Math","min","renderPieCharts","areaData","utilizationData","instCountData","cx","cy","labelLine","percent","outerRadius","renderLineGraphs","stroke","strokeWidth","dot","r","activeDot","renderHistograms","onChange","e","target","disabled","experiments","blocks","block","checked","filter","reduce","sum","avgWNS","avgTNS","avgFEP","_c3","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/EngineeringCharts.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport './EngineeringCharts.css';\nimport { \n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n  PieChart, Pie, Cell, LineChart, Line, AreaChart, Area\n} from 'recharts';\n\n// Custom Tooltip Component\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"tooltip-label\">{`Stage: ${label}`}</p>\n        {payload.map((entry, index) => {\n          let displayValue = entry.value;\n          let displayName = entry.name;\n          \n          // Format timing values\n          if (entry.dataKey.includes('internal_timing_')) {\n            const timingType = entry.dataKey.split('_').pop().toUpperCase();\n            displayName = `Internal Timing ${timingType}`;\n            displayValue = entry.value.toFixed(2);\n          } else if (entry.dataKey === 'internal_timing') {\n            // Handle the combined internal timing string\n            displayName = 'Internal Timing';\n            displayValue = entry.value; // Keep as string format \"WNS/TNS/FEP\"\n          }\n          \n          return (\n            <p key={index} className=\"tooltip-value\" style={{ color: entry.color }}>\n              {`${displayName}: ${displayValue}`}\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n  return null;\n};\n\n// Custom Pie Chart Tooltip\nconst PieChartTooltip = ({ active, payload }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"tooltip-label\">{payload[0].name}</p>\n        <p className=\"tooltip-value\" style={{ color: payload[0].color }}>\n          {`Value: ${payload[0].value}`}\n        </p>\n      </div>\n    );\n  }\n  return null;\n};\n\n// Debounce hook to prevent excessive re-renders\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\n// Accept selectedDomainId and/or projectFilters as props\nconst EngineeringCharts = ({ selectedDomainId, projectFilters }) => {\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filterOptionsLoading, setFilterOptionsLoading] = useState(false);\n  // Replace single metric selection with multi-metric selection (max 2)\n  const [selectedMetrics, setSelectedMetrics] = useState(['area', 'utilization']);\n  const [filters, setFilters] = useState({\n    project_id: '',\n    experiment: '',\n    block_name: ''\n  });\n  const [filterOptions, setFilterOptions] = useState({});\n\n  const token = localStorage.getItem('token');\n\n  // Debounce filters to prevent excessive API calls\n  const debouncedFilters = useDebounce(filters, 300);\n\n  const metrics = [\n    { key: 'area', label: 'Area (μm²)', color: '#8884d8' },\n    { key: 'internal_timing', label: 'Internal Timing (WNS/TNS/FEP)', color: '#82ca9d' },\n    { key: 'interface_timing', label: 'Interface Timing', color: '#ffc658' },\n    { key: 'utilization', label: 'Utilization (%)', color: '#ff7300' },\n    { key: 'congestion', label: 'Congestion', color: '#ff0000' },\n    { key: 'inst_count', label: 'Instance Count', color: '#00ff00' }\n  ];\n\n  // Colors for pie charts\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D'];\n\n  // Memoize the fetch functions to prevent unnecessary re-renders\n  const fetchFilterOptions = useCallback(async () => {\n    try {\n      setFilterOptionsLoading(true);\n      const queryParams = new URLSearchParams();\n      if (selectedDomainId) {\n        queryParams.append('domain_id', selectedDomainId);\n      }\n      if (filters.project_id) {\n        queryParams.append('project_id', filters.project_id);\n      }\n      if (filters.block_name) {\n        queryParams.append('block_name', filters.block_name);\n      }\n\n      const response = await fetch(`http://localhost:5000/api/data/filter-options?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setFilterOptions(data);\n      }\n    } catch (error) {\n      console.error('Error fetching filter options:', error);\n    } finally {\n      setFilterOptionsLoading(false);\n    }\n  }, [selectedDomainId, filters.project_id, filters.block_name, token]);\n\n  const fetchChartData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const queryParams = new URLSearchParams();\n      \n      if (selectedDomainId) queryParams.append('domain_id', selectedDomainId);\n      if (debouncedFilters.project_id) queryParams.append('project_id', debouncedFilters.project_id);\n      if (debouncedFilters.experiment) queryParams.append('experiment', debouncedFilters.experiment);\n      if (debouncedFilters.block_name) queryParams.append('block_name', debouncedFilters.block_name);\n\n      const response = await fetch(`http://localhost:5000/api/data/pd-data?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        processChartData(result.data);\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedDomainId, debouncedFilters, token]);\n\n  useEffect(() => {\n    if (selectedDomainId) {\n      fetchFilterOptions();\n    } else {\n      // Clear filter options when no domain is selected\n      setFilterOptions({});\n    }\n  }, [fetchFilterOptions, selectedDomainId]);\n\n  useEffect(() => {\n    if (selectedDomainId) {\n      fetchChartData();\n    } else {\n      // Clear chart data when no domain is selected\n      setChartData([]);\n      setLoading(false);\n    }\n  }, [fetchChartData, selectedDomainId]);\n\n  // Add a normalization function for stage names\n  const normalizeStage = s => {\n    if (!s) return 'Unknown';\n    const lower = s.trim().toLowerCase();\n    if (lower === 'synthesis') return 'synthesis';\n    if (lower === 'floorplan') return 'Floorplan';\n    if (lower === 'placement') return 'Placement';\n    return 'Unknown';\n  };\n\n  const processChartData = useCallback((data) => {\n    // Define the expected stage order\n    const stageOrder = ['synthesis', 'Floorplan', 'Placement'];\n    \n    // Group data by stage and calculate metrics\n    const stageData = {};\n    \n    data.forEach(item => {\n      const stage = normalizeStage(item.stage);\n      if (!stageData[stage]) {\n        stageData[stage] = {\n          stage,\n          count: 0,\n          area_sum: 0,\n          internal_timing_wns_sum: 0,\n          internal_timing_tns_sum: 0,\n          internal_timing_fep_sum: 0,\n          interface_timing_sum: 0,\n          utilization_sum: 0,\n          congestion_sum: 0,\n          inst_count_sum: 0,\n          pass_count: 0,\n          fail_count: 0,\n          error_count: 0\n        };\n      }\n      \n      stageData[stage].count++;\n      stageData[stage].area_sum += parseFloat(item.area_um2) || 0;\n      \n      // Process internal timing - extract WNS, TNS, FEP values from complex strings\n      // Example: \"Setup: r2r: -0.35/-3.8/264 Hold: NA\"\n      // We extract: WNS = -0.35, TNS = -3.8, FEP = 264\n      let internalTimingWNS = 0;\n      let internalTimingTNS = 0;\n      let internalTimingFEP = 0;\n      \n      if (item.internal_timing) {\n        // Look for patterns like \"r2r: -0.35/-3.8/264\" or \"i2r: -0.02/-1.4/241\"\n        const timingMatches = item.internal_timing.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/g);\n        if (timingMatches) {\n          // Take the first match (usually r2r)\n          const firstMatch = timingMatches[0];\n          const values = firstMatch.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/);\n          if (values) {\n            internalTimingWNS = parseFloat(values[1]) || 0;\n            internalTimingTNS = parseFloat(values[2]) || 0;\n            internalTimingFEP = parseFloat(values[3]) || 0;\n          }\n        }\n      }\n      \n      stageData[stage].internal_timing_wns_sum += internalTimingWNS;\n      stageData[stage].internal_timing_tns_sum += internalTimingTNS;\n      stageData[stage].internal_timing_fep_sum += internalTimingFEP;\n      \n      // Process interface timing - extract numeric values from complex strings\n      let interfaceTimingValue = 0;\n      if (item.interface_timing) {\n        const timingMatch = item.interface_timing.match(/(-?\\d+\\.?\\d*)/);\n        if (timingMatch) {\n          interfaceTimingValue = parseFloat(timingMatch[1]);\n        }\n      }\n      stageData[stage].interface_timing_sum += interfaceTimingValue;\n      \n      stageData[stage].utilization_sum += parseFloat(item.utilization) || 0;\n      stageData[stage].inst_count_sum += parseInt(item.inst_count) || 0;\n      \n      // Handle congestion (might be text, try to extract numeric value)\n      const congestionValue = parseFloat(item.congestion_drc_metrics) || 0;\n      stageData[stage].congestion_sum += congestionValue;\n      \n      // Count status\n      if (item.run_status === 'pass') stageData[stage].pass_count++;\n      else if (item.run_status === 'fail') stageData[stage].fail_count++;\n      else if (item.run_status === 'continue_with_error') stageData[stage].error_count++;\n    });\n\n    // Calculate averages and format for charts, maintaining stage order\n    const processedData = stageOrder.map(stage => {\n      const stageInfo = stageData[stage] || {};\n      const count = stageInfo.count || 0;\n      return {\n        stage,\n        count,\n        area: count > 0 ? Number(stageInfo.area_sum) / count : 0,\n        internal_timing: count > 0 ? `${Number(stageInfo.internal_timing_wns_sum) / count}/${Number(stageInfo.internal_timing_tns_sum) / count}/${Number(stageInfo.internal_timing_fep_sum) / count}` : '0/0/0',\n        internal_timing_wns: count > 0 ? Number(stageInfo.internal_timing_wns_sum) / count : 0,\n        internal_timing_tns: count > 0 ? Number(stageInfo.internal_timing_tns_sum) / count : 0,\n        internal_timing_fep: count > 0 ? Number(stageInfo.internal_timing_fep_sum) / count : 0,\n        interface_timing: count > 0 ? Number(stageInfo.interface_timing_sum) / count : 0,\n        utilization: count > 0 ? Number(stageInfo.utilization_sum) / count : 0,\n        congestion: count > 0 ? Number(stageInfo.congestion_sum) / count : 0,\n        inst_count: count > 0 ? Number(stageInfo.inst_count_sum) / count : 0,\n        pass_rate: count > 0 ? (stageInfo.pass_count / count) * 100 : 0,\n        fail_rate: count > 0 ? (stageInfo.fail_count / count) * 100 : 0,\n        error_rate: count > 0 ? (stageInfo.error_count / count) * 100 : 0\n      };\n    });\n\n    setChartData(processedData);\n\n    // Debug: Log the processed data for each internal timing metric\n    console.log('Chart Data for WNS:', processedData.map(d => ({ stage: d.stage, wns: d.internal_timing_wns, type: typeof d.internal_timing_wns })));\n    console.log('Chart Data for TNS:', processedData.map(d => ({ stage: d.stage, tns: d.internal_timing_tns, type: typeof d.internal_timing_tns })));\n    console.log('Chart Data for FEP:', processedData.map(d => ({ stage: d.stage, fep: d.internal_timing_fep, type: typeof d.internal_timing_fep })));\n    \n    // Debug: Log the processed data\n    console.log('Processed Chart Data:', processedData);\n    console.log('Available stages in data:', Object.keys(stageData));\n    \n    // Debug: Log timing extraction for first few items\n    if (data.length > 0) {\n      console.log('Sample timing extraction:');\n      data.slice(0, 3).forEach((item, index) => {\n        if (item.internal_timing) {\n          const timingMatches = item.internal_timing.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/g);\n          console.log(`Item ${index + 1} - Stage: ${item.stage}, Internal Timing: \"${item.internal_timing}\"`);\n          if (timingMatches) {\n            const firstMatch = timingMatches[0];\n            const values = firstMatch.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/);\n            if (values) {\n              console.log(`  Extracted - WNS: ${values[1]}, TNS: ${values[2]}, FEP: ${values[3]}`);\n            }\n          } else {\n            console.log(`  No timing pattern found`);\n          }\n        }\n      });\n    }\n  }, []);\n\n  const handleFilterChange = useCallback((key, value) => {\n    setFilters(prev => {\n      const newFilters = { ...prev, [key]: value };\n      \n      // Reset dependent filters when parent filter changes\n      if (key === 'project_id') {\n        // Reset experiment and block when project changes\n        newFilters.experiment = '';\n        newFilters.block_name = '';\n        // Show loading state briefly for cascading update\n        setFilterOptionsLoading(true);\n        setTimeout(() => setFilterOptionsLoading(false), 500);\n      } else if (key === 'block_name') {\n        // Reset experiment when block changes\n        newFilters.experiment = '';\n        // Show loading state briefly for cascading update\n        setFilterOptionsLoading(true);\n        setTimeout(() => setFilterOptionsLoading(false), 500);\n      }\n      \n      return newFilters;\n    });\n  }, []);\n\n  // Memoize chart data to prevent unnecessary re-renders\n  const memoizedChartData = useMemo(() => chartData, [chartData]);\n  const memoizedStatusData = useMemo(() => {\n    if (chartData.length === 0) return [];\n    \n    return chartData.map(stage => ({\n      stage: stage.stage,\n      pass: stage.pass_rate,\n      fail: stage.fail_rate,\n      error: stage.error_rate\n    }));\n  }, [chartData]);\n\n  const renderChart = () => {\n    if (loading) {\n      return (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading chart data...</p>\n        </div>\n      );\n    }\n\n    if (chartData.length === 0) {\n      return (\n        <div className=\"no-data-container\">\n          <p>No data available for the selected filters</p>\n        </div>\n      );\n    }\n\n    // const selectedMetricData = metrics.find(m => m.key === selectedMetric); // This line is no longer needed\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart \n          data={memoizedChartData} \n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n          // Add these props to prevent blinking and improve performance\n          syncId=\"engineering-charts\"\n          throttle={100}\n          // Add these props for better stability\n          layout=\"horizontal\"\n          barCategoryGap=\"20%\"\n          barGap={0}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis \n            dataKey=\"stage\" \n            // Add these props to prevent x-axis blinking\n            allowDataOverflow={false}\n            scale=\"band\"\n            type=\"category\"\n            // Add these props for better axis stability\n            axisLine={true}\n            tickLine={true}\n            tick={{ fontSize: 12, fill: '#b4b7bd' }}\n            // Prevent axis from jumping\n            minTickGap={10}\n            interval={0}\n          />\n          <YAxis \n            // Add these props for better axis stability\n            axisLine={true}\n            tickLine={true}\n            tick={{ fontSize: 12, fill: '#b4b7bd' }}\n          />\n          <Tooltip \n            content={<CustomTooltip />}\n            // Add animation and styling props\n            animationDuration={300}\n            animationEasing=\"ease-in-out\"\n            // Add these props for better tooltip behavior\n            cursor={{ fill: 'rgba(115, 103, 240, 0.1)' }}\n            isAnimationActive={true}\n          />\n          <Legend \n            // Add these props for better legend stability\n            verticalAlign=\"top\"\n            height={36}\n            wrapperStyle={{ paddingBottom: '10px' }}\n          />\n          {/* Update main chart to render multiple Bars for selected metrics */}\n          {selectedMetrics.map(mKey => {\n            const metric = metrics.find(m => m.key === mKey);\n            return (\n              <Bar \n                key={mKey}\n                dataKey={mKey}\n                fill={metric.color}\n                name={metric.label}\n                // Add animation props\n                animationDuration={300}\n                animationEasing=\"ease-in-out\"\n                // Add these props for better bar behavior\n                radius={[4, 4, 0, 0]}\n                // Add hover effects\n                onMouseEnter={(data, index) => {\n                  // Add custom hover logic if needed\n                }}\n              />\n            );\n          })}\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderStatusChart = () => {\n    if (memoizedStatusData.length === 0) return null;\n\n    return (\n      <div className=\"status-chart-container\">\n        <h3>Run Status by Engineering Stage</h3>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart \n            data={memoizedStatusData} \n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n            // Add syncId to prevent conflicts\n            syncId=\"status-charts\"\n            throttle={100}\n            // Add these props for better stability\n            layout=\"horizontal\"\n            barCategoryGap=\"20%\"\n            barGap={0}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"stage\" \n              allowDataOverflow={false}\n              scale=\"band\"\n              type=\"category\"\n              // Add these props for better axis stability\n              axisLine={true}\n              tickLine={true}\n              tick={{ fontSize: 12, fill: '#b4b7bd' }}\n              // Prevent axis from jumping\n              minTickGap={10}\n              interval={0}\n            />\n            <YAxis \n              // Add these props for better axis stability\n              axisLine={true}\n              tickLine={true}\n              tick={{ fontSize: 12, fill: '#b4b7bd' }}\n            />\n            <Tooltip \n              content={<CustomTooltip />}\n              animationDuration={300}\n              animationEasing=\"ease-in-out\"\n              // Add these props for better tooltip behavior\n              cursor={{ fill: 'rgba(115, 103, 240, 0.1)' }}\n              isAnimationActive={true}\n            />\n            <Legend \n              // Add these props for better legend stability\n              verticalAlign=\"top\"\n              height={36}\n              wrapperStyle={{ paddingBottom: '10px' }}\n            />\n            <Bar \n              dataKey=\"pass\" \n              stackId=\"a\" \n              fill=\"#16a34a\" \n              name=\"Pass Rate (%)\"\n              animationDuration={300}\n              animationEasing=\"ease-in-out\"\n              radius={[4, 4, 0, 0]}\n            />\n            <Bar \n              dataKey=\"fail\" \n              stackId=\"a\" \n              fill=\"#dc2626\" \n              name=\"Fail Rate (%)\"\n              animationDuration={300}\n              animationEasing=\"ease-in-out\"\n              radius={[4, 4, 0, 0]}\n            />\n            <Bar \n              dataKey=\"error\" \n              stackId=\"a\" \n              fill=\"#f59e0b\" \n              name=\"Error Rate (%)\"\n              animationDuration={300}\n              animationEasing=\"ease-in-out\"\n              radius={[4, 4, 0, 0]}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  };\n\n  // Render Heat Map\n  const renderHeatMap = () => {\n    if (chartData.length === 0) return null;\n\n    // Prepare heat map data\n    const heatMapData = chartData.map(stage => ({\n      stage: stage.stage,\n      area: stage.area,\n      utilization: stage.utilization,\n      inst_count: stage.inst_count,\n      congestion: stage.congestion\n    }));\n\n    return (\n      <div className=\"heat-map-container\">\n        <h3>Metrics Heat Map by Engineering Stage</h3>\n        <div className=\"heat-map-grid\">\n          <div className=\"heat-map-header\">\n            <div className=\"heat-map-cell header\">Stage</div>\n            <div className=\"heat-map-cell header\">Area (μm²)</div>\n            <div className=\"heat-map-cell header\">Utilization (%)</div>\n            <div className=\"heat-map-cell header\">Instance Count</div>\n            <div className=\"heat-map-cell header\">Congestion</div>\n          </div>\n          {heatMapData.map((row, index) => (\n            <div key={index} className=\"heat-map-row\">\n              <div className=\"heat-map-cell stage\">{row.stage}</div>\n              <div \n                className=\"heat-map-cell metric\"\n                style={{\n                  backgroundColor: `rgba(136, 132, 216, ${Math.min(row.area / 1000, 1)})`,\n                  color: row.area > 500 ? 'white' : 'black'\n                }}\n              >\n                {row.area.toFixed(2)}\n              </div>\n              <div \n                className=\"heat-map-cell metric\"\n                style={{\n                  backgroundColor: `rgba(255, 115, 0, ${Math.min(row.utilization / 100, 1)})`,\n                  color: row.utilization > 50 ? 'white' : 'black'\n                }}\n              >\n                {row.utilization.toFixed(1)}%\n              </div>\n              <div \n                className=\"heat-map-cell metric\"\n                style={{\n                  backgroundColor: `rgba(0, 255, 0, ${Math.min(row.inst_count / 10000, 1)})`,\n                  color: row.inst_count > 5000 ? 'white' : 'black'\n                }}\n              >\n                {row.inst_count.toFixed(0)}\n              </div>\n              <div \n                className=\"heat-map-cell metric\"\n                style={{\n                  backgroundColor: `rgba(255, 0, 0, ${Math.min(row.congestion / 100, 1)})`,\n                  color: row.congestion > 50 ? 'white' : 'black'\n                }}\n              >\n                {row.congestion.toFixed(2)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  // Render Pie Charts\n  const renderPieCharts = () => {\n    if (chartData.length === 0) return null;\n\n    // Prepare pie chart data for different metrics\n    const areaData = chartData.map(stage => ({\n      name: stage.stage,\n      value: stage.area\n    }));\n\n    const utilizationData = chartData.map(stage => ({\n      name: stage.stage,\n      value: stage.utilization\n    }));\n\n    const instCountData = chartData.map(stage => ({\n      name: stage.stage,\n      value: stage.inst_count\n    }));\n\n    return (\n      <div className=\"pie-charts-container\">\n        <h3>Distribution by Engineering Stage</h3>\n        <div className=\"pie-charts-grid\">\n          <div className=\"pie-chart-item\">\n            <h4>Area Distribution</h4>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <PieChart>\n                <Pie\n                  data={areaData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {areaData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip content={<PieChartTooltip />} />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n\n          <div className=\"pie-chart-item\">\n            <h4>Utilization Distribution</h4>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <PieChart>\n                <Pie\n                  data={utilizationData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                  outerRadius={80}\n                  fill=\"#ff7300\"\n                  dataKey=\"value\"\n                >\n                  {utilizationData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip content={<PieChartTooltip />} />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n\n          <div className=\"pie-chart-item\">\n            <h4>Instance Count Distribution</h4>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <PieChart>\n                <Pie\n                  data={instCountData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                  outerRadius={80}\n                  fill=\"#00ff00\"\n                  dataKey=\"value\"\n                >\n                  {instCountData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip content={<PieChartTooltip />} />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Render Line Graphs\n  const renderLineGraphs = () => {\n    if (chartData.length === 0) return null;\n\n    return (\n      <div className=\"line-graphs-container\">\n        <h3>Trends by Engineering Stage</h3>\n        <div className=\"line-graphs-grid\">\n          <div className=\"line-graph-item\">\n            <h4>Area Trends</h4>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <LineChart\n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                syncId=\"line-charts\"\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"stage\" \n                  allowDataOverflow={false}\n                  scale=\"band\"\n                  type=\"category\"\n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                  minTickGap={10}\n                  interval={0}\n                />\n                <YAxis \n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend verticalAlign=\"top\" height={36} wrapperStyle={{ paddingBottom: '10px' }} />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"area\" \n                  stroke=\"#8884d8\" \n                  name=\"Area (μm²)\" \n                  strokeWidth={3}\n                  dot={{ r: 6, fill: '#8884d8' }}\n                  activeDot={{ r: 8, stroke: '#8884d8', strokeWidth: 2 }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n\n          <div className=\"line-graph-item\">\n            <h4>Utilization Trends</h4>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <LineChart\n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                syncId=\"line-charts\"\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"stage\" \n                  allowDataOverflow={false}\n                  scale=\"band\"\n                  type=\"category\"\n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                  minTickGap={10}\n                  interval={0}\n                />\n                <YAxis \n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend verticalAlign=\"top\" height={36} wrapperStyle={{ paddingBottom: '10px' }} />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"utilization\" \n                  stroke=\"#ff7300\" \n                  name=\"Utilization (%)\" \n                  strokeWidth={3}\n                  dot={{ r: 6, fill: '#ff7300' }}\n                  activeDot={{ r: 8, stroke: '#ff7300', strokeWidth: 2 }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n\n          <div className=\"line-graph-item\">\n            <h4>Instance Count Trends</h4>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <LineChart\n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                syncId=\"line-charts\"\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"stage\" \n                  allowDataOverflow={false}\n                  scale=\"band\"\n                  type=\"category\"\n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                  minTickGap={10}\n                  interval={0}\n                />\n                <YAxis \n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend verticalAlign=\"top\" height={36} wrapperStyle={{ paddingBottom: '10px' }} />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"inst_count\" \n                  stroke=\"#00ff00\" \n                  name=\"Instance Count\" \n                  strokeWidth={3}\n                  dot={{ r: 6, fill: '#00ff00' }}\n                  activeDot={{ r: 8, stroke: '#00ff00', strokeWidth: 2 }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Render Histograms\n  const renderHistograms = () => {\n    if (chartData.length === 0) return null;\n\n    return (\n      <div className=\"histograms-container\">\n        <h3>Metrics Distribution</h3>\n        <div className=\"histograms-grid\">\n          <div className=\"histogram-item\">\n            <h4>Area Distribution</h4>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <BarChart\n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                syncId=\"histogram-charts\"\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"stage\" \n                  allowDataOverflow={false}\n                  scale=\"band\"\n                  type=\"category\"\n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                  minTickGap={10}\n                  interval={0}\n                />\n                <YAxis \n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend verticalAlign=\"top\" height={36} wrapperStyle={{ paddingBottom: '10px' }} />\n                <Bar \n                  dataKey=\"area\" \n                  fill=\"#8884d8\" \n                  name=\"Area (μm²)\"\n                  radius={[4, 4, 0, 0]}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n\n          <div className=\"histogram-item\">\n            <h4>Utilization Distribution</h4>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <BarChart\n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                syncId=\"histogram-charts\"\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"stage\" \n                  allowDataOverflow={false}\n                  scale=\"band\"\n                  type=\"category\"\n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                  minTickGap={10}\n                  interval={0}\n                />\n                <YAxis \n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend verticalAlign=\"top\" height={36} wrapperStyle={{ paddingBottom: '10px' }} />\n                <Bar \n                  dataKey=\"utilization\" \n                  fill=\"#ff7300\" \n                  name=\"Utilization (%)\"\n                  radius={[4, 4, 0, 0]}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n\n          <div className=\"histogram-item\">\n            <h4>Instance Count Distribution</h4>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <BarChart\n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                syncId=\"histogram-charts\"\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"stage\" \n                  allowDataOverflow={false}\n                  scale=\"band\"\n                  type=\"category\"\n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                  minTickGap={10}\n                  interval={0}\n                />\n                <YAxis \n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend verticalAlign=\"top\" height={36} wrapperStyle={{ paddingBottom: '10px' }} />\n                <Bar \n                  dataKey=\"inst_count\" \n                  fill=\"#00ff00\" \n                  name=\"Instance Count\"\n                  radius={[4, 4, 0, 0]}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"engineering-charts\">\n      <div className=\"charts-header\">\n        <h2>Engineering Charts Dashboard</h2>\n        <p>Visualize engineering data by stages and metrics</p>\n      </div>\n\n      {/* Show message when no domain is selected */}\n      {!selectedDomainId && (\n        <div className=\"no-domain-message\">\n          <div className=\"message-container\">\n            <div className=\"message-icon\">📊</div>\n            <h3>Please Select a Domain</h3>\n            <p>Choose a domain from the main engineering view to see the charts and filter options.</p>\n          </div>\n        </div>\n      )}\n\n      {/* Filters Section - Only show when domain is selected */}\n      {selectedDomainId && (\n        <div className=\"filters-section\">\n          {/* Removed Project Filter Dropdown */}\n          <div className={`filter-group ${filterOptionsLoading ? 'loading' : ''}`}>\n            <label>Experiment:</label>\n            <select \n              value={filters.experiment} \n              onChange={(e) => handleFilterChange('experiment', e.target.value)}\n              disabled={filterOptionsLoading}\n            >\n              <option value=\"\">All Experiments</option>\n              {filterOptionsLoading ? (\n                <option value=\"\">Loading Experiments...</option>\n              ) : (\n                filterOptions.experiments?.map(experiment => (\n                  <option key={experiment} value={experiment}>\n                    {experiment}\n                  </option>\n                ))\n              )}\n            </select>\n          </div>\n\n          <div className={`filter-group ${filterOptionsLoading ? 'loading' : ''}`}>\n            <label>Block Name:</label>\n            <select \n              value={filters.block_name} \n              onChange={(e) => handleFilterChange('block_name', e.target.value)}\n              disabled={filterOptionsLoading}\n            >\n              <option value=\"\">All Blocks</option>\n              {filterOptionsLoading ? (\n                <option value=\"\">Loading Blocks...</option>\n              ) : (\n                filterOptions.blocks?.map(block => (\n                  <option key={block} value={block}>\n                    {block}\n                  </option>\n                ))\n              )}\n            </select>\n          </div>\n        </div>\n      )}\n\n      {/* Metric Selection Buttons - Only show when domain is selected */}\n      {selectedDomainId && (\n        <div className=\"metric-checkboxes\">\n          <h3>Select up to 2 Metrics to Display</h3>\n          <div className=\"metric-checkboxes-grid\">\n            {metrics.map(metric => (\n              <label key={metric.key} className=\"metric-checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedMetrics.includes(metric.key)}\n                  onChange={() => {\n                    setSelectedMetrics(prev => {\n                      if (prev.includes(metric.key)) {\n                        // Remove metric\n                        return prev.filter(m => m !== metric.key);\n                      } else if (prev.length < 2) {\n                        // Add metric if less than 2 selected\n                        return [...prev, metric.key];\n                      } else {\n                        // Max 2 metrics\n                        return prev;\n                      }\n                    });\n                  }}\n                  disabled={\n                    !selectedMetrics.includes(metric.key) && selectedMetrics.length >= 2\n                  }\n                />\n                <span className=\"metric-checkbox-icon\" style={{ backgroundColor: metric.color }}></span>\n                <span className=\"metric-checkbox-label-text\">{metric.label}</span>\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Charts Section - Only show when domain is selected */}\n      {selectedDomainId && (\n        <>\n          {/* Heat Map */}\n          <div className=\"charts-section\">\n            {loading ? (\n              <div className=\"loading-container\">\n                <div className=\"loading-spinner\"></div>\n                <p>Loading chart data...</p>\n              </div>\n            ) : chartData.length === 0 ? (\n              <div className=\"no-data-container\">\n                <p>No data available for the selected filters</p>\n              </div>\n            ) : (\n              renderHeatMap()\n            )}\n          </div>\n\n          {/* Line Graphs */}\n          <div className=\"charts-section\">\n            {loading ? (\n              <div className=\"loading-container\">\n                <div className=\"loading-spinner\"></div>\n                <p>Loading chart data...</p>\n              </div>\n            ) : chartData.length === 0 ? (\n              <div className=\"no-data-container\">\n                <p>No data available for the selected filters</p>\n              </div>\n            ) : (\n              renderLineGraphs()\n            )}\n          </div>\n\n          {/* Histograms */}\n          <div className=\"charts-section\">\n            {loading ? (\n              <div className=\"loading-container\">\n                <div className=\"loading-spinner\"></div>\n                <p>Loading chart data...</p>\n              </div>\n            ) : chartData.length === 0 ? (\n              <div className=\"no-data-container\">\n                <p>No data available for the selected filters</p>\n              </div>\n            ) : (\n              renderHistograms()\n            )}\n          </div>\n\n          {/* Pie Charts */}\n          <div className=\"charts-section\">\n            {loading ? (\n              <div className=\"loading-container\">\n                <div className=\"loading-spinner\"></div>\n                <p>Loading chart data...</p>\n              </div>\n            ) : chartData.length === 0 ? (\n              <div className=\"no-data-container\">\n                <p>No data available for the selected filters</p>\n              </div>\n            ) : (\n              renderPieCharts()\n            )}\n          </div>\n        </>\n      )}\n\n      {/* Status Chart - Only show when domain is selected */}\n      {selectedDomainId && renderStatusChart()}\n\n      {/* Data Summary - Only show when domain is selected */}\n      {selectedDomainId && (\n        <div className=\"data-summary\">\n          <h3>Data Summary</h3>\n          <div className=\"summary-grid\">\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Total Stages:</span>\n              <span className=\"summary-value\">{chartData.length}</span>\n            </div>\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Total Runs:</span>\n              <span className=\"summary-value\">\n                {chartData.reduce((sum, stage) => sum + stage.count, 0)}\n              </span>\n            </div>\n            {/* Show average for each selected metric */}\n            {selectedMetrics.map(mKey => {\n              const metric = metrics.find(m => m.key === mKey);\n              \n              // Special handling for internal timing - show averages for WNS, TNS, FEP\n              if (mKey === 'internal_timing') {\n                const avgWNS = chartData.length > 0 \n                  ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_wns, 0) / chartData.length).toFixed(2)\n                  : '0';\n                const avgTNS = chartData.length > 0 \n                  ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_tns, 0) / chartData.length).toFixed(2)\n                  : '0';\n                const avgFEP = chartData.length > 0 \n                  ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_fep, 0) / chartData.length).toFixed(2)\n                  : '0';\n                \n                return (\n                  <div className=\"summary-item\" key={mKey}>\n                    <span className=\"summary-label\">Average Internal Timing:</span>\n                    <span className=\"summary-value\">\n                      WNS: {avgWNS}, TNS: {avgTNS}, FEP: {avgFEP}\n                    </span>\n                  </div>\n                );\n              }\n              \n              return (\n                <div className=\"summary-item\" key={mKey}>\n                  <span className=\"summary-label\">Average {metric?.label}:</span>\n                  <span className=\"summary-value\">\n                    {chartData.length > 0 \n                      ? (chartData.reduce((sum, stage) => sum + stage[mKey], 0) / chartData.length).toFixed(2)\n                      : '0'\n                    }\n                  </span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EngineeringCharts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}