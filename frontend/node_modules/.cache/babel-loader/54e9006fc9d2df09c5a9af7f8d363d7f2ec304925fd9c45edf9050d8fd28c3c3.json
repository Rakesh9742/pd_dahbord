{"ast":null,"code":"import { useMemo as e, createElement as t, useCallback as a, useState as i, forwardRef as n, Fragment as l, useRef as r, useEffect as o } from \"react\";\nimport { Axes as d, Grid as u, renderGridLinesToCanvas as s, renderAxesToCanvas as c } from \"@nivo/axes\";\nimport { getPropertyAccessor as h, usePropertyAccessor as f, useValueFormatter as b, Container as g, useMotionConfig as v, useDimensions as m, bindDefs as p, CartesianMarkers as y, SvgWrapper as x, getRelativeCursor as S, mergeRefs as k, isCursorInRect as w, ResponsiveWrapper as L } from \"@nivo/core\";\nimport { animated as C, to as W, useTransition as M } from \"@react-spring/web\";\nimport { useAnnotations as B, Annotation as R, useComputedAnnotations as O, renderAnnotationsToCanvas as I } from \"@nivo/annotations\";\nimport { jsx as V, Fragment as T, jsxs as H } from \"react/jsx-runtime\";\nimport { BoxLegendSvg as P, renderLegendToCanvas as E } from \"@nivo/legends\";\nimport { useOrdinalColorScale as F, useInheritedColor as z } from \"@nivo/colors\";\nimport { useTheme as D } from \"@nivo/theming\";\nimport { useTooltip as A, BasicTooltip as X } from \"@nivo/tooltip\";\nimport { Text as Y, drawCanvasText as G, setCanvasFont as N } from \"@nivo/text\";\nimport { roundedRect as j } from \"@nivo/canvas\";\nimport { computeScale as K } from \"@nivo/scales\";\nimport { stack as _, stackOffsetDiverging as q } from \"d3-shape\";\nimport J from \"lodash/uniqBy.js\";\nfunction Q() {\n  return Q = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var a = arguments[t];\n      for (var i in a) ({}).hasOwnProperty.call(a, i) && (e[i] = a[i]);\n    }\n    return e;\n  }, Q.apply(null, arguments);\n}\nfunction U(e, t) {\n  if (null == e) return {};\n  var a = {};\n  for (var i in e) if ({}.hasOwnProperty.call(e, i)) {\n    if (-1 !== t.indexOf(i)) continue;\n    a[i] = e[i];\n  }\n  return a;\n}\nvar Z,\n  $ = function (e) {\n    var t = e.bars,\n      a = e.annotations,\n      i = B({\n        data: t,\n        annotations: a,\n        getPosition: function (e) {\n          return {\n            x: e.x + e.width / 2,\n            y: e.y + e.height / 2\n          };\n        },\n        getDimensions: function (e) {\n          var t = e.height,\n            a = e.width;\n          return {\n            width: a,\n            height: t,\n            size: Math.max(a, t)\n          };\n        }\n      });\n    return V(T, {\n      children: i.map(function (e, t) {\n        return V(R, Q({}, e), t);\n      })\n    });\n  },\n  ee = function (e) {\n    var t = e.width,\n      a = e.height,\n      i = e.legends,\n      n = e.toggleSerie;\n    return V(T, {\n      children: i.map(function (e, i) {\n        var l,\n          r = e[0],\n          o = e[1];\n        return V(P, Q({}, r, {\n          containerWidth: t,\n          containerHeight: a,\n          data: null != (l = r.data) ? l : o,\n          toggleSerie: r.toggleSerie && \"keys\" === r.dataFrom ? n : void 0\n        }), i);\n      })\n    });\n  },\n  te = [\"data\"],\n  ae = function (i) {\n    var n,\n      l = i.bar,\n      r = l.data,\n      o = U(l, te),\n      d = i.style,\n      u = d.borderColor,\n      s = d.color,\n      c = d.height,\n      h = d.labelColor,\n      f = d.labelOpacity,\n      b = d.labelX,\n      g = d.labelY,\n      v = d.transform,\n      m = d.width,\n      p = d.textAnchor,\n      y = i.borderRadius,\n      x = i.borderWidth,\n      S = i.label,\n      k = i.shouldRenderLabel,\n      w = i.isInteractive,\n      L = i.onClick,\n      M = i.onMouseEnter,\n      B = i.onMouseLeave,\n      R = i.tooltip,\n      O = i.isFocusable,\n      I = i.ariaLabel,\n      T = i.ariaLabelledBy,\n      P = i.ariaDescribedBy,\n      E = i.ariaDisabled,\n      F = i.ariaHidden,\n      z = D(),\n      X = A(),\n      G = X.showTooltipFromEvent,\n      N = X.showTooltipAt,\n      j = X.hideTooltip,\n      K = e(function () {\n        return function () {\n          return t(R, Q({}, o, r));\n        };\n      }, [R, o, r]),\n      _ = a(function (e) {\n        null == L || L(Q({\n          color: o.color\n        }, r), e);\n      }, [o, r, L]),\n      q = a(function (e) {\n        return G(K(), e);\n      }, [G, K]),\n      J = a(function (e) {\n        null == M || M(r, e), G(K(), e);\n      }, [r, M, G, K]),\n      Z = a(function (e) {\n        null == B || B(r, e), j();\n      }, [r, j, B]),\n      $ = a(function () {\n        N(K(), [o.absX + o.width / 2, o.absY]);\n      }, [N, K, o]),\n      ee = a(function () {\n        j();\n      }, [j]);\n    return H(C.g, {\n      transform: v,\n      children: [V(C.rect, {\n        width: W(m, function (e) {\n          return Math.max(e, 0);\n        }),\n        height: W(c, function (e) {\n          return Math.max(e, 0);\n        }),\n        rx: y,\n        ry: y,\n        fill: null != (n = r.fill) ? n : s,\n        strokeWidth: x,\n        stroke: u,\n        focusable: O,\n        tabIndex: O ? 0 : void 0,\n        \"aria-label\": I ? I(r) : void 0,\n        \"aria-labelledby\": T ? T(r) : void 0,\n        \"aria-describedby\": P ? P(r) : void 0,\n        \"aria-disabled\": E ? E(r) : void 0,\n        \"aria-hidden\": F ? F(r) : void 0,\n        onMouseEnter: w ? J : void 0,\n        onMouseMove: w ? q : void 0,\n        onMouseLeave: w ? Z : void 0,\n        onClick: w ? _ : void 0,\n        onFocus: w && O ? $ : void 0,\n        onBlur: w && O ? ee : void 0,\n        \"data-testid\": \"bar.item.\" + r.id + \".\" + r.index\n      }), k && V(Y, {\n        x: b,\n        y: g,\n        textAnchor: p,\n        dominantBaseline: \"central\",\n        fillOpacity: f,\n        style: Q({}, z.labels.text, {\n          pointerEvents: \"none\",\n          fill: h\n        }),\n        children: S\n      })]\n    });\n  },\n  ie = [\"color\", \"label\"],\n  ne = function (e) {\n    var t = e.color,\n      a = e.label,\n      i = U(e, ie);\n    return V(X, {\n      id: a,\n      value: i.formattedValue,\n      enableChip: !0,\n      color: t\n    });\n  },\n  le = {\n    indexBy: \"id\",\n    keys: [\"value\"],\n    groupMode: \"stacked\",\n    layout: \"vertical\",\n    valueScale: {\n      type: \"linear\",\n      nice: !0,\n      round: !1\n    },\n    indexScale: {\n      type: \"band\",\n      round: !1\n    },\n    padding: .1,\n    innerPadding: 0,\n    enableGridX: !1,\n    enableGridY: !0,\n    enableLabel: !0,\n    label: \"formattedValue\",\n    labelPosition: \"middle\",\n    labelOffset: 0,\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: {\n      theme: \"labels.text.fill\"\n    },\n    colorBy: \"id\",\n    colors: {\n      scheme: \"nivo\"\n    },\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: {\n      from: \"color\"\n    },\n    isInteractive: !0,\n    tooltip: ne,\n    tooltipLabel: function (e) {\n      return e.id + \" - \" + e.indexValue;\n    },\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    enableTotals: !1,\n    totalsOffset: 10\n  },\n  re = Q({}, le, {\n    layers: [\"grid\", \"axes\", \"bars\", \"totals\", \"markers\", \"legends\", \"annotations\"],\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {},\n    axisLeft: {},\n    barComponent: ae,\n    defs: [],\n    fill: [],\n    markers: [],\n    animate: !0,\n    animateOnMount: !1,\n    motionConfig: \"default\",\n    role: \"img\",\n    isFocusable: !1\n  }),\n  oe = Q({}, le, {\n    layers: [\"grid\", \"axes\", \"bars\", \"totals\", \"legends\", \"annotations\"],\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {},\n    axisLeft: {},\n    renderBar: function (e, t) {\n      var a = t.bar,\n        i = a.color,\n        n = a.height,\n        l = a.width,\n        r = a.x,\n        o = a.y,\n        d = t.borderColor,\n        u = t.borderRadius,\n        s = t.borderWidth,\n        c = t.label,\n        h = t.shouldRenderLabel,\n        f = t.labelStyle,\n        b = t.labelX,\n        g = t.labelY,\n        v = t.textAnchor;\n      e.fillStyle = i, s > 0 && (e.strokeStyle = d, e.lineWidth = s), e.beginPath(), j(e, r, o, l, n, Math.min(u, n)), e.fill(), s > 0 && e.stroke(), h && (e.textBaseline = \"middle\", e.textAlign = \"middle\" === v ? \"center\" : v, G(e, f, c, r + b, o + g));\n    },\n    pixelRatio: \"undefined\" != typeof window && null != (Z = window.devicePixelRatio) ? Z : 1\n  }),\n  de = function (e, t, a, i, n, l) {\n    return K(i, {\n      all: e.map(t),\n      min: 0,\n      max: 0\n    }, n, l).padding(a);\n  },\n  ue = function (e, t) {\n    return e.map(function (e) {\n      return Q({}, t.reduce(function (e, t) {\n        return e[t] = null, e;\n      }, {}), e);\n    });\n  },\n  se = function (e) {\n    return Object.keys(e).reduce(function (t, a) {\n      return e[a] && (t[a] = e[a]), t;\n    }, {});\n  },\n  ce = function (e) {\n    return [e, Number(e)];\n  };\nfunction he(e, t, a, i) {\n  return void 0 === e && (e = le.layout), void 0 === a && (a = le.labelPosition), void 0 === i && (i = le.labelOffset), function (n, l) {\n    var r = i * (t ? -1 : 1);\n    if (\"horizontal\" === e) {\n      var o = n / 2;\n      return \"start\" === a ? o = t ? n : 0 : \"end\" === a && (o = t ? 0 : n), {\n        labelX: o + r,\n        labelY: l / 2,\n        textAnchor: \"middle\" === a ? \"middle\" : t ? \"end\" : \"start\"\n      };\n    }\n    var d = l / 2;\n    return \"start\" === a ? d = t ? 0 : l : \"end\" === a && (d = t ? l : 0), {\n      labelX: n / 2,\n      labelY: d - r,\n      textAnchor: \"middle\"\n    };\n  };\n}\nvar fe = [\"layout\", \"width\", \"height\", \"padding\", \"innerPadding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n  be = function (e, t) {\n    return e > t;\n  },\n  ge = function (e, t) {\n    return e < t;\n  },\n  ve = function (e, t) {\n    return Array.from(\" \".repeat(t - e), function (t, a) {\n      return e + a;\n    });\n  },\n  me = function (e) {\n    return be(e, 0) ? 0 : e;\n  },\n  pe = function (e, t, a, i) {\n    var n = e.data,\n      l = e.formatValue,\n      r = e.getColor,\n      o = e.getIndex,\n      d = e.getTooltipLabel,\n      u = e.innerPadding,\n      s = void 0 === u ? 0 : u,\n      c = e.keys,\n      h = e.xScale,\n      f = e.yScale,\n      b = e.margin,\n      g = a ? ge : be,\n      v = n.map(se),\n      m = [];\n    return c.forEach(function (e, a) {\n      return ve(0, h.domain().length).forEach(function (u) {\n        var c,\n          p,\n          y,\n          x = ce(n[u][e]),\n          S = x[0],\n          k = x[1],\n          w = o(n[u]),\n          L = (null != (c = h(w)) ? c : 0) + t * a + s * a,\n          C = g(p = k, 0) ? null != (y = f(p)) ? y : 0 : i,\n          W = function (e, t) {\n            var a;\n            return g(e, 0) ? i - t : (null != (a = f(e)) ? a : 0) - i;\n          }(k, C),\n          M = {\n            id: e,\n            value: null === S ? S : k,\n            formattedValue: l(k),\n            hidden: !1,\n            index: u,\n            indexValue: w,\n            data: v[u]\n          };\n        m.push({\n          key: e + \".\" + M.indexValue,\n          index: m.length,\n          data: M,\n          x: L,\n          y: C,\n          absX: b.left + L,\n          absY: b.top + C,\n          width: t,\n          height: W,\n          color: r(M),\n          label: d(M)\n        });\n      });\n    }), m;\n  },\n  ye = function (e, t, a, i) {\n    var n = e.data,\n      l = e.formatValue,\n      r = e.getIndex,\n      o = e.getColor,\n      d = e.getTooltipLabel,\n      u = e.keys,\n      s = e.innerPadding,\n      c = void 0 === s ? 0 : s,\n      h = e.xScale,\n      f = e.yScale,\n      b = e.margin,\n      g = a ? ge : be,\n      v = n.map(se),\n      m = [];\n    return u.forEach(function (e, a) {\n      return ve(0, f.domain().length).forEach(function (u) {\n        var s,\n          p,\n          y,\n          x = ce(n[u][e]),\n          S = x[0],\n          k = x[1],\n          w = r(n[u]),\n          L = g(p = k, 0) ? i : null != (y = h(p)) ? y : 0,\n          C = (null != (s = f(w)) ? s : 0) + t * a + c * a,\n          W = function (e, t) {\n            var a;\n            return g(e, 0) ? (null != (a = h(e)) ? a : 0) - i : i - t;\n          }(k, L),\n          M = {\n            id: e,\n            value: null === S ? S : k,\n            formattedValue: l(k),\n            hidden: !1,\n            index: u,\n            indexValue: w,\n            data: v[u]\n          };\n        m.push({\n          key: e + \".\" + M.indexValue,\n          index: m.length,\n          data: M,\n          x: L,\n          y: C,\n          absX: b.left + L,\n          absY: b.top + C,\n          width: W,\n          height: t,\n          color: o(M),\n          label: d(M)\n        });\n      });\n    }), m;\n  },\n  xe = function (e) {\n    var t,\n      a,\n      i,\n      n = e.layout,\n      l = e.width,\n      r = e.height,\n      o = e.padding,\n      d = void 0 === o ? 0 : o,\n      u = e.innerPadding,\n      s = void 0 === u ? 0 : u,\n      c = e.valueScale,\n      h = e.indexScale,\n      f = e.hiddenIds,\n      b = void 0 === f ? [] : f,\n      g = U(e, fe),\n      v = g.keys.filter(function (e) {\n        return !b.includes(e);\n      }),\n      m = ue(g.data, v),\n      p = \"vertical\" === n ? [\"y\", \"x\", l] : [\"x\", \"y\", r],\n      y = p[0],\n      x = p[1],\n      S = p[2],\n      k = de(m, g.getIndex, d, h, S, x),\n      w = \"auto\" === c.min ? me : function (e) {\n        return e;\n      },\n      L = m.reduce(function (e, t) {\n        return [].concat(e, v.map(function (e) {\n          return t[e];\n        }));\n      }, []).filter(Boolean),\n      C = w(Math.min.apply(Math, L)),\n      W = (i = Math.max.apply(Math, L), isFinite(i) ? i : 0),\n      M = K(c, {\n        all: L,\n        min: C,\n        max: W\n      }, \"x\" === y ? l : r, y),\n      B = \"vertical\" === n ? [k, M] : [M, k],\n      R = B[0],\n      O = B[1],\n      I = (k.bandwidth() - s * (v.length - 1)) / v.length,\n      V = [Q({}, g, {\n        data: m,\n        keys: v,\n        innerPadding: s,\n        xScale: R,\n        yScale: O\n      }), I, null != (t = c.reverse) && t, null != (a = M(0)) ? a : 0];\n    return {\n      xScale: R,\n      yScale: O,\n      bars: I > 0 ? \"vertical\" === n ? pe.apply(void 0, V) : ye.apply(void 0, V) : []\n    };\n  },\n  Se = [\"data\", \"layout\", \"width\", \"height\", \"padding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n  ke = function (e) {\n    var t;\n    return e.some(Array.isArray) ? ke((t = []).concat.apply(t, e)) : e;\n  },\n  we = function (e, t, a) {\n    var i = e.formatValue,\n      n = e.getColor,\n      l = e.getIndex,\n      r = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      s = e.yScale,\n      c = e.margin,\n      h = [];\n    return d.forEach(function (e) {\n      return u.domain().forEach(function (d, f) {\n        var b,\n          g,\n          v = e[f],\n          m = null != (b = u(l(v.data))) ? b : 0,\n          p = (null != (g = function (e) {\n            return s(e[a ? 0 : 1]);\n          }(v)) ? g : 0) + .5 * o,\n          y = function (e, t) {\n            var i;\n            return (null != (i = s(e[a ? 1 : 0])) ? i : 0) - t;\n          }(v, p) - o,\n          x = ce(v.data[e.key]),\n          S = x[0],\n          k = x[1],\n          w = {\n            id: e.key,\n            value: null === S ? S : k,\n            formattedValue: i(k),\n            hidden: !1,\n            index: f,\n            indexValue: d,\n            data: se(v.data)\n          };\n        h.push({\n          key: e.key + \".\" + d,\n          index: h.length,\n          data: w,\n          x: m,\n          y: p,\n          absX: c.left + m,\n          absY: c.top + p,\n          width: t,\n          height: y,\n          color: n(w),\n          label: r(w)\n        });\n      });\n    }), h;\n  },\n  Le = function (e, t, a) {\n    var i = e.formatValue,\n      n = e.getColor,\n      l = e.getIndex,\n      r = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      s = e.yScale,\n      c = e.margin,\n      h = [];\n    return d.forEach(function (e) {\n      return s.domain().forEach(function (d, f) {\n        var b,\n          g,\n          v = e[f],\n          m = null != (b = s(l(v.data))) ? b : 0,\n          p = (null != (g = function (e) {\n            return u(e[a ? 1 : 0]);\n          }(v)) ? g : 0) + .5 * o,\n          y = function (e, t) {\n            var i;\n            return (null != (i = u(e[a ? 0 : 1])) ? i : 0) - t;\n          }(v, p) - o,\n          x = ce(v.data[e.key]),\n          S = x[0],\n          k = x[1],\n          w = {\n            id: e.key,\n            value: null === S ? S : k,\n            formattedValue: i(k),\n            hidden: !1,\n            index: f,\n            indexValue: d,\n            data: se(v.data)\n          };\n        h.push({\n          key: e.key + \".\" + d,\n          index: h.length,\n          data: w,\n          x: p,\n          y: m,\n          absX: c.left + p,\n          absY: c.top + m,\n          width: y,\n          height: t,\n          color: n(w),\n          label: r(w)\n        });\n      });\n    }), h;\n  },\n  Ce = function (e) {\n    var t,\n      a,\n      i = e.data,\n      n = e.layout,\n      l = e.width,\n      r = e.height,\n      o = e.padding,\n      d = void 0 === o ? 0 : o,\n      u = e.valueScale,\n      s = e.indexScale,\n      c = e.hiddenIds,\n      h = void 0 === c ? [] : c,\n      f = U(e, Se),\n      b = f.keys.filter(function (e) {\n        return !h.includes(e);\n      }),\n      g = _().keys(b).offset(q)(ue(i, b)),\n      v = \"vertical\" === n ? [\"y\", \"x\", l] : [\"x\", \"y\", r],\n      m = v[0],\n      p = v[1],\n      y = v[2],\n      x = de(i, f.getIndex, d, s, y, p),\n      S = (a = ke(g), \"log\" === u.type ? a.filter(function (e) {\n        return 0 !== e;\n      }) : a),\n      k = Math.min.apply(Math, S),\n      w = Math.max.apply(Math, S),\n      L = K(u, {\n        all: S,\n        min: k,\n        max: w\n      }, \"x\" === m ? l : r, m),\n      C = \"vertical\" === n ? [x, L] : [L, x],\n      W = C[0],\n      M = C[1],\n      B = f.innerPadding > 0 ? f.innerPadding : 0,\n      R = x.bandwidth(),\n      O = [Q({}, f, {\n        innerPadding: B,\n        stackedData: g,\n        xScale: W,\n        yScale: M\n      }), R, null != (t = u.reverse) && t];\n    return {\n      xScale: W,\n      yScale: M,\n      bars: R > 0 ? \"vertical\" === n ? we.apply(void 0, O) : Le.apply(void 0, O) : []\n    };\n  },\n  We = function (e) {\n    var t = e.bars,\n      a = e.direction,\n      i = e.from,\n      n = e.groupMode,\n      l = e.layout,\n      r = e.legendLabel,\n      o = e.reverse,\n      d = h(null != r ? r : \"indexes\" === i ? \"indexValue\" : \"id\");\n    return \"indexes\" === i ? function (e, t, a) {\n      var i = J(e.map(function (e) {\n        var t, i;\n        return {\n          id: null != (t = e.data.indexValue) ? t : \"\",\n          label: a(e.data),\n          hidden: e.data.hidden,\n          color: null != (i = e.color) ? i : \"#000\"\n        };\n      }), function (e) {\n        return e.id;\n      });\n      return \"horizontal\" === t && i.reverse(), i;\n    }(t, l, d) : function (e, t, a, i, n, l) {\n      var r = J(e.map(function (e) {\n        var t;\n        return {\n          id: e.data.id,\n          label: l(e.data),\n          hidden: e.data.hidden,\n          color: null != (t = e.color) ? t : \"#000\"\n        };\n      }), function (e) {\n        return e.id;\n      });\n      return (\"vertical\" === t && \"stacked\" === i && \"column\" === a && !0 !== n || \"horizontal\" === t && \"stacked\" === i && !0 === n) && r.reverse(), r;\n    }(t, l, a, n, o, d);\n  },\n  Me = function (e, t, a) {\n    var i = e.get(t) || 0;\n    e.set(t, i + a);\n  },\n  Be = function (e, t, a) {\n    var i = e.get(t) || 0;\n    e.set(t, i + (a > 0 ? a : 0));\n  },\n  Re = function (e, t, a) {\n    var i = e.get(t) || 0;\n    e.set(t, Math.max(i, Number(a)));\n  },\n  Oe = function (e, t) {\n    var a = e.get(t) || 0;\n    e.set(t, a + 1);\n  },\n  Ie = function (t) {\n    var n,\n      l = t.indexBy,\n      r = void 0 === l ? le.indexBy : l,\n      o = t.keys,\n      d = void 0 === o ? le.keys : o,\n      u = t.label,\n      s = void 0 === u ? le.label : u,\n      c = t.tooltipLabel,\n      h = void 0 === c ? le.tooltipLabel : c,\n      g = t.valueFormat,\n      v = t.colors,\n      m = void 0 === v ? le.colors : v,\n      p = t.colorBy,\n      y = void 0 === p ? le.colorBy : p,\n      x = t.borderColor,\n      S = void 0 === x ? le.borderColor : x,\n      k = t.labelTextColor,\n      w = void 0 === k ? le.labelTextColor : k,\n      L = t.groupMode,\n      C = void 0 === L ? le.groupMode : L,\n      W = t.layout,\n      M = void 0 === W ? le.layout : W,\n      B = t.data,\n      R = t.margin,\n      O = t.width,\n      I = t.height,\n      V = t.padding,\n      T = void 0 === V ? le.padding : V,\n      H = t.innerPadding,\n      P = void 0 === H ? le.innerPadding : H,\n      E = t.valueScale,\n      A = void 0 === E ? le.valueScale : E,\n      X = t.indexScale,\n      Y = void 0 === X ? le.indexScale : X,\n      G = t.initialHiddenIds,\n      N = void 0 === G ? le.initialHiddenIds : G,\n      j = t.enableLabel,\n      K = void 0 === j ? le.enableLabel : j,\n      _ = t.labelSkipWidth,\n      q = void 0 === _ ? le.labelSkipWidth : _,\n      J = t.labelSkipHeight,\n      U = void 0 === J ? le.labelSkipHeight : J,\n      Z = t.legends,\n      $ = void 0 === Z ? le.legends : Z,\n      ee = t.legendLabel,\n      te = t.totalsOffset,\n      ae = void 0 === te ? le.totalsOffset : te,\n      ie = i(null != N ? N : []),\n      ne = ie[0],\n      re = ie[1],\n      oe = a(function (e) {\n        re(function (t) {\n          return t.indexOf(e) > -1 ? t.filter(function (t) {\n            return t !== e;\n          }) : [].concat(t, [e]);\n        });\n      }, []),\n      de = f(r),\n      ue = f(s),\n      se = f(h),\n      ce = b(g),\n      he = D(),\n      fe = F(m, y),\n      be = z(S, he),\n      ge = z(w, he),\n      ve = (\"grouped\" === C ? xe : Ce)({\n        layout: M,\n        data: B,\n        getIndex: de,\n        keys: d,\n        width: O,\n        height: I,\n        getColor: fe,\n        padding: T,\n        innerPadding: P,\n        valueScale: A,\n        indexScale: Y,\n        hiddenIds: ne,\n        formatValue: ce,\n        getTooltipLabel: se,\n        margin: R\n      }),\n      me = ve.bars,\n      pe = ve.xScale,\n      ye = ve.yScale,\n      Se = e(function () {\n        return me.filter(function (e) {\n          return null !== e.data.value;\n        }).map(function (e, t) {\n          return Q({}, e, {\n            index: t\n          });\n        });\n      }, [me]),\n      ke = a(function (e) {\n        var t = e.width,\n          a = e.height;\n        return !!K && !(q > 0 && t < q) && !(U > 0 && a < U);\n      }, [K, q, U]),\n      we = e(function () {\n        return d.map(function (e) {\n          var t = me.find(function (t) {\n            return t.data.id === e;\n          });\n          return Q({}, t, {\n            data: Q({\n              id: e\n            }, null == t ? void 0 : t.data, {\n              hidden: ne.includes(e)\n            })\n          });\n        });\n      }, [ne, d, me]),\n      Le = null != (n = A.reverse) && n,\n      Ie = e(function () {\n        return $.map(function (e) {\n          return [e, We({\n            bars: \"keys\" === e.dataFrom ? we : me,\n            direction: e.direction,\n            from: e.dataFrom,\n            groupMode: C,\n            layout: M,\n            legendLabel: ee,\n            reverse: Le\n          })];\n        });\n      }, [$, we, me, C, M, ee, Le]),\n      Ve = e(function () {\n        return function (e, t, a, i, n, l, r) {\n          void 0 === i && (i = le.layout), void 0 === n && (n = le.groupMode);\n          var o = [];\n          if (0 === e.length) return o;\n          var d = new Map(),\n            u = e[0].width,\n            s = e[0].height;\n          if (\"stacked\" === n) {\n            var c = new Map();\n            e.forEach(function (e) {\n              var t = e.data,\n                a = t.indexValue,\n                i = t.value;\n              Me(d, a, Number(i)), Be(c, a, Number(i));\n            }), c.forEach(function (e, n) {\n              var c,\n                h,\n                f,\n                b = d.get(n) || 0;\n              \"vertical\" === i ? (c = t(n), h = a(e), f = a(e / 2)) : (c = t(e), h = a(n), f = t(e / 2)), c += \"vertical\" === i ? u / 2 : l, h += \"vertical\" === i ? -l : s / 2, o.push({\n                key: \"total_\" + n,\n                x: c,\n                y: h,\n                value: b,\n                formattedValue: r(b),\n                animationOffset: f\n              });\n            });\n          } else if (\"grouped\" === n) {\n            var h = new Map(),\n              f = new Map();\n            e.forEach(function (e) {\n              var t = e.data,\n                a = t.indexValue,\n                i = t.value;\n              Me(d, a, Number(i)), Re(h, a, Number(i)), Oe(f, a);\n            }), h.forEach(function (e, n) {\n              var c,\n                h,\n                b,\n                g = d.get(n) || 0,\n                v = f.get(n);\n              \"vertical\" === i ? (c = t(n), h = a(e), b = a(e / 2)) : (c = t(e), h = a(n), b = t(e / 2)), c += \"vertical\" === i ? v * u / 2 : l, h += \"vertical\" === i ? -l : v * s / 2, o.push({\n                key: \"total_\" + n,\n                x: c,\n                y: h,\n                value: g,\n                formattedValue: r(g),\n                animationOffset: b\n              });\n            });\n          }\n          return o;\n        }(me, pe, ye, M, C, ae, ce);\n      }, [me, pe, ye, M, C, ae, ce]);\n    return {\n      bars: me,\n      barsWithValue: Se,\n      xScale: pe,\n      yScale: ye,\n      getIndex: de,\n      getLabel: ue,\n      getTooltipLabel: se,\n      formatValue: ce,\n      getColor: fe,\n      getBorderColor: be,\n      getLabelColor: ge,\n      shouldRenderBarLabel: ke,\n      hiddenIds: ne,\n      toggleSerie: oe,\n      legendsWithData: Ie,\n      barTotals: Ve\n    };\n  },\n  Ve = function (e) {\n    var t = e.data,\n      a = e.springConfig,\n      i = e.animate,\n      n = e.layout,\n      l = void 0 === n ? re.layout : n,\n      r = D();\n    return M(t, {\n      keys: function (e) {\n        return e.key;\n      },\n      from: function (e) {\n        return {\n          x: \"vertical\" === l ? e.x : e.animationOffset,\n          y: \"vertical\" === l ? e.animationOffset : e.y,\n          labelOpacity: 0\n        };\n      },\n      enter: function (e) {\n        return {\n          x: e.x,\n          y: e.y,\n          labelOpacity: 1\n        };\n      },\n      update: function (e) {\n        return {\n          x: e.x,\n          y: e.y,\n          labelOpacity: 1\n        };\n      },\n      leave: function (e) {\n        return {\n          x: \"vertical\" === l ? e.x : e.animationOffset,\n          y: \"vertical\" === l ? e.animationOffset : e.y,\n          labelOpacity: 0\n        };\n      },\n      config: a,\n      immediate: !i,\n      initial: i ? void 0 : null\n    })(function (e, t) {\n      return V(C.text, {\n        x: e.x,\n        y: e.y,\n        fillOpacity: e.labelOpacity,\n        style: Q({}, r.labels.text, {\n          pointerEvents: \"none\"\n        }),\n        fontWeight: \"bold\",\n        fontSize: r.labels.text.fontSize,\n        fontFamily: r.labels.text.fontFamily,\n        textAnchor: \"vertical\" === l ? \"middle\" : \"start\",\n        alignmentBaseline: \"vertical\" === l ? \"alphabetic\" : \"middle\",\n        children: t.formattedValue\n      }, t.key);\n    });\n  },\n  Te = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  He = function (a) {\n    var i,\n      n = a.data,\n      r = a.indexBy,\n      o = a.keys,\n      s = a.margin,\n      c = a.width,\n      h = a.height,\n      f = a.groupMode,\n      b = a.layout,\n      g = a.valueScale,\n      S = a.indexScale,\n      k = a.padding,\n      w = a.innerPadding,\n      L = a.axisTop,\n      C = a.axisRight,\n      W = a.axisBottom,\n      B = void 0 === W ? re.axisBottom : W,\n      R = a.axisLeft,\n      O = void 0 === R ? re.axisLeft : R,\n      I = a.enableGridX,\n      T = void 0 === I ? re.enableGridX : I,\n      H = a.enableGridY,\n      P = void 0 === H ? re.enableGridY : H,\n      E = a.gridXValues,\n      F = a.gridYValues,\n      z = a.layers,\n      D = void 0 === z ? re.layers : z,\n      A = a.barComponent,\n      X = void 0 === A ? re.barComponent : A,\n      Y = a.enableLabel,\n      G = void 0 === Y ? re.enableLabel : Y,\n      N = a.label,\n      j = a.labelSkipWidth,\n      K = void 0 === j ? re.labelSkipWidth : j,\n      _ = a.labelSkipHeight,\n      q = void 0 === _ ? re.labelSkipHeight : _,\n      J = a.labelTextColor,\n      U = a.labelPosition,\n      Z = void 0 === U ? re.labelPosition : U,\n      te = a.labelOffset,\n      ae = void 0 === te ? re.labelOffset : te,\n      ie = a.markers,\n      ne = void 0 === ie ? re.markers : ie,\n      le = a.colorBy,\n      oe = a.colors,\n      de = a.defs,\n      ue = void 0 === de ? re.defs : de,\n      se = a.fill,\n      ce = void 0 === se ? re.fill : se,\n      fe = a.borderRadius,\n      be = void 0 === fe ? re.borderRadius : fe,\n      ge = a.borderWidth,\n      ve = void 0 === ge ? re.borderWidth : ge,\n      me = a.borderColor,\n      pe = a.annotations,\n      ye = void 0 === pe ? re.annotations : pe,\n      xe = a.legendLabel,\n      Se = a.tooltipLabel,\n      ke = a.valueFormat,\n      we = a.isInteractive,\n      Le = void 0 === we ? re.isInteractive : we,\n      Ce = a.tooltip,\n      We = void 0 === Ce ? re.tooltip : Ce,\n      Me = a.onClick,\n      Be = a.onMouseEnter,\n      Re = a.onMouseLeave,\n      Oe = a.legends,\n      Te = a.role,\n      He = void 0 === Te ? re.role : Te,\n      Pe = a.ariaLabel,\n      Ee = a.ariaLabelledBy,\n      Fe = a.ariaDescribedBy,\n      ze = a.isFocusable,\n      De = void 0 === ze ? re.isFocusable : ze,\n      Ae = a.barAriaLabel,\n      Xe = a.barAriaLabelledBy,\n      Ye = a.barAriaDescribedBy,\n      Ge = a.barAriaHidden,\n      Ne = a.barAriaDisabled,\n      je = a.initialHiddenIds,\n      Ke = a.enableTotals,\n      _e = void 0 === Ke ? re.enableTotals : Ke,\n      qe = a.totalsOffset,\n      Je = void 0 === qe ? re.totalsOffset : qe,\n      Qe = a.forwardedRef,\n      Ue = v(),\n      Ze = Ue.animate,\n      $e = Ue.config,\n      et = m(c, h, s),\n      tt = et.outerWidth,\n      at = et.outerHeight,\n      it = et.margin,\n      nt = et.innerWidth,\n      lt = et.innerHeight,\n      rt = Ie({\n        indexBy: r,\n        label: N,\n        tooltipLabel: Se,\n        valueFormat: ke,\n        colors: oe,\n        colorBy: le,\n        borderColor: me,\n        labelTextColor: J,\n        groupMode: f,\n        layout: b,\n        data: n,\n        keys: o,\n        margin: it,\n        width: nt,\n        height: lt,\n        padding: k,\n        innerPadding: w,\n        valueScale: g,\n        indexScale: S,\n        enableLabel: G,\n        labelSkipWidth: K,\n        labelSkipHeight: q,\n        legends: Oe,\n        legendLabel: xe,\n        initialHiddenIds: je,\n        totalsOffset: Je\n      }),\n      ot = rt.bars,\n      dt = rt.barsWithValue,\n      ut = rt.xScale,\n      st = rt.yScale,\n      ct = rt.getLabel,\n      ht = rt.getTooltipLabel,\n      ft = rt.getBorderColor,\n      bt = rt.getLabelColor,\n      gt = rt.shouldRenderBarLabel,\n      vt = rt.toggleSerie,\n      mt = rt.legendsWithData,\n      pt = rt.barTotals,\n      yt = rt.getColor,\n      xt = he(b, null != (i = null == g ? void 0 : g.reverse) && i, Z, ae),\n      St = M(dt, {\n        keys: function (e) {\n          return e.key;\n        },\n        from: function (e) {\n          return Q({\n            borderColor: ft(e),\n            color: e.color,\n            height: 0,\n            labelColor: bt(e),\n            labelOpacity: 0\n          }, xt(e.width, e.height), {\n            transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n            width: e.width\n          }, \"vertical\" === b ? {} : {\n            height: e.height,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: 0\n          });\n        },\n        enter: function (e) {\n          return Q({\n            borderColor: ft(e),\n            color: e.color,\n            height: e.height,\n            labelColor: bt(e),\n            labelOpacity: 1\n          }, xt(e.width, e.height), {\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: e.width\n          });\n        },\n        update: function (e) {\n          return Q({\n            borderColor: ft(e),\n            color: e.color,\n            height: e.height,\n            labelColor: bt(e),\n            labelOpacity: 1\n          }, xt(e.width, e.height), {\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: e.width\n          });\n        },\n        leave: function (e) {\n          return Q({\n            borderColor: ft(e),\n            color: e.color,\n            height: 0,\n            labelColor: bt(e),\n            labelOpacity: 0\n          }, xt(e.width, e.height), {\n            labelY: 0,\n            transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n            width: e.width\n          }, \"vertical\" === b ? {} : Q({}, xt(e.width, e.height), {\n            labelX: 0,\n            height: e.height,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: 0\n          }));\n        },\n        config: $e,\n        immediate: !Ze,\n        initial: Ze ? void 0 : null\n      }),\n      kt = e(function () {\n        return {\n          borderRadius: be,\n          borderWidth: ve,\n          enableLabel: G,\n          isInteractive: Le,\n          labelSkipWidth: K,\n          labelSkipHeight: q,\n          onClick: Me,\n          onMouseEnter: Be,\n          onMouseLeave: Re,\n          getTooltipLabel: ht,\n          tooltip: We,\n          isFocusable: De,\n          ariaLabel: Ae,\n          ariaLabelledBy: Xe,\n          ariaDescribedBy: Ye,\n          ariaHidden: Ge,\n          ariaDisabled: Ne\n        };\n      }, [be, ve, G, ht, Le, q, K, Me, Be, Re, We, De, Ae, Xe, Ye, Ge, Ne]),\n      wt = p(ue, ot, ce, {\n        dataKey: \"data\",\n        targetKey: \"data.fill\"\n      }),\n      Lt = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n        totals: null\n      };\n    D.includes(\"annotations\") && (Lt.annotations = V($, {\n      bars: ot,\n      annotations: ye\n    }, \"annotations\")), D.includes(\"axes\") && (Lt.axes = V(d, {\n      xScale: ut,\n      yScale: st,\n      width: nt,\n      height: lt,\n      top: L,\n      right: C,\n      bottom: B,\n      left: O\n    }, \"axes\")), D.includes(\"bars\") && (Lt.bars = V(l, {\n      children: St(function (e, a) {\n        return t(X, Q({}, kt, {\n          bar: a,\n          style: e,\n          shouldRenderLabel: gt(a),\n          label: ct(a.data)\n        }));\n      })\n    }, \"bars\")), D.includes(\"grid\") && (Lt.grid = V(u, {\n      width: nt,\n      height: lt,\n      xScale: T ? ut : null,\n      yScale: P ? st : null,\n      xValues: E,\n      yValues: F\n    }, \"grid\")), D.includes(\"legends\") && (Lt.legends = V(ee, {\n      width: nt,\n      height: lt,\n      legends: mt,\n      toggleSerie: vt\n    }, \"legends\")), D.includes(\"markers\") && (Lt.markers = V(y, {\n      markers: ne,\n      width: nt,\n      height: lt,\n      xScale: ut,\n      yScale: st\n    }, \"markers\")), D.includes(\"totals\") && _e && (Lt.totals = V(Ve, {\n      data: pt,\n      springConfig: $e,\n      animate: Ze,\n      layout: b\n    }, \"totals\"));\n    var Ct = Q({}, kt, {\n      margin: it,\n      width: c,\n      height: h,\n      innerWidth: nt,\n      innerHeight: lt,\n      bars: ot,\n      legendData: mt,\n      enableLabel: G,\n      xScale: ut,\n      yScale: st,\n      tooltip: We,\n      getTooltipLabel: ht,\n      onClick: Me,\n      onMouseEnter: Be,\n      onMouseLeave: Re,\n      getColor: yt\n    });\n    return V(x, {\n      width: tt,\n      height: at,\n      margin: it,\n      defs: wt,\n      role: He,\n      ariaLabel: Pe,\n      ariaLabelledBy: Ee,\n      ariaDescribedBy: Fe,\n      isFocusable: De,\n      ref: Qe,\n      children: D.map(function (e, a) {\n        var i;\n        return \"function\" == typeof e ? V(l, {\n          children: t(e, Ct)\n        }, a) : null != (i = null == Lt ? void 0 : Lt[e]) ? i : null;\n      })\n    });\n  },\n  Pe = n(function (e, t) {\n    var a = e.isInteractive,\n      i = void 0 === a ? re.isInteractive : a,\n      n = e.animate,\n      l = void 0 === n ? re.animate : n,\n      r = e.motionConfig,\n      o = void 0 === r ? re.motionConfig : r,\n      d = e.theme,\n      u = e.renderWrapper,\n      s = U(e, Te);\n    return V(g, {\n      animate: l,\n      isInteractive: i,\n      motionConfig: o,\n      renderWrapper: u,\n      theme: d,\n      children: V(He, Q({}, s, {\n        isInteractive: i,\n        forwardedRef: t\n      }))\n    });\n  }),\n  Ee = [\"isInteractive\", \"renderWrapper\", \"theme\"],\n  Fe = function (e, t, a, i) {\n    return e.find(function (e) {\n      return w(e.x + t.left, e.y + t.top, e.width, e.height, a, i);\n    });\n  };\nvar ze = function (i) {\n    var n,\n      l = i.data,\n      d = i.indexBy,\n      u = i.keys,\n      h = i.margin,\n      f = i.width,\n      g = i.height,\n      v = i.groupMode,\n      p = i.layout,\n      y = i.valueScale,\n      x = i.indexScale,\n      w = i.padding,\n      L = i.innerPadding,\n      C = i.axisTop,\n      W = i.axisRight,\n      M = i.axisBottom,\n      R = void 0 === M ? oe.axisBottom : M,\n      T = i.axisLeft,\n      H = void 0 === T ? oe.axisLeft : T,\n      P = i.enableGridX,\n      F = void 0 === P ? oe.enableGridX : P,\n      z = i.enableGridY,\n      X = void 0 === z ? oe.enableGridY : z,\n      Y = i.gridXValues,\n      j = i.gridYValues,\n      K = i.labelPosition,\n      _ = void 0 === K ? oe.labelPosition : K,\n      q = i.labelOffset,\n      J = void 0 === q ? oe.labelOffset : q,\n      U = i.layers,\n      Z = void 0 === U ? oe.layers : U,\n      $ = i.renderBar,\n      ee = void 0 === $ ? oe.renderBar : $,\n      te = i.enableLabel,\n      ae = void 0 === te ? oe.enableLabel : te,\n      ie = i.label,\n      ne = i.labelSkipWidth,\n      le = void 0 === ne ? oe.labelSkipWidth : ne,\n      re = i.labelSkipHeight,\n      de = void 0 === re ? oe.labelSkipHeight : re,\n      ue = i.labelTextColor,\n      se = i.colorBy,\n      ce = i.colors,\n      fe = i.borderRadius,\n      be = void 0 === fe ? oe.borderRadius : fe,\n      ge = i.borderWidth,\n      ve = void 0 === ge ? oe.borderWidth : ge,\n      me = i.borderColor,\n      pe = i.annotations,\n      ye = void 0 === pe ? oe.annotations : pe,\n      xe = i.legendLabel,\n      Se = i.tooltipLabel,\n      ke = i.valueFormat,\n      we = i.isInteractive,\n      Le = void 0 === we ? oe.isInteractive : we,\n      Ce = i.tooltip,\n      We = void 0 === Ce ? oe.tooltip : Ce,\n      Me = i.onClick,\n      Be = i.onMouseEnter,\n      Re = i.onMouseLeave,\n      Oe = i.legends,\n      Ve = i.pixelRatio,\n      Te = void 0 === Ve ? oe.pixelRatio : Ve,\n      He = i.role,\n      Pe = i.forwardedRef,\n      Ee = i.enableTotals,\n      ze = void 0 === Ee ? oe.enableTotals : Ee,\n      De = i.totalsOffset,\n      Ae = void 0 === De ? oe.totalsOffset : De,\n      Xe = r(null),\n      Ye = D(),\n      Ge = m(f, g, h),\n      Ne = Ge.margin,\n      je = Ge.innerWidth,\n      Ke = Ge.innerHeight,\n      _e = Ge.outerWidth,\n      qe = Ge.outerHeight,\n      Je = Ie({\n        indexBy: d,\n        label: ie,\n        tooltipLabel: Se,\n        valueFormat: ke,\n        colors: ce,\n        colorBy: se,\n        borderColor: me,\n        labelTextColor: ue,\n        groupMode: v,\n        layout: p,\n        data: l,\n        keys: u,\n        margin: Ne,\n        width: je,\n        height: Ke,\n        padding: w,\n        innerPadding: L,\n        valueScale: y,\n        indexScale: x,\n        enableLabel: ae,\n        labelSkipWidth: le,\n        labelSkipHeight: de,\n        legends: Oe,\n        legendLabel: xe,\n        totalsOffset: Ae\n      }),\n      Qe = Je.bars,\n      Ue = Je.barsWithValue,\n      Ze = Je.xScale,\n      $e = Je.yScale,\n      et = Je.getLabel,\n      tt = Je.getTooltipLabel,\n      at = Je.getBorderColor,\n      it = Je.getLabelColor,\n      nt = Je.shouldRenderBarLabel,\n      lt = Je.legendsWithData,\n      rt = Je.barTotals,\n      ot = Je.getColor,\n      dt = A(),\n      ut = dt.showTooltipFromEvent,\n      st = dt.hideTooltip,\n      ct = O({\n        annotations: B({\n          data: Qe,\n          annotations: ye,\n          getPosition: function (e) {\n            return {\n              x: e.x,\n              y: e.y\n            };\n          },\n          getDimensions: function (e) {\n            var t = e.width,\n              a = e.height;\n            return {\n              width: t,\n              height: a,\n              size: Math.max(t, a)\n            };\n          }\n        })\n      }),\n      ht = e(function () {\n        return {\n          borderRadius: be,\n          borderWidth: ve,\n          isInteractive: Le,\n          isFocusable: !1,\n          labelSkipWidth: le,\n          labelSkipHeight: de,\n          margin: Ne,\n          width: f,\n          height: g,\n          innerWidth: je,\n          innerHeight: Ke,\n          bars: Qe,\n          legendData: lt,\n          enableLabel: ae,\n          xScale: Ze,\n          yScale: $e,\n          tooltip: We,\n          getTooltipLabel: tt,\n          onClick: Me,\n          onMouseEnter: Be,\n          onMouseLeave: Re,\n          getColor: ot\n        };\n      }, [be, ve, Le, le, de, Ne, f, g, je, Ke, Qe, lt, ae, Ze, $e, We, tt, Me, Be, Re, ot]),\n      ft = b(ke),\n      bt = he(p, null != (n = null == y ? void 0 : y.reverse) && n, _, J);\n    o(function () {\n      if (Xe.current) {\n        Xe.current.width = _e * Te, Xe.current.height = qe * Te;\n        var e = Xe.current.getContext(\"2d\");\n        e.scale(Te, Te), e.fillStyle = Ye.background, e.fillRect(0, 0, _e, qe), e.translate(Ne.left, Ne.top), Z.forEach(function (t) {\n          \"grid\" === t ? \"number\" == typeof Ye.grid.line.strokeWidth && Ye.grid.line.strokeWidth > 0 && (e.lineWidth = Ye.grid.line.strokeWidth, e.strokeStyle = Ye.grid.line.stroke, F && s(e, {\n            width: je,\n            height: Ke,\n            scale: Ze,\n            axis: \"x\",\n            values: Y\n          }), X && s(e, {\n            width: je,\n            height: Ke,\n            scale: $e,\n            axis: \"y\",\n            values: j\n          })) : \"axes\" === t ? c(e, {\n            xScale: Ze,\n            yScale: $e,\n            width: je,\n            height: Ke,\n            top: C,\n            right: W,\n            bottom: R,\n            left: H,\n            theme: Ye\n          }) : \"bars\" === t ? (N(e, Ye.text), Ue.forEach(function (t) {\n            ee(e, Q({\n              bar: t,\n              borderColor: at(t),\n              borderRadius: be,\n              borderWidth: ve,\n              label: et(t.data),\n              shouldRenderLabel: nt(t),\n              labelStyle: Q({}, Ye.labels.text, {\n                fill: it(t)\n              })\n            }, bt(t.width, t.height)));\n          })) : \"legends\" === t ? lt.forEach(function (t) {\n            var a = t[0],\n              i = t[1];\n            E(e, Q({}, a, {\n              data: i,\n              containerWidth: je,\n              containerHeight: Ke,\n              theme: Ye\n            }));\n          }) : \"annotations\" === t ? I(e, {\n            annotations: ct,\n            theme: Ye\n          }) : \"totals\" === t && ze ? function (e, t, a, i) {\n            void 0 === i && (i = oe.layout), N(e, a.labels.text), e.textBaseline = \"vertical\" === i ? \"alphabetic\" : \"middle\", e.textAlign = \"vertical\" === i ? \"center\" : \"start\", t.forEach(function (t) {\n              G(e, a.labels.text, t.formattedValue, t.x, t.y);\n            });\n          }(e, rt, Ye, p) : \"function\" == typeof t && t(e, ht);\n        }), e.save();\n      }\n    }, [R, H, W, C, Ue, be, ve, ct, F, X, at, et, it, Y, j, v, g, Ke, je, ht, Z, p, lt, Ne.left, Ne.top, qe, _e, Te, ee, Ze, $e, nt, Ye, f, rt, ze, ft, bt]);\n    var gt = a(function (e) {\n        if (Qe && Xe.current) {\n          var a = S(Xe.current, e),\n            i = a[0],\n            n = a[1],\n            l = Fe(Qe, Ne, i, n);\n          void 0 !== l ? (ut(t(We, Q({}, l.data, {\n            color: l.color,\n            label: l.label,\n            value: Number(l.data.value)\n          })), e), \"mouseenter\" === e.type && (null == Be || Be(l.data, e))) : st();\n        }\n      }, [st, Ne, Be, Qe, ut, We]),\n      vt = a(function (e) {\n        if (Qe && Xe.current) {\n          st();\n          var t = S(Xe.current, e),\n            a = t[0],\n            i = t[1],\n            n = Fe(Qe, Ne, a, i);\n          n && (null == Re || Re(n.data, e));\n        }\n      }, [st, Ne, Re, Qe]),\n      mt = a(function (e) {\n        if (Qe && Xe.current) {\n          var t = S(Xe.current, e),\n            a = t[0],\n            i = t[1],\n            n = Fe(Qe, Ne, a, i);\n          void 0 !== n && (null == Me || Me(Q({}, n.data, {\n            color: n.color\n          }), e));\n        }\n      }, [Ne, Me, Qe]);\n    return V(\"canvas\", {\n      ref: k(Xe, Pe),\n      width: _e * Te,\n      height: qe * Te,\n      style: {\n        width: _e,\n        height: qe,\n        cursor: Le ? \"auto\" : \"normal\"\n      },\n      onMouseEnter: Le ? gt : void 0,\n      onMouseMove: Le ? gt : void 0,\n      onMouseLeave: Le ? vt : void 0,\n      onClick: Le ? mt : void 0,\n      role: He\n    });\n  },\n  De = n(function (e, t) {\n    var a = e.isInteractive,\n      i = e.renderWrapper,\n      n = e.theme,\n      l = U(e, Ee);\n    return V(g, {\n      isInteractive: a,\n      renderWrapper: i,\n      theme: n,\n      animate: !1,\n      children: V(ze, Q({}, l, {\n        isInteractive: a,\n        forwardedRef: t\n      }))\n    });\n  }),\n  Ae = [\"defaultWidth\", \"defaultHeight\", \"onResize\", \"debounceResize\"],\n  Xe = n(function (e, t) {\n    var a = e.defaultWidth,\n      i = e.defaultHeight,\n      n = e.onResize,\n      l = e.debounceResize,\n      r = U(e, Ae);\n    return V(L, {\n      defaultWidth: a,\n      defaultHeight: i,\n      onResize: n,\n      debounceResize: l,\n      children: function (e) {\n        var a = e.width,\n          i = e.height;\n        return V(Pe, Q({}, r, {\n          width: a,\n          height: i,\n          ref: t\n        }));\n      }\n    });\n  }),\n  Ye = [\"defaultWidth\", \"defaultHeight\", \"onResize\", \"debounceResize\"],\n  Ge = n(function (e, t) {\n    var a = e.defaultWidth,\n      i = e.defaultHeight,\n      n = e.onResize,\n      l = e.debounceResize,\n      r = U(e, Ye);\n    return V(L, {\n      defaultWidth: a,\n      defaultHeight: i,\n      onResize: n,\n      debounceResize: l,\n      children: function (e) {\n        var a = e.width,\n          i = e.height;\n        return V(De, Q({}, r, {\n          width: a,\n          height: i,\n          ref: t\n        }));\n      }\n    });\n  });\nexport { Pe as Bar, De as BarCanvas, ae as BarItem, ne as BarTooltip, Ve as BarTotals, Xe as ResponsiveBar, Ge as ResponsiveBarCanvas, oe as canvasDefaultProps, le as commonDefaultProps, re as svgDefaultProps };","map":{"version":3,"names":["Z","$","BarAnnotations","e","t","bars","a","annotations","i","B","data","getPosition","x","width","y","height","getDimensions","size","Math","max","V","T","children","map","R","Q","ee","BarLegends","legends","n","toggleSerie","l","r","o","P","containerWidth","containerHeight","dataFrom","te","ae","BarItem","bar","U","d","style","u","borderColor","s","color","c","h","labelColor","f","labelOpacity","b","labelX","g","labelY","v","transform","m","p","textAnchor","borderRadius","borderWidth","S","label","k","shouldRenderLabel","w","isInteractive","L","onClick","M","onMouseEnter","onMouseLeave","tooltip","O","isFocusable","I","ariaLabel","ariaLabelledBy","ariaDescribedBy","E","ariaDisabled","F","ariaHidden","z","D","X","A","G","showTooltipFromEvent","N","showTooltipAt","j","hideTooltip","K","_","q","J","absX","absY","H","C","rect","W","rx","ry","fill","strokeWidth","stroke","focusable","tabIndex","onMouseMove","onFocus","onBlur","id","index","Y","dominantBaseline","fillOpacity","labels","text","pointerEvents","ie","ne","BarTooltip","value","formattedValue","enableChip","le","indexBy","keys","groupMode","layout","valueScale","type","nice","round","indexScale","padding","innerPadding","enableGridX","enableGridY","enableLabel","labelPosition","labelOffset","labelSkipWidth","labelSkipHeight","labelTextColor","theme","colorBy","colors","scheme","from","tooltipLabel","indexValue","initialHiddenIds","enableTotals","totalsOffset","re","layers","axisTop","axisRight","axisBottom","axisLeft","barComponent","defs","markers","animate","animateOnMount","motionConfig","role","oe","renderBar","labelStyle","fillStyle","strokeStyle","lineWidth","beginPath","min","textBaseline","textAlign","pixelRatio","window","devicePixelRatio","de","getIndexScale","all","ue","normalizeData","reduce","se","filterNullValues","Object","ce","coerceValue","Number","he","fe","be","gt","ge","lt","ve","range","Array","repeat","me","clampToZero","pe","generateVerticalGroupedBars","formatValue","getColor","getIndex","getTooltipLabel","xScale","yScale","margin","forEach","domain","length","hidden","push","key","left","top","ye","generateHorizontalGroupedBars","xe","generateGroupedBars","hiddenIds","filter","includes","concat","Boolean","apply","isFinite","bandwidth","reverse","Se","ke","flattenDeep","some","isArray","we","generateVerticalStackedBars","stackedData","Le","generateHorizontalStackedBars","Ce","generateStackedBars","offset","We","getLegendData","direction","legendLabel","Me","updateTotalsByIndex","get","set","Be","updateTotalsPositivesByIndex","Re","updateGreatestValueByIndex","Oe","updateNumberOfBarsByIndex","Ie","useBar","valueFormat","indexOf","find","Ve","Map","animationOffset","barsWithValue","getLabel","getBorderColor","getLabelColor","shouldRenderBarLabel","legendsWithData","barTotals","BarTotals","springConfig","enter","update","leave","config","immediate","initial","fontWeight","fontSize","fontFamily","alignmentBaseline","Te","He","InnerBar","gridXValues","gridYValues","Pe","Ee","Fe","ze","De","Ae","barAriaLabel","Xe","barAriaLabelledBy","Ye","barAriaDescribedBy","Ge","barAriaHidden","Ne","barAriaDisabled","je","Ke","_e","qe","Je","Qe","forwardedRef","Ue","Ze","$e","et","tt","outerWidth","at","outerHeight","it","nt","innerWidth","innerHeight","rt","ot","dt","ut","st","ct","ht","ft","bt","vt","mt","pt","yt","xt","St","kt","wt","dataKey","targetKey","Lt","axes","grid","totals","right","bottom","xValues","yValues","Ct","legendData","ref","renderWrapper","findBarUnderCursor","InnerBarCanvas","current","getContext","scale","background","fillRect","translate","line","axis","values","save","cursor","defaultWidth","defaultHeight","onResize","debounceResize","Bar","BarCanvas","ResponsiveBar","ResponsiveBarCanvas","canvasDefaultProps","commonDefaultProps","svgDefaultProps"],"sources":["C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\BarAnnotations.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\BarLegends.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\BarItem.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\BarTooltip.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\defaults.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\renderBar.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\compute\\common.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\compute\\grouped.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\compute\\stacked.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\compute\\legends.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\compute\\totals.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\hooks.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\BarTotals.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\Bar.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\BarCanvas.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\ResponsiveBar.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bar\\src\\ResponsiveBarCanvas.tsx"],"sourcesContent":["import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps, BarDatum } from './types'\n\nexport const BarAnnotations = <D extends BarDatum>({\n    bars,\n    annotations,\n}: BarAnnotationsProps<D>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/theming'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Text } from '@nivo/text'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <D extends BarDatum>({\n    bar: { data, ...bar },\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n        textAnchor,\n    },\n    borderRadius,\n    borderWidth,\n    label,\n    shouldRenderLabel,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    ariaDisabled,\n    ariaHidden,\n}: BarItemProps<D>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(\n        () => () => createElement(tooltip, { ...bar, ...data }),\n        [tooltip, bar, data]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                aria-disabled={ariaDisabled ? ariaDisabled(data) : undefined}\n                aria-hidden={ariaHidden ? ariaHidden(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n                data-testid={`bar.item.${data.id}.${data.index}`}\n            />\n            {shouldRenderLabel && (\n                <Text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor={textAnchor}\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        // We don't want the label to intercept mouse events\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </Text>\n            )}\n        </animated.g>\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarTooltipProps } from './types'\n\nexport const BarTooltip = <D extends BarDatum>({ color, label, ...data }: BarTooltipProps<D>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport {\n    BarCommonProps,\n    BarDatum,\n    ComputedDatum,\n    BarSvgPropsWithDefaults,\n    BarCanvasPropsWithDefaults,\n} from './types'\nimport { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { renderBar } from './renderBar'\n\nexport const commonDefaultProps: Omit<BarCommonProps<BarDatum>, 'data' | 'theme'> = {\n    indexBy: 'id',\n    keys: ['value'],\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    valueScale: { type: 'linear', nice: true, round: false },\n    indexScale: { type: 'band', round: false },\n    padding: 0.1,\n    innerPadding: 0,\n    enableGridX: false,\n    enableGridY: true,\n    enableLabel: true,\n    label: 'formattedValue',\n    labelPosition: 'middle' as const,\n    labelOffset: 0,\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { theme: 'labels.text.fill' },\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: (datum: ComputedDatum<BarDatum>) => `${datum.id} - ${datum.indexValue}`,\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    enableTotals: false,\n    totalsOffset: 10,\n}\n\nexport const svgDefaultProps: Omit<\n    BarSvgPropsWithDefaults<BarDatum>,\n    'data' | 'width' | 'height' | 'theme'\n> = {\n    ...commonDefaultProps,\n    layers: ['grid', 'axes', 'bars', 'totals', 'markers', 'legends', 'annotations'],\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {},\n    axisLeft: {},\n    barComponent: BarItem,\n    defs: [],\n    fill: [],\n    markers: [],\n    animate: true,\n    animateOnMount: false,\n    motionConfig: 'default',\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps: Omit<\n    BarCanvasPropsWithDefaults<BarDatum>,\n    'data' | 'width' | 'height' | 'theme'\n> = {\n    ...commonDefaultProps,\n    layers: ['grid', 'axes', 'bars', 'totals', 'legends', 'annotations'],\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {},\n    axisLeft: {},\n    renderBar,\n    pixelRatio: typeof window !== 'undefined' ? (window.devicePixelRatio ?? 1) : 1,\n}\n","import { roundedRect } from '@nivo/canvas'\nimport { drawCanvasText } from '@nivo/text'\nimport { BarDatum, RenderBarProps } from './types'\n\nexport const renderBar = <D extends BarDatum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        bar: { color, height, width, x, y },\n        borderColor,\n        borderRadius,\n        borderWidth,\n        label,\n        shouldRenderLabel,\n        labelStyle,\n        labelX,\n        labelY,\n        textAnchor,\n    }: RenderBarProps<D>\n) => {\n    ctx.fillStyle = color\n    if (borderWidth > 0) {\n        ctx.strokeStyle = borderColor\n        ctx.lineWidth = borderWidth\n    }\n\n    ctx.beginPath()\n    roundedRect(ctx, x, y, width, height, Math.min(borderRadius, height))\n    ctx.fill()\n\n    if (borderWidth > 0) {\n        ctx.stroke()\n    }\n\n    if (shouldRenderLabel) {\n        ctx.textBaseline = 'middle'\n        ctx.textAlign = textAnchor === 'middle' ? 'center' : textAnchor\n        drawCanvasText(ctx, labelStyle, label, x + labelX, y + labelY)\n    }\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\nimport { commonDefaultProps } from '../defaults'\nimport { BarCommonProps, BarDatum } from '../types'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <D extends BarDatum>(\n    data: readonly D[],\n    getIndex: (datum: D) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (\n        computeScale(\n            indexScale,\n            { all: data.map(getIndex), min: 0, max: 0 },\n            size,\n            axis\n        ) as ScaleBand<string>\n    ).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <D extends BarDatum>(data: readonly D[], keys: readonly string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            }) as D\n    )\n\nexport const filterNullValues = <D extends BarDatum>(data: D) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<D, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n\nexport type BarLabelLayout = {\n    labelX: number\n    labelY: number\n    textAnchor: 'start' | 'middle' | 'end'\n}\n\n/**\n * Compute the label position and alignment based on a given position and offset.\n */\nexport function useComputeLabelLayout<D extends BarDatum>(\n    layout: BarCommonProps<D>['layout'] = commonDefaultProps.layout,\n    reverse: boolean,\n    labelPosition: BarCommonProps<D>['labelPosition'] = commonDefaultProps.labelPosition,\n    labelOffset: BarCommonProps<D>['labelOffset'] = commonDefaultProps.labelOffset\n): (width: number, height: number) => BarLabelLayout {\n    return (width: number, height: number) => {\n        // If the chart is reversed, we want to make sure the offset is also reversed\n        const computedLabelOffset = labelOffset * (reverse ? -1 : 1)\n\n        if (layout === 'horizontal') {\n            let x = width / 2\n            if (labelPosition === 'start') {\n                x = reverse ? width : 0\n            } else if (labelPosition === 'end') {\n                x = reverse ? 0 : width\n            }\n            return {\n                labelX: x + computedLabelOffset,\n                labelY: height / 2,\n                textAnchor: labelPosition === 'middle' ? 'middle' : reverse ? 'end' : 'start',\n            }\n        } else {\n            let y = height / 2\n            if (labelPosition === 'start') {\n                y = reverse ? 0 : height\n            } else if (labelPosition === 'end') {\n                y = reverse ? height : 0\n            }\n            return {\n                labelX: width / 2,\n                labelY: y - computedLabelOffset,\n                textAnchor: 'middle',\n            }\n        }\n    }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<D extends BarDatum, XScaleInput, YScaleInput> = {\n    data: readonly D[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<D>>\n    getIndex: (datum: D) => string\n    getTooltipLabel: (datum: ComputedDatum<D>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <D extends BarDatum>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<D, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<D>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? (yScale(d) ?? 0) : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<D>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<D> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <D extends BarDatum>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<D, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<D>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : (xScale(d) ?? 0))\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<D>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<D> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <D extends BarDatum>({\n    layout,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<D>>,\n    | 'data'\n    | 'height'\n    | 'valueScale'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'padding'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<D>>\n    getIndex: (datum: D) => string\n    getTooltipLabel: (datum: ComputedDatum<D>) => string\n    margin: Margin\n    hiddenIds?: readonly (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const clampMin = valueScale.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        valueScale,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    // As we use extra inner padding between the bars, we need to adjust the bandwidth.\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<D, any, any>,\n        bandwidth,\n        valueScale.reverse ?? false,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<D>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<D extends BarDatum> = SeriesPoint<D>\n\ntype Params<D extends BarDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<D>>\n    getIndex: (datum: D) => string\n    getTooltipLabel: (datum: ComputedDatum<D>) => string\n    innerPadding: number\n    stackedData: Series<D, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : (arr as unknown as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <D extends BarDatum>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<D, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<D>[] => {\n    const getY = (d: StackDatum<D>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<D>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<D>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<D> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <D extends BarDatum>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<D, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<D>[] => {\n    const getX = (d: StackDatum<D>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<D>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<D>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<D> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'valueScale'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'padding'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: readonly (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const values = filterZerosIfLog(\n        flattenDeep(stackedData as unknown as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        valueScale,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        valueScale.reverse ?? false,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport uniqBy from 'lodash/uniqBy.js'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n    reverse: boolean\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { AnyScale, ScaleBand } from '@nivo/scales'\nimport { commonDefaultProps } from '../defaults'\nimport { BarCommonProps, BarDatum, ComputedBarDatum } from '../types'\n\nexport interface BarTotalsData {\n    key: string\n    x: number\n    y: number\n    value: number\n    formattedValue: string\n    animationOffset: number\n}\n\nexport const computeBarTotals = <D extends BarDatum>(\n    bars: ComputedBarDatum<D>[],\n    xScale: ScaleBand<string> | AnyScale,\n    yScale: ScaleBand<string> | AnyScale,\n    layout: BarCommonProps<D>['layout'] = commonDefaultProps.layout,\n    groupMode: BarCommonProps<D>['groupMode'] = commonDefaultProps.groupMode,\n    totalsOffset: number,\n    formatValue: (value: number) => string\n) => {\n    const totals = [] as BarTotalsData[]\n\n    if (bars.length === 0) return totals\n\n    const totalsByIndex = new Map<string | number, number>()\n\n    const barWidth = bars[0].width\n    const barHeight = bars[0].height\n\n    if (groupMode === 'stacked') {\n        const totalsPositivesByIndex = new Map<string | number, number>()\n\n        bars.forEach(bar => {\n            const { indexValue, value } = bar.data\n            updateTotalsByIndex(totalsByIndex, indexValue, Number(value))\n            updateTotalsPositivesByIndex(totalsPositivesByIndex, indexValue, Number(value))\n        })\n\n        totalsPositivesByIndex.forEach((totalsPositive, indexValue) => {\n            const indexTotal = totalsByIndex.get(indexValue) || 0\n\n            let xPosition: number\n            let yPosition: number\n            let animationOffset: number\n\n            if (layout === 'vertical') {\n                xPosition = xScale(indexValue)\n                yPosition = yScale(totalsPositive)\n                animationOffset = yScale(totalsPositive / 2)\n            } else {\n                xPosition = xScale(totalsPositive)\n                yPosition = yScale(indexValue)\n                animationOffset = xScale(totalsPositive / 2)\n            }\n\n            xPosition += layout === 'vertical' ? barWidth / 2 : totalsOffset\n            yPosition += layout === 'vertical' ? -totalsOffset : barHeight / 2\n\n            totals.push({\n                key: 'total_' + indexValue,\n                x: xPosition,\n                y: yPosition,\n                value: indexTotal,\n                formattedValue: formatValue(indexTotal),\n                animationOffset,\n            })\n        })\n    } else if (groupMode === 'grouped') {\n        const greatestValueByIndex = new Map<string | number, number>()\n        const numberOfBarsByIndex = new Map()\n\n        bars.forEach(bar => {\n            const { indexValue, value } = bar.data\n            updateTotalsByIndex(totalsByIndex, indexValue, Number(value))\n            updateGreatestValueByIndex(greatestValueByIndex, indexValue, Number(value))\n            updateNumberOfBarsByIndex(numberOfBarsByIndex, indexValue)\n        })\n\n        greatestValueByIndex.forEach((greatestValue, indexValue) => {\n            const indexTotal = totalsByIndex.get(indexValue) || 0\n            const numberOfBars = numberOfBarsByIndex.get(indexValue)\n\n            let xPosition: number\n            let yPosition: number\n            let animationOffset: number\n\n            if (layout === 'vertical') {\n                xPosition = xScale(indexValue)\n                yPosition = yScale(greatestValue)\n                animationOffset = yScale(greatestValue / 2)\n            } else {\n                xPosition = xScale(greatestValue)\n                yPosition = yScale(indexValue)\n                animationOffset = xScale(greatestValue / 2)\n            }\n\n            const indexBarsWidth = numberOfBars * barWidth\n            const indexBarsHeight = numberOfBars * barHeight\n\n            xPosition += layout === 'vertical' ? indexBarsWidth / 2 : totalsOffset\n            yPosition += layout === 'vertical' ? -totalsOffset : indexBarsHeight / 2\n\n            totals.push({\n                key: 'total_' + indexValue,\n                x: xPosition,\n                y: yPosition,\n                value: indexTotal,\n                formattedValue: formatValue(indexTotal),\n                animationOffset,\n            })\n        })\n    }\n    return totals\n}\n\n// this function is used to compute the total value for the indexes. The total value is later rendered on the chart\nexport const updateTotalsByIndex = (\n    totalsByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentIndexValue = totalsByIndex.get(indexValue) || 0\n    totalsByIndex.set(indexValue, currentIndexValue + value)\n}\n\n// this function is used to compute only the positive values of the indexes. Useful to position the text right above the last stacked bar. It prevents overlapping in case of negative values\nexport const updateTotalsPositivesByIndex = (\n    totalsPositivesByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentIndexValue = totalsPositivesByIndex.get(indexValue) || 0\n    totalsPositivesByIndex.set(indexValue, currentIndexValue + (value > 0 ? value : 0))\n}\n\n// this function is used to keep track of the highest value for the indexes. Useful to position the text above the longest grouped bar\nexport const updateGreatestValueByIndex = (\n    greatestValueByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentGreatestValue = greatestValueByIndex.get(indexValue) || 0\n    greatestValueByIndex.set(indexValue, Math.max(currentGreatestValue, Number(value)))\n}\n\n// this function is used to save the number of bars for the indexes. Useful to position the text in the middle of the grouped bars\nexport const updateNumberOfBarsByIndex = (\n    numberOfBarsByIndex: Map<string | number, number>,\n    indexValue: string | number\n) => {\n    const currentNumberOfBars = numberOfBarsByIndex.get(indexValue) || 0\n    numberOfBarsByIndex.set(indexValue, currentNumberOfBars + 1)\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useValueFormatter, Margin } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { commonDefaultProps } from './defaults'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\nimport { computeBarTotals } from './compute/totals'\n\nexport const useBar = <D extends BarDatum>({\n    indexBy = commonDefaultProps.indexBy,\n    keys = commonDefaultProps.keys,\n    label = commonDefaultProps.label,\n    tooltipLabel = commonDefaultProps.tooltipLabel,\n    valueFormat,\n    colors = commonDefaultProps.colors,\n    colorBy = commonDefaultProps.colorBy,\n    borderColor = commonDefaultProps.borderColor,\n    labelTextColor = commonDefaultProps.labelTextColor,\n    groupMode = commonDefaultProps.groupMode,\n    layout = commonDefaultProps.layout,\n    data,\n    margin,\n    width,\n    height,\n    padding = commonDefaultProps.padding,\n    innerPadding = commonDefaultProps.innerPadding,\n    valueScale = commonDefaultProps.valueScale,\n    indexScale = commonDefaultProps.indexScale,\n    initialHiddenIds = commonDefaultProps.initialHiddenIds,\n    enableLabel = commonDefaultProps.enableLabel,\n    labelSkipWidth = commonDefaultProps.labelSkipWidth,\n    labelSkipHeight = commonDefaultProps.labelSkipHeight,\n    legends = commonDefaultProps.legends,\n    legendLabel,\n    totalsOffset = commonDefaultProps.totalsOffset,\n}: Partial<\n    Pick<\n        BarCommonProps<D>,\n        | 'indexBy'\n        | 'keys'\n        | 'label'\n        | 'tooltipLabel'\n        | 'valueFormat'\n        | 'colors'\n        | 'colorBy'\n        | 'borderColor'\n        | 'labelTextColor'\n        | 'groupMode'\n        | 'layout'\n        | 'padding'\n        | 'innerPadding'\n        | 'valueScale'\n        | 'indexScale'\n        | 'initialHiddenIds'\n        | 'enableLabel'\n        | 'labelSkipWidth'\n        | 'labelSkipHeight'\n        | 'legends'\n        | 'legendLabel'\n        | 'totalsOffset'\n    >\n> & {\n    width: number\n    height: number\n    margin: Margin\n    data: DataProps<D>['data']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback((id: string | number) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<D>>(borderColor, theme)\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<D>>(labelTextColor, theme)\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        data,\n        getIndex,\n        keys,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter((bar): bar is ComputedBarDatumWithValue<D> => bar.data.value !== null)\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const reverse = valueScale.reverse ?? false\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    const barTotals = useMemo(\n        () => computeBarTotals(bars, xScale, yScale, layout, groupMode, totalsOffset, formatValue),\n        [bars, xScale, yScale, layout, groupMode, totalsOffset, formatValue]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n        barTotals,\n    }\n}\n","import { useTheme } from '@nivo/theming'\nimport { AnimationConfig, animated, useTransition } from '@react-spring/web'\nimport { BarCommonProps, BarDatum } from './types'\nimport { svgDefaultProps } from './defaults'\nimport { BarTotalsData } from './compute/totals'\n\ninterface Props<RawDatum extends BarDatum> {\n    data: BarTotalsData[]\n    springConfig: Partial<AnimationConfig>\n    animate: boolean\n    layout?: BarCommonProps<RawDatum>['layout']\n}\n\nexport const BarTotals = <RawDatum extends BarDatum>({\n    data,\n    springConfig,\n    animate,\n    layout = svgDefaultProps.layout,\n}: Props<RawDatum>) => {\n    const theme = useTheme()\n    const totalsTransition = useTransition<\n        BarTotalsData,\n        {\n            x: number\n            y: number\n            labelOpacity: number\n        }\n    >(data, {\n        keys: barTotal => barTotal.key,\n        from: barTotal => ({\n            x: layout === 'vertical' ? barTotal.x : barTotal.animationOffset,\n            y: layout === 'vertical' ? barTotal.animationOffset : barTotal.y,\n            labelOpacity: 0,\n        }),\n        enter: barTotal => ({\n            x: barTotal.x,\n            y: barTotal.y,\n            labelOpacity: 1,\n        }),\n        update: barTotal => ({\n            x: barTotal.x,\n            y: barTotal.y,\n            labelOpacity: 1,\n        }),\n        leave: barTotal => ({\n            x: layout === 'vertical' ? barTotal.x : barTotal.animationOffset,\n            y: layout === 'vertical' ? barTotal.animationOffset : barTotal.y,\n            labelOpacity: 0,\n        }),\n        config: springConfig,\n        immediate: !animate,\n        initial: animate ? undefined : null,\n    })\n\n    return totalsTransition((style, barTotal) => (\n        <animated.text\n            key={barTotal.key}\n            x={style.x}\n            y={style.y}\n            fillOpacity={style.labelOpacity}\n            style={{\n                ...theme.labels.text,\n                pointerEvents: 'none',\n            }}\n            fontWeight=\"bold\"\n            fontSize={theme.labels.text.fontSize}\n            fontFamily={theme.labels.text.fontFamily}\n            textAnchor={layout === 'vertical' ? 'middle' : 'start'}\n            alignmentBaseline={layout === 'vertical' ? 'alphabetic' : 'middle'}\n        >\n            {barTotal.formattedValue}\n        </animated.text>\n    ))\n}\n","import { forwardRef, Ref, ReactElement } from 'react'\nimport { Axes, Grid } from '@nivo/axes'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-expect-error no types\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n    WithChartRef,\n} from '@nivo/core'\nimport { useTransition } from '@react-spring/web'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { BarAnnotations } from './BarAnnotations'\nimport { BarLegends } from './BarLegends'\nimport { useBar } from './hooks'\nimport { svgDefaultProps } from './defaults'\nimport {\n    BarComponent,\n    BarCustomLayerProps,\n    BarDatum,\n    BarItemProps,\n    BarLayerId,\n    BarSvgProps,\n    BarTooltipComponent,\n    ComputedBarDatumWithValue,\n} from './types'\nimport { BarTotals } from './BarTotals'\nimport { useComputeLabelLayout } from './compute/common'\n\ntype InnerBarProps<D extends BarDatum> = Omit<\n    BarSvgProps<D>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <D extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n    margin: partialMargin,\n    width,\n    height,\n    groupMode,\n    layout,\n    valueScale,\n    indexScale,\n    padding,\n    innerPadding,\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n    layers = svgDefaultProps.layers as BarLayerId[],\n    barComponent = svgDefaultProps.barComponent as unknown as BarComponent<D>,\n    enableLabel = svgDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor,\n    labelPosition = svgDefaultProps.labelPosition,\n    labelOffset = svgDefaultProps.labelOffset,\n    markers = svgDefaultProps.markers,\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n    annotations = svgDefaultProps.annotations,\n    legendLabel,\n    tooltipLabel,\n    valueFormat,\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip as BarTooltipComponent<D>,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    legends,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n    barAriaHidden,\n    barAriaDisabled,\n    initialHiddenIds,\n    enableTotals = svgDefaultProps.enableTotals,\n    totalsOffset = svgDefaultProps.totalsOffset,\n    forwardedRef,\n}: InnerBarProps<D> & {\n    forwardedRef: Ref<SVGSVGElement>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n        barTotals,\n        getColor,\n    } = useBar<D>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        data,\n        keys,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n        totalsOffset,\n    })\n\n    const computeLabelLayout = useComputeLabelLayout(\n        layout,\n        valueScale?.reverse ?? false,\n        labelPosition,\n        labelOffset\n    )\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<D>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n            textAnchor: BarItemProps<D>['style']['textAnchor']\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            ...computeLabelLayout(bar.width, bar.height),\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            ...computeLabelLayout(bar.width, bar.height),\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            ...computeLabelLayout(bar.width, bar.height),\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            ...computeLabelLayout(bar.width, bar.height),\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      ...computeLabelLayout(bar.width, bar.height),\n                      labelX: 0,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n        initial: animate ? undefined : null,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n            ariaHidden: barAriaHidden,\n            ariaDisabled: barAriaDisabled,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n            barAriaHidden,\n            barAriaDisabled,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n        totals: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    if (layers.includes('totals') && enableTotals) {\n        layerById.totals = (\n            <BarTotals\n                key=\"totals\"\n                data={barTotals}\n                springConfig={springConfig}\n                animate={animate}\n                layout={layout}\n            />\n        )\n    }\n\n    const layerContext: BarCustomLayerProps<D> = {\n        ...commonProps,\n        margin,\n        width,\n        height,\n        innerWidth,\n        innerHeight,\n        bars,\n        legendData: legendsWithData,\n        enableLabel,\n        xScale,\n        yScale,\n        tooltip,\n        getTooltipLabel,\n        onClick,\n        onMouseEnter,\n        onMouseLeave,\n        getColor,\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n            ref={forwardedRef}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = forwardRef(\n    <D extends BarDatum>(\n        {\n            isInteractive = svgDefaultProps.isInteractive,\n            animate = svgDefaultProps.animate,\n            motionConfig = svgDefaultProps.motionConfig,\n            theme,\n            renderWrapper,\n            ...props\n        }: BarSvgProps<D>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <Container\n            animate={animate}\n            isInteractive={isInteractive}\n            motionConfig={motionConfig}\n            renderWrapper={renderWrapper}\n            theme={theme}\n        >\n            <InnerBar<D> {...props} isInteractive={isInteractive} forwardedRef={ref} />\n        </Container>\n    )\n) as <D extends BarDatum>(props: WithChartRef<BarSvgProps<D>, SVGSVGElement>) => ReactElement\n","import {\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    ReactElement,\n    Ref,\n} from 'react'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useValueFormatter,\n    WithChartRef,\n    mergeRefs,\n} from '@nivo/core'\nimport { Theme, useTheme } from '@nivo/theming'\nimport { setCanvasFont, drawCanvasText } from '@nivo/text'\nimport { canvasDefaultProps } from './defaults'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    BarCanvasCustomLayerProps,\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarCanvasRenderer,\n    BarCommonProps,\n    BarDatum,\n    BarTooltipComponent,\n    ComputedBarDatum,\n} from './types'\nimport { useBar } from './hooks'\nimport { BarTotalsData } from './compute/totals'\nimport { useComputeLabelLayout } from './compute/common'\n\nconst findBarUnderCursor = <D extends BarDatum>(\n    nodes: ComputedBarDatum<D>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nfunction renderTotalsToCanvas<D extends BarDatum>(\n    ctx: CanvasRenderingContext2D,\n    barTotals: BarTotalsData[],\n    theme: Theme,\n    layout: BarCommonProps<D>['layout'] = canvasDefaultProps.layout\n) {\n    setCanvasFont(ctx, theme.labels.text)\n    ctx.textBaseline = layout === 'vertical' ? 'alphabetic' : 'middle'\n    ctx.textAlign = layout === 'vertical' ? 'center' : 'start'\n\n    barTotals.forEach(barTotal => {\n        drawCanvasText(ctx, theme.labels.text, barTotal.formattedValue, barTotal.x, barTotal.y)\n    })\n}\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    forwardedRef: Ref<HTMLCanvasElement>\n}\n\nconst InnerBarCanvas = <D extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n    margin: partialMargin,\n    width,\n    height,\n    groupMode,\n    layout,\n    valueScale,\n    indexScale,\n    padding,\n    innerPadding,\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n    labelPosition = canvasDefaultProps.labelPosition,\n    labelOffset = canvasDefaultProps.labelOffset,\n    layers = canvasDefaultProps.layers as BarCanvasLayer<D>[],\n    renderBar = canvasDefaultProps.renderBar as unknown as BarCanvasRenderer<D>,\n    enableLabel = canvasDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor,\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n    annotations = canvasDefaultProps.annotations,\n    legendLabel,\n    tooltipLabel,\n    valueFormat,\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip as BarTooltipComponent<D>,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    legends,\n    pixelRatio = canvasDefaultProps.pixelRatio,\n    role,\n    forwardedRef,\n    enableTotals = canvasDefaultProps.enableTotals,\n    totalsOffset = canvasDefaultProps.totalsOffset,\n}: InnerBarCanvasProps<D>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n        barTotals,\n        getColor,\n    } = useBar<D>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        data,\n        keys,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        totalsOffset,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: BarCanvasCustomLayerProps<D> = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            isFocusable: false,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getColor,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getColor,\n        ]\n    )\n\n    const formatValue = useValueFormatter(valueFormat)\n    const computeLabelLayout = useComputeLabelLayout(\n        layout,\n        valueScale?.reverse ?? false,\n        labelPosition,\n        labelOffset\n    )\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale,\n                    yScale: yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                setCanvasFont(ctx, theme.text)\n\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        labelStyle: {\n                            ...theme.labels.text,\n                            fill: getLabelColor(bar) as string,\n                        },\n                        ...computeLabelLayout(bar.width, bar.height),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (layer === 'totals' && enableTotals) {\n                renderTotalsToCanvas(ctx, barTotals, theme, layout)\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        shouldRenderBarLabel,\n        theme,\n        width,\n        barTotals,\n        enableTotals,\n        formatValue,\n        computeLabelLayout,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={mergeRefs(canvasEl, forwardedRef)}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n            role={role}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: Ref<HTMLCanvasElement>\n    ) => (\n        <Container\n            isInteractive={isInteractive}\n            renderWrapper={renderWrapper}\n            theme={theme}\n            animate={false}\n        >\n            <InnerBarCanvas<RawDatum> {...props} isInteractive={isInteractive} forwardedRef={ref} />\n        </Container>\n    )\n) as <RawDatum extends BarDatum>(\n    props: WithChartRef<BarCanvasProps<RawDatum>, HTMLCanvasElement>\n) => ReactElement\n","import { forwardRef, Ref, ReactElement } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { Bar } from './Bar'\nimport { BarDatum, ResponsiveBarSvgProps } from './types'\n\nexport const ResponsiveBar = forwardRef(\n    <D extends BarDatum>(\n        {\n            defaultWidth,\n            defaultHeight,\n            onResize,\n            debounceResize,\n            ...props\n        }: Omit<ResponsiveBarSvgProps<D>, 'ref'>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultHeight}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }) => <Bar<D> {...props} width={width} height={height} ref={ref} />}\n        </ResponsiveWrapper>\n    )\n) as <D extends BarDatum>(props: ResponsiveBarSvgProps<D>) => ReactElement\n","import { ForwardedRef, forwardRef, ReactElement } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { BarDatum, ResponsiveBarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\n\nexport const ResponsiveBarCanvas = forwardRef(\n    <D extends BarDatum>(\n        {\n            defaultWidth,\n            defaultHeight,\n            onResize,\n            debounceResize,\n            ...props\n        }: Omit<ResponsiveBarCanvasProps<D>, 'ref'>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultHeight}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }) => (\n                <BarCanvas<D> {...props} width={width} height={height} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n) as <D extends BarDatum>(props: ResponsiveBarCanvasProps<D>) => ReactElement\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}