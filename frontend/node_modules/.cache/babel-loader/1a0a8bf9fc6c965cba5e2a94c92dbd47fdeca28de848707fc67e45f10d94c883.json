{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\EngineerCharts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, LineChart, Line, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area, ScatterChart, Scatter, ZAxis, ComposedChart, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar, RadialBarChart, RadialBar } from 'recharts';\nimport './EngineerCharts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EngineerCharts = ({\n  data,\n  filters\n}) => {\n  _s();\n  const [activeChart, setActiveChart] = useState('stages');\n  const [timeRange, setTimeRange] = useState('7d');\n  const [chartData, setChartData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [engineerData, setEngineerData] = useState(null);\n  useEffect(() => {\n    fetchEngineerData();\n  }, [filters]);\n  useEffect(() => {\n    if (engineerData) {\n      processChartData();\n    }\n  }, [engineerData, timeRange]);\n  const fetchEngineerData = async () => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      const queryParams = new URLSearchParams();\n      if (filters.domain_id) queryParams.append('domain_id', filters.domain_id);\n      if (filters.project_id) queryParams.append('project_id', filters.project_id);\n      if (filters.block_name) queryParams.append('block_name', filters.block_name);\n      if (filters.experiment) queryParams.append('experiment', filters.experiment);\n      if (filters.stage) queryParams.append('stage', filters.stage);\n      if (filters.run_status) queryParams.append('run_status', filters.run_status);\n      if (filters.user_id) queryParams.append('user_id', filters.user_id);\n      if (filters.start_date) queryParams.append('start_date', filters.start_date);\n      if (filters.end_date) queryParams.append('end_date', filters.end_date);\n      const response = await fetch(`http://localhost:5000/api/data/engineer-chart-data?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setEngineerData(data);\n      } else {\n        console.error('Failed to fetch engineer data');\n      }\n    } catch (error) {\n      console.error('Error fetching engineer data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const processChartData = () => {\n    if (!engineerData) return;\n    const processed = {};\n\n    // 1. Stage-wise Analysis\n    processed.stages = processStageData();\n\n    // 2. Area Trends\n    processed.areaTrends = processAreaTrends();\n\n    // 3. Internal Timing Analysis\n    processed.internalTiming = processInternalTiming();\n\n    // 4. Utilization Analysis\n    processed.utilization = processUtilizationData();\n\n    // 5. Interface Timing Analysis\n    processed.interfaceTiming = processInterfaceTiming();\n\n    // 6. Congestion Analysis\n    processed.congestion = processCongestionData();\n\n    // 7. Performance Metrics\n    processed.performance = processPerformanceMetrics();\n\n    // 8. Runtime Analysis\n    processed.runtime = processRuntimeData();\n    setChartData(processed);\n  };\n  const processStageData = () => {\n    return engineerData.stageAnalysis.map(stage => ({\n      stage: stage.stage || 'Unknown',\n      total: stage.total_runs,\n      pass: stage.pass_count,\n      fail: stage.fail_count,\n      continue_with_error: stage.error_count,\n      avg_area: parseFloat(stage.avg_area) || 0,\n      avg_utilization: parseFloat(stage.avg_utilization) || 0,\n      avg_runtime: parseFloat(stage.avg_runtime) || 0\n    }));\n  };\n  const processAreaTrends = () => {\n    return engineerData.areaTrends.map(trend => ({\n      date: new Date(trend.date).toLocaleDateString(),\n      area: parseFloat(trend.avg_area) || 0,\n      run_count: trend.run_count,\n      utilization: parseFloat(trend.avg_utilization) || 0\n    }));\n  };\n  const processInternalTiming = () => {\n    return engineerData.internalTiming.map(timing => ({\n      block: timing.block_name,\n      internal_timing: timing.internal_timing,\n      count: timing.count,\n      avg_area: parseFloat(timing.avg_area) || 0,\n      avg_utilization: parseFloat(timing.avg_utilization) || 0\n    }));\n  };\n  const processUtilizationData = () => {\n    return engineerData.utilizationAnalysis.map(util => ({\n      block: util.block_name,\n      utilization: parseFloat(util.avg_utilization) || 0,\n      run_count: util.run_count,\n      avg_area: parseFloat(util.avg_area) || 0,\n      avg_runtime: parseFloat(util.avg_runtime) || 0\n    }));\n  };\n  const processInterfaceTiming = () => {\n    return engineerData.interfaceTiming.map(interfaceData => ({\n      block: interfaceData.block_name,\n      interface_timing: interfaceData.interface_timing,\n      count: interfaceData.count,\n      avg_area: parseFloat(interfaceData.avg_area) || 0\n    }));\n  };\n  const processCongestionData = () => {\n    const congestionData = data.filter(row => row.congestion_drc_metrics).map(row => ({\n      block: row.block_name,\n      congestion: row.congestion_drc_metrics,\n      status: row.run_status,\n      stage: row.stage,\n      area: parseFloat(row.area_um2) || 0,\n      utilization: parseFloat(row.utilization) || 0\n    }));\n    return congestionData;\n  };\n  const processPerformanceMetrics = () => {\n    const performanceData = data.map(row => ({\n      block: row.block_name,\n      area: parseFloat(row.area_um2) || 0,\n      utilization: parseFloat(row.utilization) || 0,\n      runtime: parseInt(row.runtime_seconds) || 0,\n      status: row.run_status,\n      stage: row.stage\n    }));\n    return performanceData;\n  };\n  const processRuntimeData = () => {\n    const runtimeData = data.filter(row => row.runtime_seconds && row.run_end_time).map(row => ({\n      date: new Date(row.run_end_time).toLocaleDateString(),\n      runtime: parseInt(row.runtime_seconds),\n      status: row.run_status,\n      stage: row.stage,\n      area: parseFloat(row.area_um2) || 0\n    })).sort((a, b) => new Date(a.date) - new Date(b.date));\n    return runtimeData;\n  };\n  const renderStageAnalysis = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Stage-wise Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Stage Status Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.stages,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"pass\",\n              stackId: \"a\",\n              fill: \"#16a34a\",\n              name: \"Pass\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"fail\",\n              stackId: \"a\",\n              fill: \"#dc2626\",\n              name: \"Fail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"continue_with_error\",\n              stackId: \"a\",\n              fill: \"#f59e0b\",\n              name: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Average Area by Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.stages,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"avg_area\",\n              fill: \"#6366f1\",\n              name: \"Avg Area (um\\xB2)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Average Utilization by Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.stages,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"avg_utilization\",\n              fill: \"#10b981\",\n              name: \"Avg Utilization (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Average Runtime by Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.stages,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"avg_runtime\",\n              fill: \"#f59e0b\",\n              name: \"Avg Runtime (sec)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n  const renderAreaTrends = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Area Trends Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Area Trends Over Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: chartData.areaTrends,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"area\",\n              stroke: \"#6366f1\",\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Area vs Utilization Scatter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"area\",\n              name: \"Area (um\\xB2)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              dataKey: \"utilization\",\n              name: \"Utilization (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: chartData.areaTrends,\n              fill: \"#6366f1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n  const renderInternalTiming = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Internal Timing Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Internal Timing by Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.internalTiming,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"internal_timing\",\n              fill: \"#8b5cf6\",\n              name: \"Internal Timing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n  const renderUtilization = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Utilization Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Utilization Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.utilization,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"utilization\",\n              fill: \"#10b981\",\n              name: \"Utilization (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Utilization vs Runtime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"utilization\",\n              name: \"Utilization (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              dataKey: \"runtime\",\n              name: \"Runtime (sec)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: chartData.utilization,\n              fill: \"#10b981\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n  const renderInterfaceTiming = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Interface Timing Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Interface Timing by Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.interfaceTiming,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"interface_timing\",\n              fill: \"#06b6d4\",\n              name: \"Interface Timing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n  const renderCongestion = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Congestion Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Congestion Metrics by Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.congestion,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"congestion\",\n              fill: \"#ef4444\",\n              name: \"Congestion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Congestion vs Utilization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"utilization\",\n              name: \"Utilization (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              dataKey: \"congestion\",\n              name: \"Congestion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: chartData.congestion,\n              fill: \"#ef4444\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n  const renderPerformance = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Performance Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Area vs Runtime Performance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"area\",\n              name: \"Area (um\\xB2)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              dataKey: \"runtime\",\n              name: \"Runtime (sec)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ZAxis, {\n              dataKey: \"utilization\",\n              range: [100, 400]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: chartData.performance,\n              fill: \"#6366f1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Runtime Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: chartData.runtime,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"runtime\",\n              stroke: \"#f59e0b\",\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n  const renderChartContent = () => {\n    switch (activeChart) {\n      case 'stages':\n        return renderStageAnalysis();\n      case 'area':\n        return renderAreaTrends();\n      case 'internal-timing':\n        return renderInternalTiming();\n      case 'utilization':\n        return renderUtilization();\n      case 'interface-timing':\n        return renderInterfaceTiming();\n      case 'congestion':\n        return renderCongestion();\n      case 'performance':\n        return renderPerformance();\n      default:\n        return renderStageAnalysis();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"engineer-charts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Engineer Analytics Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'stages' ? 'active' : '',\n            onClick: () => setActiveChart('stages'),\n            children: \"Stages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'area' ? 'active' : '',\n            onClick: () => setActiveChart('area'),\n            children: \"Area Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'internal-timing' ? 'active' : '',\n            onClick: () => setActiveChart('internal-timing'),\n            children: \"Internal Timing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'utilization' ? 'active' : '',\n            onClick: () => setActiveChart('utilization'),\n            children: \"Utilization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'interface-timing' ? 'active' : '',\n            onClick: () => setActiveChart('interface-timing'),\n            children: \"Interface Timing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'congestion' ? 'active' : '',\n            onClick: () => setActiveChart('congestion'),\n            children: \"Congestion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'performance' ? 'active' : '',\n            onClick: () => setActiveChart('performance'),\n            children: \"Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-content\",\n      children: renderChartContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 446,\n    columnNumber: 5\n  }, this);\n};\n_s(EngineerCharts, \"zwdOeAZ+wcA3r/03sRaiqiJgFzk=\");\n_c = EngineerCharts;\nexport default EngineerCharts;\nvar _c;\n$RefreshReg$(_c, \"EngineerCharts\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","LineChart","Line","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","AreaChart","Area","ScatterChart","Scatter","ZAxis","ComposedChart","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","RadialBarChart","RadialBar","jsxDEV","_jsxDEV","EngineerCharts","data","filters","_s","activeChart","setActiveChart","timeRange","setTimeRange","chartData","setChartData","loading","setLoading","engineerData","setEngineerData","fetchEngineerData","processChartData","token","localStorage","getItem","queryParams","URLSearchParams","domain_id","append","project_id","block_name","experiment","stage","run_status","user_id","start_date","end_date","response","fetch","headers","ok","json","console","error","processed","stages","processStageData","areaTrends","processAreaTrends","internalTiming","processInternalTiming","utilization","processUtilizationData","interfaceTiming","processInterfaceTiming","congestion","processCongestionData","performance","processPerformanceMetrics","runtime","processRuntimeData","stageAnalysis","map","total","total_runs","pass","pass_count","fail","fail_count","continue_with_error","error_count","avg_area","parseFloat","avg_utilization","avg_runtime","trend","date","Date","toLocaleDateString","area","run_count","timing","block","internal_timing","count","utilizationAnalysis","util","interfaceData","interface_timing","congestionData","filter","row","congestion_drc_metrics","status","area_um2","performanceData","parseInt","runtime_seconds","runtimeData","run_end_time","sort","a","b","renderStageAnalysis","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","stackId","fill","name","renderAreaTrends","type","stroke","strokeWidth","renderInternalTiming","renderUtilization","renderInterfaceTiming","renderCongestion","renderPerformance","range","renderChartContent","onClick","_c","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/EngineerCharts.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  BarChart, Bar, LineChart, Line, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, \r\n  Tooltip, Legend, ResponsiveContainer, AreaChart, Area, ScatterChart, Scatter, \r\n  ZAxis, ComposedChart, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, \r\n  Radar, RadialBarChart, RadialBar\r\n} from 'recharts';\r\nimport './EngineerCharts.css';\r\n\r\nconst EngineerCharts = ({ data, filters }) => {\r\n  const [activeChart, setActiveChart] = useState('stages');\r\n  const [timeRange, setTimeRange] = useState('7d');\r\n  const [chartData, setChartData] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [engineerData, setEngineerData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchEngineerData();\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    if (engineerData) {\r\n      processChartData();\r\n    }\r\n  }, [engineerData, timeRange]);\r\n\r\n  const fetchEngineerData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const queryParams = new URLSearchParams();\r\n      \r\n      if (filters.domain_id) queryParams.append('domain_id', filters.domain_id);\r\n      if (filters.project_id) queryParams.append('project_id', filters.project_id);\r\n      if (filters.block_name) queryParams.append('block_name', filters.block_name);\r\n      if (filters.experiment) queryParams.append('experiment', filters.experiment);\r\n      if (filters.stage) queryParams.append('stage', filters.stage);\r\n      if (filters.run_status) queryParams.append('run_status', filters.run_status);\r\n      if (filters.user_id) queryParams.append('user_id', filters.user_id);\r\n      if (filters.start_date) queryParams.append('start_date', filters.start_date);\r\n      if (filters.end_date) queryParams.append('end_date', filters.end_date);\r\n\r\n      const response = await fetch(`http://localhost:5000/api/data/engineer-chart-data?${queryParams}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setEngineerData(data);\r\n      } else {\r\n        console.error('Failed to fetch engineer data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching engineer data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const processChartData = () => {\r\n    if (!engineerData) return;\r\n\r\n    const processed = {};\r\n\r\n    // 1. Stage-wise Analysis\r\n    processed.stages = processStageData();\r\n    \r\n    // 2. Area Trends\r\n    processed.areaTrends = processAreaTrends();\r\n    \r\n    // 3. Internal Timing Analysis\r\n    processed.internalTiming = processInternalTiming();\r\n    \r\n    // 4. Utilization Analysis\r\n    processed.utilization = processUtilizationData();\r\n    \r\n    // 5. Interface Timing Analysis\r\n    processed.interfaceTiming = processInterfaceTiming();\r\n    \r\n    // 6. Congestion Analysis\r\n    processed.congestion = processCongestionData();\r\n    \r\n    // 7. Performance Metrics\r\n    processed.performance = processPerformanceMetrics();\r\n    \r\n    // 8. Runtime Analysis\r\n    processed.runtime = processRuntimeData();\r\n\r\n    setChartData(processed);\r\n  };\r\n\r\n  const processStageData = () => {\r\n    return engineerData.stageAnalysis.map(stage => ({\r\n      stage: stage.stage || 'Unknown',\r\n      total: stage.total_runs,\r\n      pass: stage.pass_count,\r\n      fail: stage.fail_count,\r\n      continue_with_error: stage.error_count,\r\n      avg_area: parseFloat(stage.avg_area) || 0,\r\n      avg_utilization: parseFloat(stage.avg_utilization) || 0,\r\n      avg_runtime: parseFloat(stage.avg_runtime) || 0\r\n    }));\r\n  };\r\n\r\n  const processAreaTrends = () => {\r\n    return engineerData.areaTrends.map(trend => ({\r\n      date: new Date(trend.date).toLocaleDateString(),\r\n      area: parseFloat(trend.avg_area) || 0,\r\n      run_count: trend.run_count,\r\n      utilization: parseFloat(trend.avg_utilization) || 0\r\n    }));\r\n  };\r\n\r\n  const processInternalTiming = () => {\r\n    return engineerData.internalTiming.map(timing => ({\r\n      block: timing.block_name,\r\n      internal_timing: timing.internal_timing,\r\n      count: timing.count,\r\n      avg_area: parseFloat(timing.avg_area) || 0,\r\n      avg_utilization: parseFloat(timing.avg_utilization) || 0\r\n    }));\r\n  };\r\n\r\n  const processUtilizationData = () => {\r\n    return engineerData.utilizationAnalysis.map(util => ({\r\n      block: util.block_name,\r\n      utilization: parseFloat(util.avg_utilization) || 0,\r\n      run_count: util.run_count,\r\n      avg_area: parseFloat(util.avg_area) || 0,\r\n      avg_runtime: parseFloat(util.avg_runtime) || 0\r\n    }));\r\n  };\r\n\r\n  const processInterfaceTiming = () => {\r\n    return engineerData.interfaceTiming.map(interfaceData => ({\r\n      block: interfaceData.block_name,\r\n      interface_timing: interfaceData.interface_timing,\r\n      count: interfaceData.count,\r\n      avg_area: parseFloat(interfaceData.avg_area) || 0\r\n    }));\r\n  };\r\n\r\n  const processCongestionData = () => {\r\n    const congestionData = data\r\n      .filter(row => row.congestion_drc_metrics)\r\n      .map(row => ({\r\n        block: row.block_name,\r\n        congestion: row.congestion_drc_metrics,\r\n        status: row.run_status,\r\n        stage: row.stage,\r\n        area: parseFloat(row.area_um2) || 0,\r\n        utilization: parseFloat(row.utilization) || 0\r\n      }));\r\n\r\n    return congestionData;\r\n  };\r\n\r\n  const processPerformanceMetrics = () => {\r\n    const performanceData = data.map(row => ({\r\n      block: row.block_name,\r\n      area: parseFloat(row.area_um2) || 0,\r\n      utilization: parseFloat(row.utilization) || 0,\r\n      runtime: parseInt(row.runtime_seconds) || 0,\r\n      status: row.run_status,\r\n      stage: row.stage\r\n    }));\r\n\r\n    return performanceData;\r\n  };\r\n\r\n  const processRuntimeData = () => {\r\n    const runtimeData = data\r\n      .filter(row => row.runtime_seconds && row.run_end_time)\r\n      .map(row => ({\r\n        date: new Date(row.run_end_time).toLocaleDateString(),\r\n        runtime: parseInt(row.runtime_seconds),\r\n        status: row.run_status,\r\n        stage: row.stage,\r\n        area: parseFloat(row.area_um2) || 0\r\n      }))\r\n      .sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n    return runtimeData;\r\n  };\r\n\r\n  const renderStageAnalysis = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Stage-wise Analysis</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Stage Status Distribution</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.stages}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"stage\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"pass\" stackId=\"a\" fill=\"#16a34a\" name=\"Pass\" />\r\n              <Bar dataKey=\"fail\" stackId=\"a\" fill=\"#dc2626\" name=\"Fail\" />\r\n              <Bar dataKey=\"continue_with_error\" stackId=\"a\" fill=\"#f59e0b\" name=\"Error\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Average Area by Stage</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.stages}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"stage\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"avg_area\" fill=\"#6366f1\" name=\"Avg Area (um²)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Average Utilization by Stage</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.stages}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"stage\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"avg_utilization\" fill=\"#10b981\" name=\"Avg Utilization (%)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Average Runtime by Stage</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.stages}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"stage\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"avg_runtime\" fill=\"#f59e0b\" name=\"Avg Runtime (sec)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderAreaTrends = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Area Trends Analysis</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Area Trends Over Time</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={chartData.areaTrends}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"date\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Line type=\"monotone\" dataKey=\"area\" stroke=\"#6366f1\" strokeWidth={2} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Area vs Utilization Scatter</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"area\" name=\"Area (um²)\" />\r\n              <YAxis dataKey=\"utilization\" name=\"Utilization (%)\" />\r\n              <Tooltip />\r\n              <Scatter data={chartData.areaTrends} fill=\"#6366f1\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderInternalTiming = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Internal Timing Analysis</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Internal Timing by Block</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.internalTiming}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"block\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"internal_timing\" fill=\"#8b5cf6\" name=\"Internal Timing\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderUtilization = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Utilization Analysis</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Utilization Distribution</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.utilization}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"block\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"utilization\" fill=\"#10b981\" name=\"Utilization (%)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Utilization vs Runtime</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"utilization\" name=\"Utilization (%)\" />\r\n              <YAxis dataKey=\"runtime\" name=\"Runtime (sec)\" />\r\n              <Tooltip />\r\n              <Scatter data={chartData.utilization} fill=\"#10b981\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderInterfaceTiming = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Interface Timing Analysis</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Interface Timing by Block</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.interfaceTiming}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"block\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"interface_timing\" fill=\"#06b6d4\" name=\"Interface Timing\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderCongestion = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Congestion Analysis</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Congestion Metrics by Block</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.congestion}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"block\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"congestion\" fill=\"#ef4444\" name=\"Congestion\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Congestion vs Utilization</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"utilization\" name=\"Utilization (%)\" />\r\n              <YAxis dataKey=\"congestion\" name=\"Congestion\" />\r\n              <Tooltip />\r\n              <Scatter data={chartData.congestion} fill=\"#ef4444\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderPerformance = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Performance Metrics</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Area vs Runtime Performance</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"area\" name=\"Area (um²)\" />\r\n              <YAxis dataKey=\"runtime\" name=\"Runtime (sec)\" />\r\n              <ZAxis dataKey=\"utilization\" range={[100, 400]} />\r\n              <Tooltip />\r\n              <Scatter data={chartData.performance} fill=\"#6366f1\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Runtime Trends</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={chartData.runtime}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"date\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Line type=\"monotone\" dataKey=\"runtime\" stroke=\"#f59e0b\" strokeWidth={2} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderChartContent = () => {\r\n    switch (activeChart) {\r\n      case 'stages':\r\n        return renderStageAnalysis();\r\n      case 'area':\r\n        return renderAreaTrends();\r\n      case 'internal-timing':\r\n        return renderInternalTiming();\r\n      case 'utilization':\r\n        return renderUtilization();\r\n      case 'interface-timing':\r\n        return renderInterfaceTiming();\r\n      case 'congestion':\r\n        return renderCongestion();\r\n      case 'performance':\r\n        return renderPerformance();\r\n      default:\r\n        return renderStageAnalysis();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"engineer-charts\">\r\n      <div className=\"charts-header\">\r\n        <h2>Engineer Analytics Dashboard</h2>\r\n        <div className=\"chart-controls\">\r\n          <div className=\"chart-tabs\">\r\n            <button \r\n              className={activeChart === 'stages' ? 'active' : ''}\r\n              onClick={() => setActiveChart('stages')}\r\n            >\r\n              Stages\r\n            </button>\r\n            <button \r\n              className={activeChart === 'area' ? 'active' : ''}\r\n              onClick={() => setActiveChart('area')}\r\n            >\r\n              Area Trends\r\n            </button>\r\n            <button \r\n              className={activeChart === 'internal-timing' ? 'active' : ''}\r\n              onClick={() => setActiveChart('internal-timing')}\r\n            >\r\n              Internal Timing\r\n            </button>\r\n            <button \r\n              className={activeChart === 'utilization' ? 'active' : ''}\r\n              onClick={() => setActiveChart('utilization')}\r\n            >\r\n              Utilization\r\n            </button>\r\n            <button \r\n              className={activeChart === 'interface-timing' ? 'active' : ''}\r\n              onClick={() => setActiveChart('interface-timing')}\r\n            >\r\n              Interface Timing\r\n            </button>\r\n            <button \r\n              className={activeChart === 'congestion' ? 'active' : ''}\r\n              onClick={() => setActiveChart('congestion')}\r\n            >\r\n              Congestion\r\n            </button>\r\n            <button \r\n              className={activeChart === 'performance' ? 'active' : ''}\r\n              onClick={() => setActiveChart('performance')}\r\n            >\r\n              Performance\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"charts-content\">\r\n        {renderChartContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EngineerCharts; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}