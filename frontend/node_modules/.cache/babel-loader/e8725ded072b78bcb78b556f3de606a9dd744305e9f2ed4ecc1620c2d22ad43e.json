{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\EngineeringCharts.jsx\";\nimport React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { ResponsiveLine } from '@nivo/line';\nimport { ResponsiveAreaBump } from '@nivo/bump';\nimport { ResponsivePie } from '@nivo/pie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartColors = ['#7367f0', '#28c76f', '#ff9f43', '#ea5455', '#00cfe8', '#ff5b5c', '#9c8cfc', '#f8d3ff'];\n\n// Helper to prepare data for bar/line charts\nconst prepareStageMetricData = (data, metric) => {\n  // Group by stage\n  const grouped = {};\n  data.forEach(row => {\n    const stage = row.stage || 'Unknown';\n    if (!grouped[stage]) grouped[stage] = [];\n    grouped[stage].push(row);\n  });\n  // Aggregate (average) metric per stage\n  return Object.entries(grouped).map(([stage, rows]) => ({\n    stage,\n    value: rows.reduce((sum, r) => sum + (parseFloat(r[metric]) || 0), 0) / rows.length\n  }));\n};\nconst metricLabels = {\n  area_um2: 'Area (um²)',\n  internal_timing: 'Internal Timing',\n  utilization: 'Utilization (%)',\n  interface_timing: 'Interface Timing',\n  congestion_drc_metrics: 'Congestion/DRC'\n};\nconst metrics = ['area_um2', 'internal_timing', 'utilization', 'interface_timing', 'congestion_drc_metrics'];\nconst EngineeringCharts = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))',\n      gap: '2rem',\n      margin: '2rem 0'\n    },\n    children: metrics.map((metric, idx) => {\n      const chartData = prepareStageMetricData(data, metric);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(40,48,70,0.95)',\n          borderRadius: 16,\n          padding: 24,\n          boxShadow: '0 4px 16px rgba(0,0,0,0.15)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: '#fff',\n            marginBottom: 16\n          },\n          children: metricLabels[metric]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 260\n          },\n          children: /*#__PURE__*/_jsxDEV(ResponsiveBar, {\n            data: chartData,\n            keys: ['value'],\n            indexBy: \"stage\",\n            margin: {\n              top: 30,\n              right: 30,\n              bottom: 60,\n              left: 60\n            },\n            padding: 0.3,\n            colors: chartColors[idx % chartColors.length],\n            axisBottom: {\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: -30,\n              legend: 'Stage',\n              legendPosition: 'middle',\n              legendOffset: 40\n            },\n            axisLeft: {\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: metricLabels[metric],\n              legendPosition: 'middle',\n              legendOffset: -50\n            },\n            tooltip: ({\n              id,\n              value,\n              indexValue\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: '#222',\n                background: '#fff',\n                padding: 8,\n                borderRadius: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: indexValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 50\n              }, this), metricLabels[metric], \": \", value && !isNaN(value) ? value.toFixed(2) : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this),\n            theme: {\n              axis: {\n                ticks: {\n                  text: {\n                    fill: '#b4b7bd'\n                  }\n                },\n                legend: {\n                  text: {\n                    fill: '#b4b7bd'\n                  }\n                }\n              },\n              legends: {\n                text: {\n                  fill: '#b4b7bd'\n                }\n              },\n              tooltip: {\n                container: {\n                  background: '#fff',\n                  color: '#222'\n                }\n              }\n            },\n            enableLabel: false,\n            animate: true,\n            motionStiffness: 90,\n            motionDamping: 15\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, metric, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = EngineeringCharts;\nexport default EngineeringCharts;\nvar _c;\n$RefreshReg$(_c, \"EngineeringCharts\");","map":{"version":3,"names":["React","ResponsiveBar","ResponsiveLine","ResponsiveAreaBump","ResponsivePie","jsxDEV","_jsxDEV","chartColors","prepareStageMetricData","data","metric","grouped","forEach","row","stage","push","Object","entries","map","rows","value","reduce","sum","r","parseFloat","length","metricLabels","area_um2","internal_timing","utilization","interface_timing","congestion_drc_metrics","metrics","EngineeringCharts","style","display","gridTemplateColumns","gap","margin","children","idx","chartData","background","borderRadius","padding","boxShadow","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","height","keys","indexBy","top","right","bottom","left","colors","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","tooltip","id","indexValue","isNaN","toFixed","theme","axis","ticks","text","fill","legends","container","enableLabel","animate","motionStiffness","motionDamping","_c","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/EngineeringCharts.jsx"],"sourcesContent":["import React from 'react';\r\nimport { ResponsiveBar } from '@nivo/bar';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport { ResponsiveAreaBump } from '@nivo/bump';\r\nimport { ResponsivePie } from '@nivo/pie';\r\n\r\nconst chartColors = [\r\n  '#7367f0', '#28c76f', '#ff9f43', '#ea5455', '#00cfe8', '#ff5b5c', '#9c8cfc', '#f8d3ff'\r\n];\r\n\r\n// Helper to prepare data for bar/line charts\r\nconst prepareStageMetricData = (data, metric) => {\r\n  // Group by stage\r\n  const grouped = {};\r\n  data.forEach(row => {\r\n    const stage = row.stage || 'Unknown';\r\n    if (!grouped[stage]) grouped[stage] = [];\r\n    grouped[stage].push(row);\r\n  });\r\n  // Aggregate (average) metric per stage\r\n  return Object.entries(grouped).map(([stage, rows]) => ({\r\n    stage,\r\n    value: rows.reduce((sum, r) => sum + (parseFloat(r[metric]) || 0), 0) / rows.length\r\n  }));\r\n};\r\n\r\nconst metricLabels = {\r\n  area_um2: 'Area (um²)',\r\n  internal_timing: 'Internal Timing',\r\n  utilization: 'Utilization (%)',\r\n  interface_timing: 'Interface Timing',\r\n  congestion_drc_metrics: 'Congestion/DRC',\r\n};\r\n\r\nconst metrics = [\r\n  'area_um2',\r\n  'internal_timing',\r\n  'utilization',\r\n  'interface_timing',\r\n  'congestion_drc_metrics',\r\n];\r\n\r\nconst EngineeringCharts = ({ data }) => {\r\n  return (\r\n    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))', gap: '2rem', margin: '2rem 0' }}>\r\n      {metrics.map((metric, idx) => {\r\n        const chartData = prepareStageMetricData(data, metric);\r\n        return (\r\n          <div key={metric} style={{ background: 'rgba(40,48,70,0.95)', borderRadius: 16, padding: 24, boxShadow: '0 4px 16px rgba(0,0,0,0.15)' }}>\r\n            <h4 style={{ color: '#fff', marginBottom: 16 }}>{metricLabels[metric]}</h4>\r\n            <div style={{ height: 260 }}>\r\n              <ResponsiveBar\r\n                data={chartData}\r\n                keys={['value']}\r\n                indexBy=\"stage\"\r\n                margin={{ top: 30, right: 30, bottom: 60, left: 60 }}\r\n                padding={0.3}\r\n                colors={chartColors[idx % chartColors.length]}\r\n                axisBottom={{\r\n                  tickSize: 5,\r\n                  tickPadding: 5,\r\n                  tickRotation: -30,\r\n                  legend: 'Stage',\r\n                  legendPosition: 'middle',\r\n                  legendOffset: 40,\r\n                }}\r\n                axisLeft={{\r\n                  tickSize: 5,\r\n                  tickPadding: 5,\r\n                  tickRotation: 0,\r\n                  legend: metricLabels[metric],\r\n                  legendPosition: 'middle',\r\n                  legendOffset: -50,\r\n                }}\r\n                tooltip={({ id, value, indexValue }) => (\r\n                  <div style={{ color: '#222', background: '#fff', padding: 8, borderRadius: 8 }}>\r\n                    <strong>{indexValue}</strong><br />\r\n                    {metricLabels[metric]}: {value && !isNaN(value) ? value.toFixed(2) : 'N/A'}\r\n                  </div>\r\n                )}\r\n                theme={{\r\n                  axis: {\r\n                    ticks: { text: { fill: '#b4b7bd' } },\r\n                    legend: { text: { fill: '#b4b7bd' } },\r\n                  },\r\n                  legends: { text: { fill: '#b4b7bd' } },\r\n                  tooltip: { container: { background: '#fff', color: '#222' } },\r\n                }}\r\n                enableLabel={false}\r\n                animate\r\n                motionStiffness={90}\r\n                motionDamping={15}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EngineeringCharts; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}