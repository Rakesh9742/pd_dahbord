{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\AnimatedNumber.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnimatedNumber({\n  value,\n  ...props\n}) {\n  // Try to convert to number\n  const numValue = Number(value);\n  const isValidNumber = typeof numValue === 'number' && !isNaN(numValue) && value !== '' && value !== null;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    ...props,\n    children: isValidNumber ? numValue.toFixed(2) : value || 'N/A'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = AnimatedNumber;\nexport default AnimatedNumber;\nvar _c;\n$RefreshReg$(_c, \"AnimatedNumber\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AnimatedNumber","value","props","numValue","Number","isValidNumber","isNaN","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/AnimatedNumber.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nfunction AnimatedNumber({ value, ...props }) {\r\n  // Try to convert to number\r\n  const numValue = Number(value);\r\n  const isValidNumber = typeof numValue === 'number' && !isNaN(numValue) && value !== '' && value !== null;\r\n\r\n  return (\r\n    <span {...props}>\r\n      {isValidNumber ? numValue.toFixed(2) : (value || 'N/A')}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default AnimatedNumber; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAC;EAAEC,KAAK;EAAE,GAAGC;AAAM,CAAC,EAAE;EAC3C;EACA,MAAMC,QAAQ,GAAGC,MAAM,CAACH,KAAK,CAAC;EAC9B,MAAMI,aAAa,GAAG,OAAOF,QAAQ,KAAK,QAAQ,IAAI,CAACG,KAAK,CAACH,QAAQ,CAAC,IAAIF,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,IAAI;EAExG,oBACEF,OAAA;IAAA,GAAUG,KAAK;IAAAK,QAAA,EACZF,aAAa,GAAGF,QAAQ,CAACK,OAAO,CAAC,CAAC,CAAC,GAAIP,KAAK,IAAI;EAAM;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEX;AAACC,EAAA,GAVQb,cAAc;AAYvB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}