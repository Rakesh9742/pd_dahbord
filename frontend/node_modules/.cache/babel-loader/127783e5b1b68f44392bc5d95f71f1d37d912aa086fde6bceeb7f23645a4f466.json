{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\EngineeringCharts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './EngineeringCharts.css';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EngineeringCharts = () => {\n  _s();\n  var _filterOptions$domain, _filterOptions$projec, _filterOptions$experi, _filterOptions$blocks, _metrics$find, _metrics$find2;\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedMetric, setSelectedMetric] = useState('area');\n  const [filters, setFilters] = useState({\n    domain_id: '',\n    project_id: '',\n    experiment: '',\n    block_name: ''\n  });\n  const [filterOptions, setFilterOptions] = useState({});\n  const token = localStorage.getItem('token');\n  const metrics = [{\n    key: 'area',\n    label: 'Area (μm²)',\n    color: '#8884d8'\n  }, {\n    key: 'internal_timing',\n    label: 'Internal Timing',\n    color: '#82ca9d'\n  }, {\n    key: 'interface_timing',\n    label: 'Interface Timing',\n    color: '#ffc658'\n  }, {\n    key: 'utilization',\n    label: 'Utilization (%)',\n    color: '#ff7300'\n  }, {\n    key: 'congestion',\n    label: 'Congestion',\n    color: '#ff0000'\n  }, {\n    key: 'inst_count',\n    label: 'Instance Count',\n    color: '#00ff00'\n  }];\n  useEffect(() => {\n    fetchFilterOptions();\n    fetchChartData();\n  }, [filters]);\n  const fetchFilterOptions = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/data/filter-options', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setFilterOptions(data);\n      }\n    } catch (error) {\n      console.error('Error fetching filter options:', error);\n    }\n  };\n  const fetchChartData = async () => {\n    try {\n      setLoading(true);\n      const queryParams = new URLSearchParams();\n      if (filters.domain_id) queryParams.append('domain_id', filters.domain_id);\n      if (filters.project_id) queryParams.append('project_id', filters.project_id);\n      if (filters.experiment) queryParams.append('experiment', filters.experiment);\n      if (filters.block_name) queryParams.append('block_name', filters.block_name);\n      const response = await fetch(`http://localhost:5000/api/data/pd-data?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const result = await response.json();\n        processChartData(result.data);\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const processChartData = data => {\n    // Group data by stage and calculate metrics\n    const stageData = {};\n    data.forEach(item => {\n      const stage = item.stage || 'Unknown';\n      if (!stageData[stage]) {\n        stageData[stage] = {\n          stage,\n          count: 0,\n          area_sum: 0,\n          internal_timing_sum: 0,\n          interface_timing_sum: 0,\n          utilization_sum: 0,\n          congestion_sum: 0,\n          inst_count_sum: 0,\n          pass_count: 0,\n          fail_count: 0,\n          error_count: 0\n        };\n      }\n      stageData[stage].count++;\n      stageData[stage].area_sum += parseFloat(item.area_um2) || 0;\n      stageData[stage].internal_timing_sum += parseFloat(item.internal_timing) || 0;\n      stageData[stage].interface_timing_sum += parseFloat(item.interface_timing) || 0;\n      stageData[stage].utilization_sum += parseFloat(item.utilization) || 0;\n      stageData[stage].inst_count_sum += parseInt(item.inst_count) || 0;\n\n      // Handle congestion (might be text, try to extract numeric value)\n      const congestionValue = parseFloat(item.congestion_drc_metrics) || 0;\n      stageData[stage].congestion_sum += congestionValue;\n\n      // Count status\n      if (item.run_status === 'pass') stageData[stage].pass_count++;else if (item.run_status === 'fail') stageData[stage].fail_count++;else if (item.run_status === 'continue_with_error') stageData[stage].error_count++;\n    });\n\n    // Calculate averages and format for charts\n    const processedData = Object.values(stageData).map(stage => ({\n      stage: stage.stage,\n      count: stage.count,\n      area: stage.count > 0 ? stage.area_sum / stage.count : 0,\n      internal_timing: stage.count > 0 ? stage.internal_timing_sum / stage.count : 0,\n      interface_timing: stage.count > 0 ? stage.interface_timing_sum / stage.count : 0,\n      utilization: stage.count > 0 ? stage.utilization_sum / stage.count : 0,\n      congestion: stage.count > 0 ? stage.congestion_sum / stage.count : 0,\n      inst_count: stage.count > 0 ? stage.inst_count_sum / stage.count : 0,\n      pass_rate: stage.count > 0 ? stage.pass_count / stage.count * 100 : 0,\n      fail_rate: stage.count > 0 ? stage.fail_count / stage.count * 100 : 0,\n      error_rate: stage.count > 0 ? stage.error_count / stage.count * 100 : 0\n    }));\n    setChartData(processedData);\n  };\n  const handleFilterChange = (key, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const renderChart = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading chart data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this);\n    }\n    if (chartData.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available for the selected filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this);\n    }\n    const selectedMetricData = metrics.find(m => m.key === selectedMetric);\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: selectedMetric,\n          fill: selectedMetricData.color,\n          name: selectedMetricData.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStatusChart = () => {\n    if (chartData.length === 0) return null;\n    const statusData = chartData.map(stage => ({\n      stage: stage.stage,\n      pass: stage.pass_rate,\n      fail: stage.fail_rate,\n      error: stage.error_rate\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Run Status by Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: statusData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"pass\",\n            stackId: \"a\",\n            fill: \"#16a34a\",\n            name: \"Pass Rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"fail\",\n            stackId: \"a\",\n            fill: \"#dc2626\",\n            name: \"Fail Rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"error\",\n            stackId: \"a\",\n            fill: \"#f59e0b\",\n            name: \"Error Rate (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"engineering-charts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Engineering Charts Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Visualize engineering data by stages and metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Domain:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.domain_id,\n          onChange: e => handleFilterChange('domain_id', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Domains\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), (_filterOptions$domain = filterOptions.domains) === null || _filterOptions$domain === void 0 ? void 0 : _filterOptions$domain.map(domain => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: domain.id,\n            children: domain.full_name\n          }, domain.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Project:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.project_id,\n          onChange: e => handleFilterChange('project_id', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), (_filterOptions$projec = filterOptions.projects) === null || _filterOptions$projec === void 0 ? void 0 : _filterOptions$projec.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: project.id,\n            children: project.project_name\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Experiment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.experiment,\n          onChange: e => handleFilterChange('experiment', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Experiments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), (_filterOptions$experi = filterOptions.experiments) === null || _filterOptions$experi === void 0 ? void 0 : _filterOptions$experi.map(experiment => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: experiment,\n            children: experiment\n          }, experiment, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Block Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.block_name,\n          onChange: e => handleFilterChange('block_name', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Blocks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), (_filterOptions$blocks = filterOptions.blocks) === null || _filterOptions$blocks === void 0 ? void 0 : _filterOptions$blocks.map(block => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: block,\n            children: block\n          }, block, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filters.start_date,\n          onChange: e => handleFilterChange('start_date', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"End Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filters.end_date,\n          onChange: e => handleFilterChange('end_date', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Metric to Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-buttons-grid\",\n        children: metrics.map(metric => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `metric-button ${selectedMetric === metric.key ? 'active' : ''}`,\n          onClick: () => setSelectedMetric(metric.key),\n          style: {\n            '--metric-color': metric.color\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-button-icon\",\n            style: {\n              backgroundColor: metric.color\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-button-label\",\n            children: metric.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, metric.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [(_metrics$find = metrics.find(m => m.key === selectedMetric)) === null || _metrics$find === void 0 ? void 0 : _metrics$find.label, \" by Stage\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), renderChart()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), renderStatusChart(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Stages:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: chartData.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Runs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: chartData.reduce((sum, stage) => sum + stage.count, 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: [\"Average \", (_metrics$find2 = metrics.find(m => m.key === selectedMetric)) === null || _metrics$find2 === void 0 ? void 0 : _metrics$find2.label, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage[selectedMetric], 0) / chartData.length).toFixed(2) : '0'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(EngineeringCharts, \"sBrv03D4lQDJ5g4cZP6P5jUJpRo=\");\n_c = EngineeringCharts;\nexport default EngineeringCharts;\nvar _c;\n$RefreshReg$(_c, \"EngineeringCharts\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","EngineeringCharts","_s","_filterOptions$domain","_filterOptions$projec","_filterOptions$experi","_filterOptions$blocks","_metrics$find","_metrics$find2","chartData","setChartData","loading","setLoading","selectedMetric","setSelectedMetric","filters","setFilters","domain_id","project_id","experiment","block_name","filterOptions","setFilterOptions","token","localStorage","getItem","metrics","key","label","color","fetchFilterOptions","fetchChartData","response","fetch","headers","ok","data","json","error","console","queryParams","URLSearchParams","append","result","processChartData","stageData","forEach","item","stage","count","area_sum","internal_timing_sum","interface_timing_sum","utilization_sum","congestion_sum","inst_count_sum","pass_count","fail_count","error_count","parseFloat","area_um2","internal_timing","interface_timing","utilization","parseInt","inst_count","congestionValue","congestion_drc_metrics","run_status","processedData","Object","values","map","area","congestion","pass_rate","fail_rate","error_rate","handleFilterChange","value","prev","renderChart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","selectedMetricData","find","m","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","name","renderStatusChart","statusData","pass","fail","stackId","onChange","e","target","domains","domain","id","full_name","projects","project","project_name","experiments","blocks","block","type","start_date","end_date","metric","onClick","style","backgroundColor","reduce","sum","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/EngineeringCharts.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './EngineeringCharts.css';\r\nimport { \r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, \r\n  ResponsiveContainer \r\n} from 'recharts';\r\n\r\nconst EngineeringCharts = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedMetric, setSelectedMetric] = useState('area');\r\n  const [filters, setFilters] = useState({\r\n    domain_id: '',\r\n    project_id: '',\r\n    experiment: '',\r\n    block_name: ''\r\n  });\r\n  const [filterOptions, setFilterOptions] = useState({});\r\n\r\n  const token = localStorage.getItem('token');\r\n\r\n  const metrics = [\r\n    { key: 'area', label: 'Area (μm²)', color: '#8884d8' },\r\n    { key: 'internal_timing', label: 'Internal Timing', color: '#82ca9d' },\r\n    { key: 'interface_timing', label: 'Interface Timing', color: '#ffc658' },\r\n    { key: 'utilization', label: 'Utilization (%)', color: '#ff7300' },\r\n    { key: 'congestion', label: 'Congestion', color: '#ff0000' },\r\n    { key: 'inst_count', label: 'Instance Count', color: '#00ff00' }\r\n  ];\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchFilterOptions();\r\n    fetchChartData();\r\n  }, [filters]);\r\n\r\n  const fetchFilterOptions = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/data/filter-options', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setFilterOptions(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching filter options:', error);\r\n    }\r\n  };\r\n\r\n  const fetchChartData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const queryParams = new URLSearchParams();\r\n      \r\n      if (filters.domain_id) queryParams.append('domain_id', filters.domain_id);\r\n      if (filters.project_id) queryParams.append('project_id', filters.project_id);\r\n      if (filters.experiment) queryParams.append('experiment', filters.experiment);\r\n      if (filters.block_name) queryParams.append('block_name', filters.block_name);\r\n\r\n      const response = await fetch(`http://localhost:5000/api/data/pd-data?${queryParams}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        processChartData(result.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching chart data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const processChartData = (data) => {\r\n    // Group data by stage and calculate metrics\r\n    const stageData = {};\r\n    \r\n    data.forEach(item => {\r\n      const stage = item.stage || 'Unknown';\r\n      if (!stageData[stage]) {\r\n        stageData[stage] = {\r\n          stage,\r\n          count: 0,\r\n          area_sum: 0,\r\n          internal_timing_sum: 0,\r\n          interface_timing_sum: 0,\r\n          utilization_sum: 0,\r\n          congestion_sum: 0,\r\n          inst_count_sum: 0,\r\n          pass_count: 0,\r\n          fail_count: 0,\r\n          error_count: 0\r\n        };\r\n      }\r\n      \r\n      stageData[stage].count++;\r\n      stageData[stage].area_sum += parseFloat(item.area_um2) || 0;\r\n      stageData[stage].internal_timing_sum += parseFloat(item.internal_timing) || 0;\r\n      stageData[stage].interface_timing_sum += parseFloat(item.interface_timing) || 0;\r\n      stageData[stage].utilization_sum += parseFloat(item.utilization) || 0;\r\n      stageData[stage].inst_count_sum += parseInt(item.inst_count) || 0;\r\n      \r\n      // Handle congestion (might be text, try to extract numeric value)\r\n      const congestionValue = parseFloat(item.congestion_drc_metrics) || 0;\r\n      stageData[stage].congestion_sum += congestionValue;\r\n      \r\n      // Count status\r\n      if (item.run_status === 'pass') stageData[stage].pass_count++;\r\n      else if (item.run_status === 'fail') stageData[stage].fail_count++;\r\n      else if (item.run_status === 'continue_with_error') stageData[stage].error_count++;\r\n    });\r\n\r\n    // Calculate averages and format for charts\r\n    const processedData = Object.values(stageData).map(stage => ({\r\n      stage: stage.stage,\r\n      count: stage.count,\r\n      area: stage.count > 0 ? stage.area_sum / stage.count : 0,\r\n      internal_timing: stage.count > 0 ? stage.internal_timing_sum / stage.count : 0,\r\n      interface_timing: stage.count > 0 ? stage.interface_timing_sum / stage.count : 0,\r\n      utilization: stage.count > 0 ? stage.utilization_sum / stage.count : 0,\r\n      congestion: stage.count > 0 ? stage.congestion_sum / stage.count : 0,\r\n      inst_count: stage.count > 0 ? stage.inst_count_sum / stage.count : 0,\r\n      pass_rate: stage.count > 0 ? (stage.pass_count / stage.count) * 100 : 0,\r\n      fail_rate: stage.count > 0 ? (stage.fail_count / stage.count) * 100 : 0,\r\n      error_rate: stage.count > 0 ? (stage.error_count / stage.count) * 100 : 0\r\n    }));\r\n\r\n    setChartData(processedData);\r\n  };\r\n\r\n  const handleFilterChange = (key, value) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [key]: value\r\n    }));\r\n  };\r\n\r\n  const renderChart = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading chart data...</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (chartData.length === 0) {\r\n      return (\r\n        <div className=\"no-data-container\">\r\n          <p>No data available for the selected filters</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const selectedMetricData = metrics.find(m => m.key === selectedMetric);\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <BarChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"stage\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar \r\n            dataKey={selectedMetric} \r\n            fill={selectedMetricData.color}\r\n            name={selectedMetricData.label}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  };\r\n\r\n  const renderStatusChart = () => {\r\n    if (chartData.length === 0) return null;\r\n\r\n    const statusData = chartData.map(stage => ({\r\n      stage: stage.stage,\r\n      pass: stage.pass_rate,\r\n      fail: stage.fail_rate,\r\n      error: stage.error_rate\r\n    }));\r\n\r\n    return (\r\n      <div className=\"status-chart-container\">\r\n        <h3>Run Status by Stage</h3>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <BarChart data={statusData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"stage\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"pass\" stackId=\"a\" fill=\"#16a34a\" name=\"Pass Rate (%)\" />\r\n            <Bar dataKey=\"fail\" stackId=\"a\" fill=\"#dc2626\" name=\"Fail Rate (%)\" />\r\n            <Bar dataKey=\"error\" stackId=\"a\" fill=\"#f59e0b\" name=\"Error Rate (%)\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"engineering-charts\">\r\n      <div className=\"charts-header\">\r\n        <h2>Engineering Charts Dashboard</h2>\r\n        <p>Visualize engineering data by stages and metrics</p>\r\n      </div>\r\n\r\n      {/* Filters Section */}\r\n      <div className=\"filters-section\">\r\n        <div className=\"filter-group\">\r\n          <label>Domain:</label>\r\n          <select \r\n            value={filters.domain_id} \r\n            onChange={(e) => handleFilterChange('domain_id', e.target.value)}\r\n          >\r\n            <option value=\"\">All Domains</option>\r\n            {filterOptions.domains?.map(domain => (\r\n              <option key={domain.id} value={domain.id}>\r\n                {domain.full_name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label>Project:</label>\r\n          <select \r\n            value={filters.project_id} \r\n            onChange={(e) => handleFilterChange('project_id', e.target.value)}\r\n          >\r\n            <option value=\"\">All Projects</option>\r\n            {filterOptions.projects?.map(project => (\r\n              <option key={project.id} value={project.id}>\r\n                {project.project_name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label>Experiment:</label>\r\n          <select \r\n            value={filters.experiment} \r\n            onChange={(e) => handleFilterChange('experiment', e.target.value)}\r\n          >\r\n            <option value=\"\">All Experiments</option>\r\n            {filterOptions.experiments?.map(experiment => (\r\n              <option key={experiment} value={experiment}>\r\n                {experiment}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label>Block Name:</label>\r\n          <select \r\n            value={filters.block_name} \r\n            onChange={(e) => handleFilterChange('block_name', e.target.value)}\r\n          >\r\n            <option value=\"\">All Blocks</option>\r\n            {filterOptions.blocks?.map(block => (\r\n              <option key={block} value={block}>\r\n                {block}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label>Start Date:</label>\r\n          <input \r\n            type=\"date\" \r\n            value={filters.start_date}\r\n            onChange={(e) => handleFilterChange('start_date', e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"filter-group\">\r\n          <label>End Date:</label>\r\n          <input \r\n            type=\"date\" \r\n            value={filters.end_date}\r\n            onChange={(e) => handleFilterChange('end_date', e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Metric Selection Buttons */}\r\n      <div className=\"metric-buttons\">\r\n        <h3>Select Metric to Display</h3>\r\n        <div className=\"metric-buttons-grid\">\r\n          {metrics.map(metric => (\r\n            <button\r\n              key={metric.key}\r\n              className={`metric-button ${selectedMetric === metric.key ? 'active' : ''}`}\r\n              onClick={() => setSelectedMetric(metric.key)}\r\n              style={{ '--metric-color': metric.color }}\r\n            >\r\n              <div className=\"metric-button-icon\" style={{ backgroundColor: metric.color }}></div>\r\n              <span className=\"metric-button-label\">{metric.label}</span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Chart */}\r\n      <div className=\"main-chart-container\">\r\n        <h3>{metrics.find(m => m.key === selectedMetric)?.label} by Stage</h3>\r\n        {renderChart()}\r\n      </div>\r\n\r\n      {/* Status Chart */}\r\n      {renderStatusChart()}\r\n\r\n      {/* Data Summary */}\r\n      <div className=\"data-summary\">\r\n        <h3>Data Summary</h3>\r\n        <div className=\"summary-grid\">\r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-label\">Total Stages:</span>\r\n            <span className=\"summary-value\">{chartData.length}</span>\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-label\">Total Runs:</span>\r\n            <span className=\"summary-value\">\r\n              {chartData.reduce((sum, stage) => sum + stage.count, 0)}\r\n            </span>\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-label\">Average {metrics.find(m => m.key === selectedMetric)?.label}:</span>\r\n            <span className=\"summary-value\">\r\n              {chartData.length > 0 \r\n                ? (chartData.reduce((sum, stage) => sum + stage[selectedMetric], 0) / chartData.length).toFixed(2)\r\n                : '0'\r\n              }\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EngineeringCharts; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}