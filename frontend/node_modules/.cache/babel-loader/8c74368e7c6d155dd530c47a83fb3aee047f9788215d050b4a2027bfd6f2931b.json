{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\LogSummary.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport './LogSummary.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOG_LEVEL_FILTERS = [{\n  value: 'errors',\n  label: 'Errors & Warnings'\n}, {\n  value: 'info',\n  label: 'Success/Info'\n}, {\n  value: 'all',\n  label: 'All'\n}];\nconst SEVERITY_COLORS = {\n  error: '#ea5455',\n  warning: '#ff9f43',\n  info: '#00cfe8',\n  success: '#28c76f'\n};\nconst SEVERITY_ICONS = {\n  error: '⛔',\n  warning: '⚠️',\n  info: 'ℹ️',\n  success: '✅'\n};\nconst extractFileName = log => {\n  const fileMatch = log.match(/\\[(.*?)\\]/g);\n  if (fileMatch && fileMatch.length > 1) {\n    return fileMatch[1].replace(/\\[|\\]/g, '');\n  }\n  return 'Unknown File';\n};\nconst extractSummary = log => {\n  let msg = log.replace(/^\\[.*?\\]\\s*\\[.*?\\]\\s*/, '');\n  msg = msg.replace(/^\\[.*?\\]\\s*/, '');\n  const colonIdx = msg.indexOf(':');\n  const dashIdx = msg.indexOf('-');\n  let endIdx = msg.length;\n  if (colonIdx !== -1) endIdx = Math.min(endIdx, colonIdx + 1);\n  if (dashIdx !== -1) endIdx = Math.min(endIdx, dashIdx + 1);\n  return msg.slice(0, Math.max(endIdx, 20)).trim() || 'Log Entry';\n};\nconst extractLevel = log => {\n  if (log.toLowerCase().includes('error')) return 'error';\n  if (log.toLowerCase().includes('warning')) return 'warning';\n  if (log.toLowerCase().includes('success')) return 'success';\n  return 'info';\n};\nconst extractTimestamp = log => {\n  const match = log.match(/\\[(.*?)\\]/);\n  return match ? new Date(match[1]) : null;\n};\nconst formatTimeAgo = timestamp => {\n  if (!timestamp) return 'Unknown';\n  const now = new Date();\n  const diff = now - timestamp;\n  const minutes = Math.floor(diff / 60000);\n  const hours = Math.floor(diff / 3600000);\n  const days = Math.floor(diff / 86400000);\n  if (days > 0) return `${days}d ago`;\n  if (hours > 0) return `${hours}h ago`;\n  if (minutes > 0) return `${minutes}m ago`;\n  return 'Just now';\n};\nconst LogSummary = () => {\n  _s();\n  const [fileGroups, setFileGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedSummary, setSelectedSummary] = useState(null);\n  const [autoRefresh, setAutoRefresh] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [logLevelFilter, setLogLevelFilter] = useState('errors');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [fileFilter, setFileFilter] = useState('all');\n  const token = localStorage.getItem('token');\n\n  // Group logs by file, then by summary, filtered by logLevelFilter\n  const groupLogs = logs => {\n    const files = {};\n    logs.forEach(log => {\n      const level = extractLevel(log);\n      if (logLevelFilter === 'errors' && level === 'info') return;\n      if (logLevelFilter === 'info' && level !== 'info' && level !== 'success') return;\n      // 'all' shows everything\n      const file = extractFileName(log);\n      const summary = extractSummary(log);\n      const timestamp = extractTimestamp(log);\n      if (!files[file]) files[file] = {};\n      if (!files[file][summary]) files[file][summary] = {\n        summary,\n        level,\n        logs: [],\n        firstOccurrence: timestamp,\n        lastOccurrence: timestamp,\n        count: 0\n      };\n      files[file][summary].logs.push(log);\n      files[file][summary].count++;\n      if (!files[file][summary].firstOccurrence || timestamp && timestamp < files[file][summary].firstOccurrence) {\n        files[file][summary].firstOccurrence = timestamp;\n      }\n      if (!files[file][summary].lastOccurrence || timestamp && timestamp > files[file][summary].lastOccurrence) {\n        files[file][summary].lastOccurrence = timestamp;\n      }\n    });\n    // Convert to array for rendering\n    return Object.entries(files).map(([file, summaries]) => ({\n      file,\n      summaries: Object.values(summaries).sort((a, b) => b.count - a.count)\n    }));\n  };\n  const fetchLogs = useCallback(async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('http://localhost:5000/api/data/logs', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error || 'Failed to fetch logs');\n      const logs = data.errors || [];\n      setFileGroups(groupLogs(logs));\n      setLastUpdated(new Date());\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, logLevelFilter]);\n  useEffect(() => {\n    fetchLogs();\n  }, [fetchLogs]);\n  useEffect(() => {\n    let interval;\n    if (autoRefresh) {\n      interval = setInterval(fetchLogs, 10000);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [autoRefresh, fetchLogs]);\n\n  // Filtering\n  const filteredFileGroups = fileGroups.filter(fg => fileFilter === 'all' || fg.file === fileFilter).map(fg => ({\n    ...fg,\n    summaries: fg.summaries.filter(summary => summary.summary.toLowerCase().includes(searchTerm.toLowerCase()) || summary.logs.some(log => log.toLowerCase().includes(searchTerm.toLowerCase())))\n  })).filter(fg => fg.summaries.length > 0);\n\n  // Copy to clipboard\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text);\n  };\n\n  // Unique file list for filter\n  const allFiles = ['all', ...Array.from(new Set(fileGroups.map(fg => fg.file)))];\n\n  // Add missing clearAllLogs and exportSummaries\n  const clearAllLogs = async () => {\n    if (!window.confirm('Are you sure you want to clear all logs? This action cannot be undone.')) return;\n    try {\n      const response = await fetch('http://localhost:5000/api/data/logs/clear', {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setFileGroups([]);\n        setSelectedFile(null);\n        setSelectedSummary(null);\n        setError('');\n      } else {\n        const data = await response.json();\n        setError(data.error || 'Failed to clear logs');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const exportSummaries = () => {\n    const csvContent = ['File,Error Summary,Count,First Occurrence,Last Occurrence,Severity', ...fileGroups.flatMap(fileGroup => fileGroup.summaries.map(summary => {\n      var _summary$firstOccurre, _summary$lastOccurren;\n      return `\"${fileGroup.file}\",\"${summary.summary}\",\"${summary.count}\",\"${((_summary$firstOccurre = summary.firstOccurrence) === null || _summary$firstOccurre === void 0 ? void 0 : _summary$firstOccurre.toISOString()) || ''}\",\"${((_summary$lastOccurren = summary.lastOccurrence) === null || _summary$lastOccurren === void 0 ? void 0 : _summary$lastOccurren.toISOString()) || ''}\",\"${summary.level}\"`;\n    }))].join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `log_summaries_${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-summary aws-modern\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Log Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"loglevel-filter\",\n          value: logLevelFilter,\n          onChange: e => setLogLevelFilter(e.target.value),\n          style: {\n            marginRight: '1rem',\n            padding: '0.5rem',\n            borderRadius: '6px',\n            border: '1px solid #ccc'\n          },\n          children: LOG_LEVEL_FILTERS.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt.value,\n            children: opt.label\n          }, opt.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"file-filter\",\n          value: fileFilter,\n          onChange: e => setFileFilter(e.target.value),\n          style: {\n            marginRight: '1rem',\n            padding: '0.5rem',\n            borderRadius: '6px',\n            border: '1px solid #ccc'\n          },\n          children: allFiles.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: f,\n            children: f === 'all' ? 'All Files' : f\n          }, f, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-bar\",\n          type: \"text\",\n          placeholder: \"Search logs...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          style: {\n            marginRight: '1rem',\n            padding: '0.5rem',\n            borderRadius: '6px',\n            border: '1px solid #ccc',\n            minWidth: 180\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `refresh-btn ${autoRefresh ? 'active' : ''}`,\n          onClick: () => setAutoRefresh(!autoRefresh),\n          title: autoRefresh ? 'Auto-refresh enabled' : 'Auto-refresh disabled',\n          children: [\"\\uD83D\\uDD04 \", autoRefresh ? 'Auto-refresh ON' : 'Auto-refresh OFF']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"export-btn\",\n          onClick: exportSummaries,\n          children: \"\\uD83D\\uDCE5 Export Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-btn\",\n          onClick: clearAllLogs,\n          children: \"\\uD83D\\uDDD1\\uFE0F Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), lastUpdated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"last-updated\",\n      children: [\"Last updated: \", lastUpdated.toLocaleTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading log summaries...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchLogs,\n        className: \"retry-btn\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this), !loading && filteredFileGroups.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-summaries\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-summaries-icon\",\n        children: \"\\uD83D\\uDCCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Log Summaries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No errors or issues have been detected in the system.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), !loading && filteredFileGroups.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aws-cards-container\",\n      children: filteredFileGroups.map(fileGroup => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aws-file-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aws-file-header\",\n          onClick: () => setSelectedFile(selectedFile === fileGroup.file ? null : fileGroup.file),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"aws-file-icon\",\n            children: \"\\uD83D\\uDCC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"aws-file-title\",\n            children: fileGroup.file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"aws-file-meta\",\n            children: [fileGroup.summaries.length, \" types, \", fileGroup.summaries.reduce((s, sm) => s + sm.count, 0), \" logs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"aws-file-expand\",\n            children: selectedFile === fileGroup.file ? '▼' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this), selectedFile === fileGroup.file && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aws-summary-list\",\n          children: fileGroup.summaries.map(summary => {\n            var _summary$lastOccurren2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `aws-summary-card`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"aws-summary-header\",\n                onClick: () => setSelectedSummary(selectedSummary === summary.summary ? null : summary.summary),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"aws-severity-pill\",\n                  style: {\n                    background: SEVERITY_COLORS[summary.level] || '#b4b7bd'\n                  },\n                  children: [SEVERITY_ICONS[summary.level] || '📝', \" \", summary.level.toUpperCase()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"aws-summary-title\",\n                  children: summary.summary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"aws-summary-meta\",\n                  children: [summary.count, \" logs\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"aws-summary-time\",\n                  children: [formatTimeAgo(summary.lastOccurrence), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"aws-summary-abs\",\n                    children: [\"(\", (_summary$lastOccurren2 = summary.lastOccurrence) === null || _summary$lastOccurren2 === void 0 ? void 0 : _summary$lastOccurren2.toLocaleString(), \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 100\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"aws-summary-expand\",\n                  children: selectedSummary === summary.summary ? '▼' : '▶'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 23\n              }, this), selectedSummary === summary.summary && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"aws-summary-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"aws-details-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Technical Details (\", summary.logs.length, \" logs)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"aws-copy-btn\",\n                    onClick: () => copyToClipboard(summary.logs.join('\\n')),\n                    children: \"\\uD83D\\uDCCB Copy All\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"aws-logs-list\",\n                  children: summary.logs.map((log, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"aws-log-entry\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"aws-log-timestamp\",\n                      children: (() => {\n                        const match = log.match(/\\[(.*?)\\]/);\n                        return match ? new Date(match[1]).toLocaleString() : 'Unknown time';\n                      })()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"aws-log-message\",\n                      children: log\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"aws-copy-btn\",\n                      onClick: () => copyToClipboard(log),\n                      children: \"\\uD83D\\uDCCB\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 33\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 25\n              }, this)]\n            }, summary.summary, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }, this)]\n      }, fileGroup.file, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(LogSummary, \"0McckKjp6n2eT7/6NaIpQ0jX88c=\");\n_c = LogSummary;\nexport default LogSummary;\nvar _c;\n$RefreshReg$(_c, \"LogSummary\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","jsxDEV","_jsxDEV","LOG_LEVEL_FILTERS","value","label","SEVERITY_COLORS","error","warning","info","success","SEVERITY_ICONS","extractFileName","log","fileMatch","match","length","replace","extractSummary","msg","colonIdx","indexOf","dashIdx","endIdx","Math","min","slice","max","trim","extractLevel","toLowerCase","includes","extractTimestamp","Date","formatTimeAgo","timestamp","now","diff","minutes","floor","hours","days","LogSummary","_s","fileGroups","setFileGroups","loading","setLoading","setError","selectedFile","setSelectedFile","selectedSummary","setSelectedSummary","autoRefresh","setAutoRefresh","lastUpdated","setLastUpdated","logLevelFilter","setLogLevelFilter","searchTerm","setSearchTerm","fileFilter","setFileFilter","token","localStorage","getItem","groupLogs","logs","files","forEach","level","file","summary","firstOccurrence","lastOccurrence","count","push","Object","entries","map","summaries","values","sort","a","b","fetchLogs","response","fetch","headers","data","json","ok","Error","errors","err","message","interval","setInterval","clearInterval","filteredFileGroups","filter","fg","some","copyToClipboard","text","navigator","clipboard","writeText","allFiles","Array","from","Set","clearAllLogs","window","confirm","method","exportSummaries","csvContent","flatMap","fileGroup","_summary$firstOccurre","_summary$lastOccurren","toISOString","join","blob","Blob","type","url","URL","createObjectURL","document","createElement","href","download","split","click","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","style","marginRight","padding","borderRadius","border","opt","f","placeholder","minWidth","onClick","title","toLocaleTimeString","reduce","s","sm","_summary$lastOccurren2","background","toUpperCase","toLocaleString","idx","_c","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/LogSummary.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport './LogSummary.css';\r\n\r\nconst LOG_LEVEL_FILTERS = [\r\n  { value: 'errors', label: 'Errors & Warnings' },\r\n  { value: 'info', label: 'Success/Info' },\r\n  { value: 'all', label: 'All' }\r\n];\r\n\r\nconst SEVERITY_COLORS = {\r\n  error: '#ea5455',\r\n  warning: '#ff9f43',\r\n  info: '#00cfe8',\r\n  success: '#28c76f',\r\n};\r\n\r\nconst SEVERITY_ICONS = {\r\n  error: '⛔',\r\n  warning: '⚠️',\r\n  info: 'ℹ️',\r\n  success: '✅',\r\n};\r\n\r\nconst extractFileName = (log) => {\r\n  const fileMatch = log.match(/\\[(.*?)\\]/g);\r\n  if (fileMatch && fileMatch.length > 1) {\r\n    return fileMatch[1].replace(/\\[|\\]/g, '');\r\n  }\r\n  return 'Unknown File';\r\n};\r\n\r\nconst extractSummary = (log) => {\r\n  let msg = log.replace(/^\\[.*?\\]\\s*\\[.*?\\]\\s*/, '');\r\n  msg = msg.replace(/^\\[.*?\\]\\s*/, '');\r\n  const colonIdx = msg.indexOf(':');\r\n  const dashIdx = msg.indexOf('-');\r\n  let endIdx = msg.length;\r\n  if (colonIdx !== -1) endIdx = Math.min(endIdx, colonIdx + 1);\r\n  if (dashIdx !== -1) endIdx = Math.min(endIdx, dashIdx + 1);\r\n  return msg.slice(0, Math.max(endIdx, 20)).trim() || 'Log Entry';\r\n};\r\n\r\nconst extractLevel = (log) => {\r\n  if (log.toLowerCase().includes('error')) return 'error';\r\n  if (log.toLowerCase().includes('warning')) return 'warning';\r\n  if (log.toLowerCase().includes('success')) return 'success';\r\n  return 'info';\r\n};\r\n\r\nconst extractTimestamp = (log) => {\r\n  const match = log.match(/\\[(.*?)\\]/);\r\n  return match ? new Date(match[1]) : null;\r\n};\r\n\r\nconst formatTimeAgo = (timestamp) => {\r\n  if (!timestamp) return 'Unknown';\r\n  const now = new Date();\r\n  const diff = now - timestamp;\r\n  const minutes = Math.floor(diff / 60000);\r\n  const hours = Math.floor(diff / 3600000);\r\n  const days = Math.floor(diff / 86400000);\r\n  if (days > 0) return `${days}d ago`;\r\n  if (hours > 0) return `${hours}h ago`;\r\n  if (minutes > 0) return `${minutes}m ago`;\r\n  return 'Just now';\r\n};\r\n\r\nconst LogSummary = () => {\r\n  const [fileGroups, setFileGroups] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [selectedSummary, setSelectedSummary] = useState(null);\r\n  const [autoRefresh, setAutoRefresh] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n  const [logLevelFilter, setLogLevelFilter] = useState('errors');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [fileFilter, setFileFilter] = useState('all');\r\n  const token = localStorage.getItem('token');\r\n\r\n  // Group logs by file, then by summary, filtered by logLevelFilter\r\n  const groupLogs = (logs) => {\r\n    const files = {};\r\n    logs.forEach(log => {\r\n      const level = extractLevel(log);\r\n      if (logLevelFilter === 'errors' && level === 'info') return;\r\n      if (logLevelFilter === 'info' && level !== 'info' && level !== 'success') return;\r\n      // 'all' shows everything\r\n      const file = extractFileName(log);\r\n      const summary = extractSummary(log);\r\n      const timestamp = extractTimestamp(log);\r\n      if (!files[file]) files[file] = {};\r\n      if (!files[file][summary]) files[file][summary] = {\r\n        summary,\r\n        level,\r\n        logs: [],\r\n        firstOccurrence: timestamp,\r\n        lastOccurrence: timestamp,\r\n        count: 0\r\n      };\r\n      files[file][summary].logs.push(log);\r\n      files[file][summary].count++;\r\n      if (!files[file][summary].firstOccurrence || (timestamp && timestamp < files[file][summary].firstOccurrence)) {\r\n        files[file][summary].firstOccurrence = timestamp;\r\n      }\r\n      if (!files[file][summary].lastOccurrence || (timestamp && timestamp > files[file][summary].lastOccurrence)) {\r\n        files[file][summary].lastOccurrence = timestamp;\r\n      }\r\n    });\r\n    // Convert to array for rendering\r\n    return Object.entries(files).map(([file, summaries]) => ({\r\n      file,\r\n      summaries: Object.values(summaries).sort((a, b) => b.count - a.count)\r\n    }));\r\n  };\r\n\r\n  const fetchLogs = useCallback(async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/data/logs', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const data = await response.json();\r\n      if (!response.ok) throw new Error(data.error || 'Failed to fetch logs');\r\n      const logs = data.errors || [];\r\n      setFileGroups(groupLogs(logs));\r\n      setLastUpdated(new Date());\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [token, logLevelFilter]);\r\n\r\n  useEffect(() => {\r\n    fetchLogs();\r\n  }, [fetchLogs]);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (autoRefresh) {\r\n      interval = setInterval(fetchLogs, 10000);\r\n    }\r\n    return () => { if (interval) clearInterval(interval); };\r\n  }, [autoRefresh, fetchLogs]);\r\n\r\n  // Filtering\r\n  const filteredFileGroups = fileGroups\r\n    .filter(fg => fileFilter === 'all' || fg.file === fileFilter)\r\n    .map(fg => ({\r\n      ...fg,\r\n      summaries: fg.summaries.filter(summary =>\r\n        summary.summary.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        summary.logs.some(log => log.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      )\r\n    }))\r\n    .filter(fg => fg.summaries.length > 0);\r\n\r\n  // Copy to clipboard\r\n  const copyToClipboard = (text) => {\r\n    navigator.clipboard.writeText(text);\r\n  };\r\n\r\n  // Unique file list for filter\r\n  const allFiles = ['all', ...Array.from(new Set(fileGroups.map(fg => fg.file)))];\r\n\r\n  // Add missing clearAllLogs and exportSummaries\r\n  const clearAllLogs = async () => {\r\n    if (!window.confirm('Are you sure you want to clear all logs? This action cannot be undone.')) return;\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/data/logs/clear', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      if (response.ok) {\r\n        setFileGroups([]);\r\n        setSelectedFile(null);\r\n        setSelectedSummary(null);\r\n        setError('');\r\n      } else {\r\n        const data = await response.json();\r\n        setError(data.error || 'Failed to clear logs');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const exportSummaries = () => {\r\n    const csvContent = [\r\n      'File,Error Summary,Count,First Occurrence,Last Occurrence,Severity',\r\n      ...fileGroups.flatMap(fileGroup =>\r\n        fileGroup.summaries.map(summary =>\r\n          `\"${fileGroup.file}\",\"${summary.summary}\",\"${summary.count}\",\"${summary.firstOccurrence?.toISOString() || ''}\",\"${summary.lastOccurrence?.toISOString() || ''}\",\"${summary.level}\"`\r\n        )\r\n      )\r\n    ].join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `log_summaries_${new Date().toISOString().split('T')[0]}.csv`;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"log-summary aws-modern\">\r\n      <div className=\"summary-header\">\r\n        <h2>Log Summary</h2>\r\n        <div className=\"summary-controls\">\r\n          <select\r\n            className=\"loglevel-filter\"\r\n            value={logLevelFilter}\r\n            onChange={e => setLogLevelFilter(e.target.value)}\r\n            style={{ marginRight: '1rem', padding: '0.5rem', borderRadius: '6px', border: '1px solid #ccc' }}\r\n          >\r\n            {LOG_LEVEL_FILTERS.map(opt => (\r\n              <option key={opt.value} value={opt.value}>{opt.label}</option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            className=\"file-filter\"\r\n            value={fileFilter}\r\n            onChange={e => setFileFilter(e.target.value)}\r\n            style={{ marginRight: '1rem', padding: '0.5rem', borderRadius: '6px', border: '1px solid #ccc' }}\r\n          >\r\n            {allFiles.map(f => (\r\n              <option key={f} value={f}>{f === 'all' ? 'All Files' : f}</option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            className=\"search-bar\"\r\n            type=\"text\"\r\n            placeholder=\"Search logs...\"\r\n            value={searchTerm}\r\n            onChange={e => setSearchTerm(e.target.value)}\r\n            style={{ marginRight: '1rem', padding: '0.5rem', borderRadius: '6px', border: '1px solid #ccc', minWidth: 180 }}\r\n          />\r\n          <button \r\n            className={`refresh-btn ${autoRefresh ? 'active' : ''}`}\r\n            onClick={() => setAutoRefresh(!autoRefresh)}\r\n            title={autoRefresh ? 'Auto-refresh enabled' : 'Auto-refresh disabled'}\r\n          >\r\n            🔄 {autoRefresh ? 'Auto-refresh ON' : 'Auto-refresh OFF'}\r\n          </button>\r\n          <button className=\"export-btn\" onClick={exportSummaries}>\r\n            📥 Export Summary\r\n          </button>\r\n          <button className=\"clear-btn\" onClick={clearAllLogs}>\r\n            🗑️ Clear All\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {lastUpdated && (\r\n        <div className=\"last-updated\">\r\n          Last updated: {lastUpdated.toLocaleTimeString()}\r\n        </div>\r\n      )}\r\n      {loading && (\r\n        <div className=\"loading-spinner\">\r\n          <div className=\"spinner\"></div>\r\n          <span>Loading log summaries...</span>\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <span>⚠️ {error}</span>\r\n          <button onClick={fetchLogs} className=\"retry-btn\">Retry</button>\r\n        </div>\r\n      )}\r\n      {!loading && filteredFileGroups.length === 0 && (\r\n        <div className=\"no-summaries\">\r\n          <div className=\"no-summaries-icon\">📊</div>\r\n          <h3>No Log Summaries</h3>\r\n          <p>No errors or issues have been detected in the system.</p>\r\n        </div>\r\n      )}\r\n      {!loading && filteredFileGroups.length > 0 && (\r\n        <div className=\"aws-cards-container\">\r\n          {filteredFileGroups.map(fileGroup => (\r\n            <div key={fileGroup.file} className=\"aws-file-card\">\r\n              <div className=\"aws-file-header\" onClick={() => setSelectedFile(selectedFile === fileGroup.file ? null : fileGroup.file)}>\r\n                <span className=\"aws-file-icon\">📄</span>\r\n                <span className=\"aws-file-title\">{fileGroup.file}</span>\r\n                <span className=\"aws-file-meta\">{fileGroup.summaries.length} types, {fileGroup.summaries.reduce((s, sm) => s + sm.count, 0)} logs</span>\r\n                <span className=\"aws-file-expand\">{selectedFile === fileGroup.file ? '▼' : '▶'}</span>\r\n              </div>\r\n              {selectedFile === fileGroup.file && (\r\n                <div className=\"aws-summary-list\">\r\n                  {fileGroup.summaries.map(summary => (\r\n                    <div key={summary.summary} className={`aws-summary-card`}>\r\n                      <div className=\"aws-summary-header\" onClick={() => setSelectedSummary(selectedSummary === summary.summary ? null : summary.summary)}>\r\n                        <span className=\"aws-severity-pill\" style={{ background: SEVERITY_COLORS[summary.level] || '#b4b7bd' }}>\r\n                          {SEVERITY_ICONS[summary.level] || '📝'} {summary.level.toUpperCase()}\r\n                        </span>\r\n                        <span className=\"aws-summary-title\">{summary.summary}</span>\r\n                        <span className=\"aws-summary-meta\">{summary.count} logs</span>\r\n                        <span className=\"aws-summary-time\">{formatTimeAgo(summary.lastOccurrence)} <span className=\"aws-summary-abs\">({summary.lastOccurrence?.toLocaleString()})</span></span>\r\n                        <span className=\"aws-summary-expand\">{selectedSummary === summary.summary ? '▼' : '▶'}</span>\r\n                      </div>\r\n                      {selectedSummary === summary.summary && (\r\n                        <div className=\"aws-summary-details\">\r\n                          <div className=\"aws-details-header\">\r\n                            <span>Technical Details ({summary.logs.length} logs)</span>\r\n                            <span className=\"aws-copy-btn\" onClick={() => copyToClipboard(summary.logs.join('\\n'))}>📋 Copy All</span>\r\n                          </div>\r\n                          <div className=\"aws-logs-list\">\r\n                            {summary.logs.map((log, idx) => (\r\n                              <div key={idx} className=\"aws-log-entry\">\r\n                                <span className=\"aws-log-timestamp\">{(() => {\r\n                                  const match = log.match(/\\[(.*?)\\]/);\r\n                                  return match ? new Date(match[1]).toLocaleString() : 'Unknown time';\r\n                                })()}</span>\r\n                                <span className=\"aws-log-message\">{log}</span>\r\n                                <span className=\"aws-copy-btn\" onClick={() => copyToClipboard(log)}>📋</span>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogSummary; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}