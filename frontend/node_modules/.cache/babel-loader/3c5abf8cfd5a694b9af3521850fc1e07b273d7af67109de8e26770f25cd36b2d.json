{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\SlideBar.jsx\";\nimport React from 'react';\nimport './SlideBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navItems = [{\n  id: 'dashboard',\n  label: 'Dashboard',\n  icon: '🏠'\n}, {\n  id: 'admin',\n  label: 'Admin Panel',\n  icon: '👑'\n}, {\n  id: 'logs',\n  label: 'Logs',\n  icon: '📝'\n}];\nconst SlideBar = ({\n  activeView,\n  onViewChange,\n  user,\n  open,\n  setOpen,\n  onLogout,\n  onProfileClick\n}) => {\n  // Only show admin/logs for admin\n  const filteredNav = navItems.filter(item => {\n    if ((item.id === 'admin' || item.id === 'logs') && (user === null || user === void 0 ? void 0 : user.role_name) !== 'Admin') return false;\n    return true;\n  });\n\n  // Get user initials for avatar\n  const getUserInitials = name => {\n    if (!name) return 'U';\n    return name.split(' ').map(word => word.charAt(0)).join('').toUpperCase().slice(0, 2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebar-left${open ? ' open' : ' collapsed'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-toggle\",\n      onClick: () => setOpen(!open),\n      children: open ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u25C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-user-profile clickable\",\n      onClick: onProfileClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-user-avatar\",\n        children: getUserInitials(user.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-user-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-user-name\",\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-user-role\",\n          children: user.role_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-nav\",\n      children: [filteredNav.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `sidebar-nav-btn${activeView === item.id ? ' active' : ''}`,\n        onClick: () => onViewChange(item.id),\n        title: item.label,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-icon\",\n          children: item.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), open && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-label\",\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 22\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-logout-section\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-nav-btn logout-btn\",\n          onClick: onLogout,\n          title: \"Logout\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nav-icon\",\n            children: \"\\uD83D\\uDEAA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), open && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nav-label\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = SlideBar;\nexport default SlideBar;\nvar _c;\n$RefreshReg$(_c, \"SlideBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","navItems","id","label","icon","SlideBar","activeView","onViewChange","user","open","setOpen","onLogout","onProfileClick","filteredNav","filter","item","role_name","getUserInitials","name","split","map","word","charAt","join","toUpperCase","slice","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/SlideBar.jsx"],"sourcesContent":["import React from 'react';\r\nimport './SlideBar.css';\r\n\r\nconst navItems = [\r\n  { id: 'dashboard', label: 'Dashboard', icon: '🏠' },\r\n  { id: 'admin', label: 'Admin Panel', icon: '👑' },\r\n  { id: 'logs', label: 'Logs', icon: '📝' },\r\n];\r\n\r\nconst SlideBar = ({ activeView, onViewChange, user, open, setOpen, onLogout, onProfileClick }) => {\r\n  // Only show admin/logs for admin\r\n  const filteredNav = navItems.filter(item => {\r\n    if ((item.id === 'admin' || item.id === 'logs') && user?.role_name !== 'Admin') return false;\r\n    return true;\r\n  });\r\n\r\n  // Get user initials for avatar\r\n  const getUserInitials = (name) => {\r\n    if (!name) return 'U';\r\n    return name.split(' ').map(word => word.charAt(0)).join('').toUpperCase().slice(0, 2);\r\n  };\r\n\r\n  return (\r\n    <div className={`sidebar-left${open ? ' open' : ' collapsed'}`}>  \r\n      <div className=\"sidebar-toggle\" onClick={() => setOpen(!open)}>\r\n        {open ? <span>&#x25C0;</span> : <span>&#9776;</span>}\r\n      </div>\r\n      \r\n      {/* User Profile Section - Clickable */}\r\n      {user && (\r\n        <div className=\"sidebar-user-profile clickable\" onClick={onProfileClick}>\r\n          <div className=\"sidebar-user-avatar\">\r\n            {getUserInitials(user.name)}\r\n          </div>\r\n          {open && (\r\n            <div className=\"sidebar-user-details\">\r\n              <div className=\"sidebar-user-name\">{user.name}</div>\r\n              <div className=\"sidebar-user-role\">{user.role_name}</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"sidebar-nav\">\r\n        {filteredNav.map(item => (\r\n          <button\r\n            key={item.id}\r\n            className={`sidebar-nav-btn${activeView === item.id ? ' active' : ''}`}\r\n            onClick={() => onViewChange(item.id)}\r\n            title={item.label}\r\n          >\r\n            <span className=\"nav-icon\">{item.icon}</span>\r\n            {open && <span className=\"nav-label\">{item.label}</span>}\r\n          </button>\r\n        ))}\r\n        \r\n        {/* Logout Button */}\r\n        <div className=\"sidebar-logout-section\">\r\n          <button\r\n            className=\"sidebar-nav-btn logout-btn\"\r\n            onClick={onLogout}\r\n            title=\"Logout\"\r\n          >\r\n            <span className=\"nav-icon\">🚪</span>\r\n            {open && <span className=\"nav-label\">Logout</span>}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideBar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}