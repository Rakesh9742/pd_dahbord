{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\EngineeringCharts.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport './EngineeringCharts.css';\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n// Custom Tooltip Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltip-label\",\n        children: `Stage: ${label}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), payload.map((entry, index) => {\n        let displayValue = entry.value;\n        let displayName = entry.name;\n\n        // Format timing values\n        if (entry.dataKey.includes('internal_timing_')) {\n          const timingType = entry.dataKey.split('_').pop().toUpperCase();\n          displayName = `Internal Timing ${timingType}`;\n          displayValue = entry.value.toFixed(2);\n        } else if (entry.dataKey === 'internal_timing') {\n          // Handle the combined internal timing string\n          displayName = 'Internal Timing';\n          displayValue = entry.value; // Keep as string format \"WNS/TNS/FEP\"\n        }\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-value\",\n          style: {\n            color: entry.color\n          },\n          children: `${displayName}: ${displayValue}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n\n// Debounce hook to prevent excessive re-renders\n_c = CustomTooltip;\nconst useDebounce = (value, delay) => {\n  _s();\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n};\n\n// Accept selectedDomainId and/or projectFilters as props\n_s(useDebounce, \"KDuPAtDOgxm8PU6legVJOb3oOmA=\");\nconst EngineeringCharts = ({\n  selectedDomainId,\n  projectFilters\n}) => {\n  _s2();\n  var _filterOptions$experi, _filterOptions$blocks;\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filterOptionsLoading, setFilterOptionsLoading] = useState(false);\n  // Replace single metric selection with multi-metric selection (max 2)\n  const [selectedMetrics, setSelectedMetrics] = useState(['area', 'internal_timing']);\n  const [filters, setFilters] = useState({\n    project_id: '',\n    experiment: '',\n    block_name: ''\n  });\n  const [filterOptions, setFilterOptions] = useState({});\n  const token = localStorage.getItem('token');\n\n  // Debounce filters to prevent excessive API calls\n  const debouncedFilters = useDebounce(filters, 300);\n  const metrics = [{\n    key: 'area',\n    label: 'Area (μm²)',\n    color: '#8884d8'\n  }, {\n    key: 'internal_timing',\n    label: 'Internal Timing (WNS/TNS/FEP)',\n    color: '#82ca9d'\n  }, {\n    key: 'interface_timing',\n    label: 'Interface Timing',\n    color: '#ffc658'\n  }, {\n    key: 'utilization',\n    label: 'Utilization (%)',\n    color: '#ff7300'\n  }, {\n    key: 'congestion',\n    label: 'Congestion',\n    color: '#ff0000'\n  }, {\n    key: 'inst_count',\n    label: 'Instance Count',\n    color: '#00ff00'\n  }];\n\n  // Memoize the fetch functions to prevent unnecessary re-renders\n  const fetchFilterOptions = useCallback(async () => {\n    try {\n      setFilterOptionsLoading(true);\n      const queryParams = new URLSearchParams();\n      if (selectedDomainId) {\n        queryParams.append('domain_id', selectedDomainId);\n      }\n      if (filters.project_id) {\n        queryParams.append('project_id', filters.project_id);\n      }\n      if (filters.block_name) {\n        queryParams.append('block_name', filters.block_name);\n      }\n      const response = await fetch(`http://localhost:5000/api/data/filter-options?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setFilterOptions(data);\n      }\n    } catch (error) {\n      console.error('Error fetching filter options:', error);\n    } finally {\n      setFilterOptionsLoading(false);\n    }\n  }, [selectedDomainId, filters.project_id, filters.block_name, token]);\n  const fetchChartData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const queryParams = new URLSearchParams();\n      if (selectedDomainId) queryParams.append('domain_id', selectedDomainId);\n      if (debouncedFilters.project_id) queryParams.append('project_id', debouncedFilters.project_id);\n      if (debouncedFilters.experiment) queryParams.append('experiment', debouncedFilters.experiment);\n      if (debouncedFilters.block_name) queryParams.append('block_name', debouncedFilters.block_name);\n      const response = await fetch(`http://localhost:5000/api/data/pd-data?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const result = await response.json();\n        processChartData(result.data);\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedDomainId, debouncedFilters, token]);\n  useEffect(() => {\n    if (selectedDomainId) {\n      fetchFilterOptions();\n    } else {\n      // Clear filter options when no domain is selected\n      setFilterOptions({});\n    }\n  }, [fetchFilterOptions, selectedDomainId]);\n  useEffect(() => {\n    if (selectedDomainId) {\n      fetchChartData();\n    } else {\n      // Clear chart data when no domain is selected\n      setChartData([]);\n      setLoading(false);\n    }\n  }, [fetchChartData, selectedDomainId]);\n  const processChartData = useCallback(data => {\n    // Define the expected stage order\n    const stageOrder = ['synthesis', 'Floorplan', 'Placement'];\n\n    // Group data by stage and calculate metrics\n    const stageData = {};\n    data.forEach(item => {\n      const stage = item.stage || 'Unknown';\n      if (!stageData[stage]) {\n        stageData[stage] = {\n          stage,\n          count: 0,\n          area_sum: 0,\n          internal_timing_wns_sum: 0,\n          internal_timing_tns_sum: 0,\n          internal_timing_fep_sum: 0,\n          interface_timing_sum: 0,\n          utilization_sum: 0,\n          congestion_sum: 0,\n          inst_count_sum: 0,\n          pass_count: 0,\n          fail_count: 0,\n          error_count: 0\n        };\n      }\n      stageData[stage].count++;\n      stageData[stage].area_sum += parseFloat(item.area_um2) || 0;\n\n      // Process internal timing - extract WNS, TNS, FEP values from complex strings\n      // Example: \"Setup: r2r: -0.35/-3.8/264 Hold: NA\"\n      // We extract: WNS = -0.35, TNS = -3.8, FEP = 264\n      let internalTimingWNS = 0;\n      let internalTimingTNS = 0;\n      let internalTimingFEP = 0;\n      if (item.internal_timing) {\n        // Look for patterns like \"r2r: -0.35/-3.8/264\" or \"i2r: -0.02/-1.4/241\"\n        const timingMatches = item.internal_timing.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/g);\n        if (timingMatches) {\n          // Take the first match (usually r2r)\n          const firstMatch = timingMatches[0];\n          const values = firstMatch.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/);\n          if (values) {\n            internalTimingWNS = parseFloat(values[1]) || 0;\n            internalTimingTNS = parseFloat(values[2]) || 0;\n            internalTimingFEP = parseFloat(values[3]) || 0;\n          }\n        }\n      }\n      stageData[stage].internal_timing_wns_sum += internalTimingWNS;\n      stageData[stage].internal_timing_tns_sum += internalTimingTNS;\n      stageData[stage].internal_timing_fep_sum += internalTimingFEP;\n\n      // Process interface timing - extract numeric values from complex strings\n      let interfaceTimingValue = 0;\n      if (item.interface_timing) {\n        const timingMatch = item.interface_timing.match(/(-?\\d+\\.?\\d*)/);\n        if (timingMatch) {\n          interfaceTimingValue = parseFloat(timingMatch[1]);\n        }\n      }\n      stageData[stage].interface_timing_sum += interfaceTimingValue;\n      stageData[stage].utilization_sum += parseFloat(item.utilization) || 0;\n      stageData[stage].inst_count_sum += parseInt(item.inst_count) || 0;\n\n      // Handle congestion (might be text, try to extract numeric value)\n      const congestionValue = parseFloat(item.congestion_drc_metrics) || 0;\n      stageData[stage].congestion_sum += congestionValue;\n\n      // Count status\n      if (item.run_status === 'pass') stageData[stage].pass_count++;else if (item.run_status === 'fail') stageData[stage].fail_count++;else if (item.run_status === 'continue_with_error') stageData[stage].error_count++;\n    });\n\n    // Calculate averages and format for charts, maintaining stage order\n    const processedData = stageOrder.filter(stage => stageData[stage]) // Only include stages that have data\n    .map(stage => {\n      const stageInfo = stageData[stage];\n      return {\n        stage: stageInfo.stage,\n        count: stageInfo.count,\n        area: stageInfo.count > 0 ? stageInfo.area_sum / stageInfo.count : 0,\n        internal_timing: stageInfo.count > 0 ? `${stageInfo.internal_timing_wns_sum / stageInfo.count}/${stageInfo.internal_timing_tns_sum / stageInfo.count}/${stageInfo.internal_timing_fep_sum / stageInfo.count}` : '0/0/0',\n        internal_timing_wns: stageInfo.count > 0 ? stageInfo.internal_timing_wns_sum / stageInfo.count : 0,\n        internal_timing_tns: stageInfo.count > 0 ? stageInfo.internal_timing_tns_sum / stageInfo.count : 0,\n        internal_timing_fep: stageInfo.count > 0 ? stageInfo.internal_timing_fep_sum / stageInfo.count : 0,\n        interface_timing: stageInfo.count > 0 ? stageInfo.interface_timing_sum / stageInfo.count : 0,\n        utilization: stageInfo.count > 0 ? stageInfo.utilization_sum / stageInfo.count : 0,\n        congestion: stageInfo.count > 0 ? stageInfo.congestion_sum / stageInfo.count : 0,\n        inst_count: stageInfo.count > 0 ? stageInfo.inst_count_sum / stageInfo.count : 0,\n        pass_rate: stageInfo.count > 0 ? stageInfo.pass_count / stageInfo.count * 100 : 0,\n        fail_rate: stageInfo.count > 0 ? stageInfo.fail_count / stageInfo.count * 100 : 0,\n        error_rate: stageInfo.count > 0 ? stageInfo.error_count / stageInfo.count * 100 : 0\n      };\n    });\n    setChartData(processedData);\n\n    // Debug: Log the processed data\n    console.log('Processed Chart Data:', processedData);\n    console.log('Available stages in data:', Object.keys(stageData));\n\n    // Debug: Log timing extraction for first few items\n    if (data.length > 0) {\n      console.log('Sample timing extraction:');\n      data.slice(0, 3).forEach((item, index) => {\n        if (item.internal_timing) {\n          const timingMatches = item.internal_timing.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/g);\n          console.log(`Item ${index + 1} - Stage: ${item.stage}, Internal Timing: \"${item.internal_timing}\"`);\n          if (timingMatches) {\n            const firstMatch = timingMatches[0];\n            const values = firstMatch.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/);\n            if (values) {\n              console.log(`  Extracted - WNS: ${values[1]}, TNS: ${values[2]}, FEP: ${values[3]}`);\n            }\n          } else {\n            console.log(`  No timing pattern found`);\n          }\n        }\n      });\n    }\n  }, []);\n  const handleFilterChange = useCallback((key, value) => {\n    setFilters(prev => {\n      const newFilters = {\n        ...prev,\n        [key]: value\n      };\n\n      // Reset dependent filters when parent filter changes\n      if (key === 'project_id') {\n        // Reset experiment and block when project changes\n        newFilters.experiment = '';\n        newFilters.block_name = '';\n        // Show loading state briefly for cascading update\n        setFilterOptionsLoading(true);\n        setTimeout(() => setFilterOptionsLoading(false), 500);\n      } else if (key === 'block_name') {\n        // Reset experiment when block changes\n        newFilters.experiment = '';\n        // Show loading state briefly for cascading update\n        setFilterOptionsLoading(true);\n        setTimeout(() => setFilterOptionsLoading(false), 500);\n      }\n      return newFilters;\n    });\n  }, []);\n\n  // Memoize chart data to prevent unnecessary re-renders\n  const memoizedChartData = useMemo(() => chartData, [chartData]);\n  const memoizedStatusData = useMemo(() => {\n    if (chartData.length === 0) return [];\n    return chartData.map(stage => ({\n      stage: stage.stage,\n      pass: stage.pass_rate,\n      fail: stage.fail_rate,\n      error: stage.error_rate\n    }));\n  }, [chartData]);\n  const renderChart = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading chart data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this);\n    }\n    if (chartData.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available for the selected filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this);\n    }\n\n    // const selectedMetricData = metrics.find(m => m.key === selectedMetric); // This line is no longer needed\n\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: memoizedChartData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        }\n        // Add these props to prevent blinking and improve performance\n        ,\n        syncId: \"engineering-charts\",\n        throttle: 100\n        // Add these props for better stability\n        ,\n        layout: \"horizontal\",\n        barCategoryGap: \"20%\",\n        barGap: 0,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"stage\"\n          // Add these props to prevent x-axis blinking\n          ,\n          allowDataOverflow: false,\n          scale: \"band\",\n          type: \"category\"\n          // Add these props for better axis stability\n          ,\n          axisLine: true,\n          tickLine: true,\n          tick: {\n            fontSize: 12,\n            fill: '#b4b7bd'\n          }\n          // Prevent axis from jumping\n          ,\n          minTickGap: 10,\n          interval: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis\n        // Add these props for better axis stability\n        , {\n          axisLine: true,\n          tickLine: true,\n          tick: {\n            fontSize: 12,\n            fill: '#b4b7bd'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 22\n          }, this)\n          // Add animation and styling props\n          ,\n          animationDuration: 300,\n          animationEasing: \"ease-in-out\"\n          // Add these props for better tooltip behavior\n          ,\n          cursor: {\n            fill: 'rgba(115, 103, 240, 0.1)'\n          },\n          isAnimationActive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend\n        // Add these props for better legend stability\n        , {\n          verticalAlign: \"top\",\n          height: 36,\n          wrapperStyle: {\n            paddingBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), selectedMetrics.map(mKey => {\n          const metric = metrics.find(m => m.key === mKey);\n          return /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: mKey,\n            fill: metric.color,\n            name: metric.label\n            // Add animation props\n            ,\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\"\n            // Add these props for better bar behavior\n            ,\n            radius: [4, 4, 0, 0]\n            // Add hover effects\n            ,\n            onMouseEnter: (data, index) => {\n              // Add custom hover logic if needed\n            }\n          }, mKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStatusChart = () => {\n    if (memoizedStatusData.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Run Status by Engineering Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: memoizedStatusData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }\n          // Add syncId to prevent conflicts\n          ,\n          syncId: \"status-charts\",\n          throttle: 100\n          // Add these props for better stability\n          ,\n          layout: \"horizontal\",\n          barCategoryGap: \"20%\",\n          barGap: 0,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"stage\",\n            allowDataOverflow: false,\n            scale: \"band\",\n            type: \"category\"\n            // Add these props for better axis stability\n            ,\n            axisLine: true,\n            tickLine: true,\n            tick: {\n              fontSize: 12,\n              fill: '#b4b7bd'\n            }\n            // Prevent axis from jumping\n            ,\n            minTickGap: 10,\n            interval: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis\n          // Add these props for better axis stability\n          , {\n            axisLine: true,\n            tickLine: true,\n            tick: {\n              fontSize: 12,\n              fill: '#b4b7bd'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 24\n            }, this),\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\"\n            // Add these props for better tooltip behavior\n            ,\n            cursor: {\n              fill: 'rgba(115, 103, 240, 0.1)'\n            },\n            isAnimationActive: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend\n          // Add these props for better legend stability\n          , {\n            verticalAlign: \"top\",\n            height: 36,\n            wrapperStyle: {\n              paddingBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"pass\",\n            stackId: \"a\",\n            fill: \"#16a34a\",\n            name: \"Pass Rate (%)\",\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\",\n            radius: [4, 4, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"fail\",\n            stackId: \"a\",\n            fill: \"#dc2626\",\n            name: \"Fail Rate (%)\",\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\",\n            radius: [4, 4, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"error\",\n            stackId: \"a\",\n            fill: \"#f59e0b\",\n            name: \"Error Rate (%)\",\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\",\n            radius: [4, 4, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"engineering-charts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Engineering Charts Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Visualize engineering data by stages and metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this), !selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-domain-message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-icon\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please Select a Domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a domain from the main engineering view to see the charts and filter options.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 9\n    }, this), selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter-group ${filterOptionsLoading ? 'loading' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Experiment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.experiment,\n          onChange: e => handleFilterChange('experiment', e.target.value),\n          disabled: filterOptionsLoading,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Experiments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this), filterOptionsLoading ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Loading Experiments...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 17\n          }, this) : (_filterOptions$experi = filterOptions.experiments) === null || _filterOptions$experi === void 0 ? void 0 : _filterOptions$experi.map(experiment => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: experiment,\n            children: experiment\n          }, experiment, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter-group ${filterOptionsLoading ? 'loading' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Block Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.block_name,\n          onChange: e => handleFilterChange('block_name', e.target.value),\n          disabled: filterOptionsLoading,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Blocks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this), filterOptionsLoading ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Loading Blocks...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 17\n          }, this) : (_filterOptions$blocks = filterOptions.blocks) === null || _filterOptions$blocks === void 0 ? void 0 : _filterOptions$blocks.map(block => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: block,\n            children: block\n          }, block, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 9\n    }, this), selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-checkboxes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select up to 2 Metrics to Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-checkboxes-grid\",\n        children: metrics.map(metric => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"metric-checkbox-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedMetrics.includes(metric.key),\n            onChange: () => {\n              setSelectedMetrics(prev => {\n                if (prev.includes(metric.key)) {\n                  // Remove metric\n                  return prev.filter(m => m !== metric.key);\n                } else if (prev.length < 2) {\n                  // Add metric if less than 2 selected\n                  return [...prev, metric.key];\n                } else {\n                  // Max 2 metrics\n                  return prev;\n                }\n              });\n            },\n            disabled: !selectedMetrics.includes(metric.key) && selectedMetrics.length >= 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-checkbox-icon\",\n            style: {\n              backgroundColor: metric.color\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-checkbox-label-text\",\n            children: metric.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 17\n          }, this)]\n        }, metric.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 9\n    }, this), selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [selectedMetrics.map(mKey => {\n          var _metrics$find;\n          return (_metrics$find = metrics.find(m => m.key === mKey)) === null || _metrics$find === void 0 ? void 0 : _metrics$find.label;\n        }).join(' & '), \" by Engineering Stage\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading chart data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 13\n      }, this) : chartData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available for the selected filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: memoizedChartData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          syncId: \"engineering-charts\",\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"stage\",\n            allowDataOverflow: false,\n            scale: \"band\",\n            type: \"category\",\n            axisLine: true,\n            tickLine: true,\n            tick: {\n              fontSize: 12,\n              fill: '#b4b7bd'\n            },\n            minTickGap: 10,\n            interval: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            axisLine: true,\n            tickLine: true,\n            tick: {\n              fontSize: 12,\n              fill: '#b4b7bd'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            verticalAlign: \"top\",\n            height: 36,\n            wrapperStyle: {\n              paddingBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 17\n          }, this), selectedMetrics.map(mKey => {\n            const metric = metrics.find(m => m.key === mKey);\n\n            // Special handling for internal timing - render as 3 separate lines\n            if (mKey === 'internal_timing') {\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"internal_timing_wns\",\n                  stroke: \"#82ca9d\",\n                  name: \"Internal Timing WNS\",\n                  strokeWidth: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"internal_timing_tns\",\n                  stroke: \"#ffc658\",\n                  name: \"Internal Timing TNS\",\n                  strokeWidth: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"internal_timing_fep\",\n                  stroke: \"#ff7300\",\n                  name: \"Internal Timing FEP\",\n                  strokeWidth: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 25\n                }, this)]\n              }, mKey, true, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 23\n              }, this);\n            }\n            return /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: mKey,\n              stroke: metric.color,\n              name: metric.label,\n              strokeWidth: 3\n            }, mKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 9\n    }, this), selectedDomainId && renderStatusChart(), selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Stages:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: chartData.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Runs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: chartData.reduce((sum, stage) => sum + stage.count, 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 13\n        }, this), selectedMetrics.map(mKey => {\n          const metric = metrics.find(m => m.key === mKey);\n\n          // Special handling for internal timing - show averages for WNS, TNS, FEP\n          if (mKey === 'internal_timing') {\n            const avgWNS = chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_wns, 0) / chartData.length).toFixed(2) : '0';\n            const avgTNS = chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_tns, 0) / chartData.length).toFixed(2) : '0';\n            const avgFEP = chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_fep, 0) / chartData.length).toFixed(2) : '0';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"Average Internal Timing:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: [\"WNS: \", avgWNS, \", TNS: \", avgTNS, \", FEP: \", avgFEP]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 21\n              }, this)]\n            }, mKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 19\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"summary-label\",\n              children: [\"Average \", metric === null || metric === void 0 ? void 0 : metric.label, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"summary-value\",\n              children: chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage[mKey], 0) / chartData.length).toFixed(2) : '0'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 19\n            }, this)]\n          }, mKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 511,\n    columnNumber: 5\n  }, this);\n};\n_s2(EngineeringCharts, \"m29l2/t3OpN4EfPWwmBNKFVPbUw=\", false, function () {\n  return [useDebounce];\n});\n_c2 = EngineeringCharts;\nexport default EngineeringCharts;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"EngineeringCharts\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","index","displayValue","value","displayName","name","dataKey","includes","timingType","split","pop","toUpperCase","toFixed","style","color","_c","useDebounce","delay","_s","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","EngineeringCharts","selectedDomainId","projectFilters","_s2","_filterOptions$experi","_filterOptions$blocks","chartData","setChartData","loading","setLoading","filterOptionsLoading","setFilterOptionsLoading","selectedMetrics","setSelectedMetrics","filters","setFilters","project_id","experiment","block_name","filterOptions","setFilterOptions","token","localStorage","getItem","debouncedFilters","metrics","key","fetchFilterOptions","queryParams","URLSearchParams","append","response","fetch","headers","ok","data","json","error","console","fetchChartData","result","processChartData","stageOrder","stageData","forEach","item","stage","count","area_sum","internal_timing_wns_sum","internal_timing_tns_sum","internal_timing_fep_sum","interface_timing_sum","utilization_sum","congestion_sum","inst_count_sum","pass_count","fail_count","error_count","parseFloat","area_um2","internalTimingWNS","internalTimingTNS","internalTimingFEP","internal_timing","timingMatches","match","firstMatch","values","interfaceTimingValue","interface_timing","timingMatch","utilization","parseInt","inst_count","congestionValue","congestion_drc_metrics","run_status","processedData","filter","stageInfo","area","internal_timing_wns","internal_timing_tns","internal_timing_fep","congestion","pass_rate","fail_rate","error_rate","log","Object","keys","slice","handleFilterChange","prev","newFilters","memoizedChartData","memoizedStatusData","pass","fail","renderChart","width","height","margin","top","right","left","bottom","syncId","throttle","layout","barCategoryGap","barGap","strokeDasharray","allowDataOverflow","scale","type","axisLine","tickLine","tick","fontSize","fill","minTickGap","interval","content","animationDuration","animationEasing","cursor","isAnimationActive","verticalAlign","wrapperStyle","paddingBottom","mKey","metric","find","m","radius","onMouseEnter","renderStatusChart","stackId","onChange","e","target","disabled","experiments","blocks","block","checked","backgroundColor","_metrics$find","join","Fragment","stroke","strokeWidth","reduce","sum","avgWNS","avgTNS","avgFEP","_c2","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/EngineeringCharts.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport './EngineeringCharts.css';\nimport { \n  LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer \n} from 'recharts';\n\n// Custom Tooltip Component\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"tooltip-label\">{`Stage: ${label}`}</p>\n        {payload.map((entry, index) => {\n          let displayValue = entry.value;\n          let displayName = entry.name;\n          \n          // Format timing values\n          if (entry.dataKey.includes('internal_timing_')) {\n            const timingType = entry.dataKey.split('_').pop().toUpperCase();\n            displayName = `Internal Timing ${timingType}`;\n            displayValue = entry.value.toFixed(2);\n          } else if (entry.dataKey === 'internal_timing') {\n            // Handle the combined internal timing string\n            displayName = 'Internal Timing';\n            displayValue = entry.value; // Keep as string format \"WNS/TNS/FEP\"\n          }\n          \n          return (\n            <p key={index} className=\"tooltip-value\" style={{ color: entry.color }}>\n              {`${displayName}: ${displayValue}`}\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n  return null;\n};\n\n// Debounce hook to prevent excessive re-renders\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\n// Accept selectedDomainId and/or projectFilters as props\nconst EngineeringCharts = ({ selectedDomainId, projectFilters }) => {\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filterOptionsLoading, setFilterOptionsLoading] = useState(false);\n  // Replace single metric selection with multi-metric selection (max 2)\n  const [selectedMetrics, setSelectedMetrics] = useState(['area', 'internal_timing']);\n  const [filters, setFilters] = useState({\n    project_id: '',\n    experiment: '',\n    block_name: ''\n  });\n  const [filterOptions, setFilterOptions] = useState({});\n\n  const token = localStorage.getItem('token');\n\n  // Debounce filters to prevent excessive API calls\n  const debouncedFilters = useDebounce(filters, 300);\n\n  const metrics = [\n    { key: 'area', label: 'Area (μm²)', color: '#8884d8' },\n    { key: 'internal_timing', label: 'Internal Timing (WNS/TNS/FEP)', color: '#82ca9d' },\n    { key: 'interface_timing', label: 'Interface Timing', color: '#ffc658' },\n    { key: 'utilization', label: 'Utilization (%)', color: '#ff7300' },\n    { key: 'congestion', label: 'Congestion', color: '#ff0000' },\n    { key: 'inst_count', label: 'Instance Count', color: '#00ff00' }\n  ];\n\n  // Memoize the fetch functions to prevent unnecessary re-renders\n  const fetchFilterOptions = useCallback(async () => {\n    try {\n      setFilterOptionsLoading(true);\n      const queryParams = new URLSearchParams();\n      if (selectedDomainId) {\n        queryParams.append('domain_id', selectedDomainId);\n      }\n      if (filters.project_id) {\n        queryParams.append('project_id', filters.project_id);\n      }\n      if (filters.block_name) {\n        queryParams.append('block_name', filters.block_name);\n      }\n\n      const response = await fetch(`http://localhost:5000/api/data/filter-options?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setFilterOptions(data);\n      }\n    } catch (error) {\n      console.error('Error fetching filter options:', error);\n    } finally {\n      setFilterOptionsLoading(false);\n    }\n  }, [selectedDomainId, filters.project_id, filters.block_name, token]);\n\n  const fetchChartData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const queryParams = new URLSearchParams();\n      \n      if (selectedDomainId) queryParams.append('domain_id', selectedDomainId);\n      if (debouncedFilters.project_id) queryParams.append('project_id', debouncedFilters.project_id);\n      if (debouncedFilters.experiment) queryParams.append('experiment', debouncedFilters.experiment);\n      if (debouncedFilters.block_name) queryParams.append('block_name', debouncedFilters.block_name);\n\n      const response = await fetch(`http://localhost:5000/api/data/pd-data?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        processChartData(result.data);\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedDomainId, debouncedFilters, token]);\n\n  useEffect(() => {\n    if (selectedDomainId) {\n      fetchFilterOptions();\n    } else {\n      // Clear filter options when no domain is selected\n      setFilterOptions({});\n    }\n  }, [fetchFilterOptions, selectedDomainId]);\n\n  useEffect(() => {\n    if (selectedDomainId) {\n      fetchChartData();\n    } else {\n      // Clear chart data when no domain is selected\n      setChartData([]);\n      setLoading(false);\n    }\n  }, [fetchChartData, selectedDomainId]);\n\n  const processChartData = useCallback((data) => {\n    // Define the expected stage order\n    const stageOrder = ['synthesis', 'Floorplan', 'Placement'];\n    \n    // Group data by stage and calculate metrics\n    const stageData = {};\n    \n    data.forEach(item => {\n      const stage = item.stage || 'Unknown';\n      if (!stageData[stage]) {\n        stageData[stage] = {\n          stage,\n          count: 0,\n          area_sum: 0,\n          internal_timing_wns_sum: 0,\n          internal_timing_tns_sum: 0,\n          internal_timing_fep_sum: 0,\n          interface_timing_sum: 0,\n          utilization_sum: 0,\n          congestion_sum: 0,\n          inst_count_sum: 0,\n          pass_count: 0,\n          fail_count: 0,\n          error_count: 0\n        };\n      }\n      \n      stageData[stage].count++;\n      stageData[stage].area_sum += parseFloat(item.area_um2) || 0;\n      \n      // Process internal timing - extract WNS, TNS, FEP values from complex strings\n      // Example: \"Setup: r2r: -0.35/-3.8/264 Hold: NA\"\n      // We extract: WNS = -0.35, TNS = -3.8, FEP = 264\n      let internalTimingWNS = 0;\n      let internalTimingTNS = 0;\n      let internalTimingFEP = 0;\n      \n      if (item.internal_timing) {\n        // Look for patterns like \"r2r: -0.35/-3.8/264\" or \"i2r: -0.02/-1.4/241\"\n        const timingMatches = item.internal_timing.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/g);\n        if (timingMatches) {\n          // Take the first match (usually r2r)\n          const firstMatch = timingMatches[0];\n          const values = firstMatch.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/);\n          if (values) {\n            internalTimingWNS = parseFloat(values[1]) || 0;\n            internalTimingTNS = parseFloat(values[2]) || 0;\n            internalTimingFEP = parseFloat(values[3]) || 0;\n          }\n        }\n      }\n      \n      stageData[stage].internal_timing_wns_sum += internalTimingWNS;\n      stageData[stage].internal_timing_tns_sum += internalTimingTNS;\n      stageData[stage].internal_timing_fep_sum += internalTimingFEP;\n      \n      // Process interface timing - extract numeric values from complex strings\n      let interfaceTimingValue = 0;\n      if (item.interface_timing) {\n        const timingMatch = item.interface_timing.match(/(-?\\d+\\.?\\d*)/);\n        if (timingMatch) {\n          interfaceTimingValue = parseFloat(timingMatch[1]);\n        }\n      }\n      stageData[stage].interface_timing_sum += interfaceTimingValue;\n      \n      stageData[stage].utilization_sum += parseFloat(item.utilization) || 0;\n      stageData[stage].inst_count_sum += parseInt(item.inst_count) || 0;\n      \n      // Handle congestion (might be text, try to extract numeric value)\n      const congestionValue = parseFloat(item.congestion_drc_metrics) || 0;\n      stageData[stage].congestion_sum += congestionValue;\n      \n      // Count status\n      if (item.run_status === 'pass') stageData[stage].pass_count++;\n      else if (item.run_status === 'fail') stageData[stage].fail_count++;\n      else if (item.run_status === 'continue_with_error') stageData[stage].error_count++;\n    });\n\n    // Calculate averages and format for charts, maintaining stage order\n    const processedData = stageOrder\n      .filter(stage => stageData[stage]) // Only include stages that have data\n      .map(stage => {\n        const stageInfo = stageData[stage];\n        return {\n          stage: stageInfo.stage,\n          count: stageInfo.count,\n          area: stageInfo.count > 0 ? stageInfo.area_sum / stageInfo.count : 0,\n          internal_timing: stageInfo.count > 0 ? `${stageInfo.internal_timing_wns_sum / stageInfo.count}/${stageInfo.internal_timing_tns_sum / stageInfo.count}/${stageInfo.internal_timing_fep_sum / stageInfo.count}` : '0/0/0',\n          internal_timing_wns: stageInfo.count > 0 ? stageInfo.internal_timing_wns_sum / stageInfo.count : 0,\n          internal_timing_tns: stageInfo.count > 0 ? stageInfo.internal_timing_tns_sum / stageInfo.count : 0,\n          internal_timing_fep: stageInfo.count > 0 ? stageInfo.internal_timing_fep_sum / stageInfo.count : 0,\n          interface_timing: stageInfo.count > 0 ? stageInfo.interface_timing_sum / stageInfo.count : 0,\n          utilization: stageInfo.count > 0 ? stageInfo.utilization_sum / stageInfo.count : 0,\n          congestion: stageInfo.count > 0 ? stageInfo.congestion_sum / stageInfo.count : 0,\n          inst_count: stageInfo.count > 0 ? stageInfo.inst_count_sum / stageInfo.count : 0,\n          pass_rate: stageInfo.count > 0 ? (stageInfo.pass_count / stageInfo.count) * 100 : 0,\n          fail_rate: stageInfo.count > 0 ? (stageInfo.fail_count / stageInfo.count) * 100 : 0,\n          error_rate: stageInfo.count > 0 ? (stageInfo.error_count / stageInfo.count) * 100 : 0\n        };\n      });\n\n    setChartData(processedData);\n    \n    // Debug: Log the processed data\n    console.log('Processed Chart Data:', processedData);\n    console.log('Available stages in data:', Object.keys(stageData));\n    \n    // Debug: Log timing extraction for first few items\n    if (data.length > 0) {\n      console.log('Sample timing extraction:');\n      data.slice(0, 3).forEach((item, index) => {\n        if (item.internal_timing) {\n          const timingMatches = item.internal_timing.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/g);\n          console.log(`Item ${index + 1} - Stage: ${item.stage}, Internal Timing: \"${item.internal_timing}\"`);\n          if (timingMatches) {\n            const firstMatch = timingMatches[0];\n            const values = firstMatch.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/);\n            if (values) {\n              console.log(`  Extracted - WNS: ${values[1]}, TNS: ${values[2]}, FEP: ${values[3]}`);\n            }\n          } else {\n            console.log(`  No timing pattern found`);\n          }\n        }\n      });\n    }\n  }, []);\n\n  const handleFilterChange = useCallback((key, value) => {\n    setFilters(prev => {\n      const newFilters = { ...prev, [key]: value };\n      \n      // Reset dependent filters when parent filter changes\n      if (key === 'project_id') {\n        // Reset experiment and block when project changes\n        newFilters.experiment = '';\n        newFilters.block_name = '';\n        // Show loading state briefly for cascading update\n        setFilterOptionsLoading(true);\n        setTimeout(() => setFilterOptionsLoading(false), 500);\n      } else if (key === 'block_name') {\n        // Reset experiment when block changes\n        newFilters.experiment = '';\n        // Show loading state briefly for cascading update\n        setFilterOptionsLoading(true);\n        setTimeout(() => setFilterOptionsLoading(false), 500);\n      }\n      \n      return newFilters;\n    });\n  }, []);\n\n  // Memoize chart data to prevent unnecessary re-renders\n  const memoizedChartData = useMemo(() => chartData, [chartData]);\n  const memoizedStatusData = useMemo(() => {\n    if (chartData.length === 0) return [];\n    \n    return chartData.map(stage => ({\n      stage: stage.stage,\n      pass: stage.pass_rate,\n      fail: stage.fail_rate,\n      error: stage.error_rate\n    }));\n  }, [chartData]);\n\n  const renderChart = () => {\n    if (loading) {\n      return (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading chart data...</p>\n        </div>\n      );\n    }\n\n    if (chartData.length === 0) {\n      return (\n        <div className=\"no-data-container\">\n          <p>No data available for the selected filters</p>\n        </div>\n      );\n    }\n\n    // const selectedMetricData = metrics.find(m => m.key === selectedMetric); // This line is no longer needed\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart \n          data={memoizedChartData} \n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n          // Add these props to prevent blinking and improve performance\n          syncId=\"engineering-charts\"\n          throttle={100}\n          // Add these props for better stability\n          layout=\"horizontal\"\n          barCategoryGap=\"20%\"\n          barGap={0}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis \n            dataKey=\"stage\" \n            // Add these props to prevent x-axis blinking\n            allowDataOverflow={false}\n            scale=\"band\"\n            type=\"category\"\n            // Add these props for better axis stability\n            axisLine={true}\n            tickLine={true}\n            tick={{ fontSize: 12, fill: '#b4b7bd' }}\n            // Prevent axis from jumping\n            minTickGap={10}\n            interval={0}\n          />\n          <YAxis \n            // Add these props for better axis stability\n            axisLine={true}\n            tickLine={true}\n            tick={{ fontSize: 12, fill: '#b4b7bd' }}\n          />\n          <Tooltip \n            content={<CustomTooltip />}\n            // Add animation and styling props\n            animationDuration={300}\n            animationEasing=\"ease-in-out\"\n            // Add these props for better tooltip behavior\n            cursor={{ fill: 'rgba(115, 103, 240, 0.1)' }}\n            isAnimationActive={true}\n          />\n          <Legend \n            // Add these props for better legend stability\n            verticalAlign=\"top\"\n            height={36}\n            wrapperStyle={{ paddingBottom: '10px' }}\n          />\n          {/* Update main chart to render multiple Bars for selected metrics */}\n          {selectedMetrics.map(mKey => {\n            const metric = metrics.find(m => m.key === mKey);\n            return (\n              <Bar \n                key={mKey}\n                dataKey={mKey}\n                fill={metric.color}\n                name={metric.label}\n                // Add animation props\n                animationDuration={300}\n                animationEasing=\"ease-in-out\"\n                // Add these props for better bar behavior\n                radius={[4, 4, 0, 0]}\n                // Add hover effects\n                onMouseEnter={(data, index) => {\n                  // Add custom hover logic if needed\n                }}\n              />\n            );\n          })}\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderStatusChart = () => {\n    if (memoizedStatusData.length === 0) return null;\n\n    return (\n      <div className=\"status-chart-container\">\n        <h3>Run Status by Engineering Stage</h3>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart \n            data={memoizedStatusData} \n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n            // Add syncId to prevent conflicts\n            syncId=\"status-charts\"\n            throttle={100}\n            // Add these props for better stability\n            layout=\"horizontal\"\n            barCategoryGap=\"20%\"\n            barGap={0}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"stage\" \n              allowDataOverflow={false}\n              scale=\"band\"\n              type=\"category\"\n              // Add these props for better axis stability\n              axisLine={true}\n              tickLine={true}\n              tick={{ fontSize: 12, fill: '#b4b7bd' }}\n              // Prevent axis from jumping\n              minTickGap={10}\n              interval={0}\n            />\n            <YAxis \n              // Add these props for better axis stability\n              axisLine={true}\n              tickLine={true}\n              tick={{ fontSize: 12, fill: '#b4b7bd' }}\n            />\n            <Tooltip \n              content={<CustomTooltip />}\n              animationDuration={300}\n              animationEasing=\"ease-in-out\"\n              // Add these props for better tooltip behavior\n              cursor={{ fill: 'rgba(115, 103, 240, 0.1)' }}\n              isAnimationActive={true}\n            />\n            <Legend \n              // Add these props for better legend stability\n              verticalAlign=\"top\"\n              height={36}\n              wrapperStyle={{ paddingBottom: '10px' }}\n            />\n            <Bar \n              dataKey=\"pass\" \n              stackId=\"a\" \n              fill=\"#16a34a\" \n              name=\"Pass Rate (%)\"\n              animationDuration={300}\n              animationEasing=\"ease-in-out\"\n              radius={[4, 4, 0, 0]}\n            />\n            <Bar \n              dataKey=\"fail\" \n              stackId=\"a\" \n              fill=\"#dc2626\" \n              name=\"Fail Rate (%)\"\n              animationDuration={300}\n              animationEasing=\"ease-in-out\"\n              radius={[4, 4, 0, 0]}\n            />\n            <Bar \n              dataKey=\"error\" \n              stackId=\"a\" \n              fill=\"#f59e0b\" \n              name=\"Error Rate (%)\"\n              animationDuration={300}\n              animationEasing=\"ease-in-out\"\n              radius={[4, 4, 0, 0]}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"engineering-charts\">\n      <div className=\"charts-header\">\n        <h2>Engineering Charts Dashboard</h2>\n        <p>Visualize engineering data by stages and metrics</p>\n      </div>\n\n      {/* Show message when no domain is selected */}\n      {!selectedDomainId && (\n        <div className=\"no-domain-message\">\n          <div className=\"message-container\">\n            <div className=\"message-icon\">📊</div>\n            <h3>Please Select a Domain</h3>\n            <p>Choose a domain from the main engineering view to see the charts and filter options.</p>\n          </div>\n        </div>\n      )}\n\n      {/* Filters Section - Only show when domain is selected */}\n      {selectedDomainId && (\n        <div className=\"filters-section\">\n          {/* Removed Project Filter Dropdown */}\n          <div className={`filter-group ${filterOptionsLoading ? 'loading' : ''}`}>\n            <label>Experiment:</label>\n            <select \n              value={filters.experiment} \n              onChange={(e) => handleFilterChange('experiment', e.target.value)}\n              disabled={filterOptionsLoading}\n            >\n              <option value=\"\">All Experiments</option>\n              {filterOptionsLoading ? (\n                <option value=\"\">Loading Experiments...</option>\n              ) : (\n                filterOptions.experiments?.map(experiment => (\n                  <option key={experiment} value={experiment}>\n                    {experiment}\n                  </option>\n                ))\n              )}\n            </select>\n          </div>\n\n          <div className={`filter-group ${filterOptionsLoading ? 'loading' : ''}`}>\n            <label>Block Name:</label>\n            <select \n              value={filters.block_name} \n              onChange={(e) => handleFilterChange('block_name', e.target.value)}\n              disabled={filterOptionsLoading}\n            >\n              <option value=\"\">All Blocks</option>\n              {filterOptionsLoading ? (\n                <option value=\"\">Loading Blocks...</option>\n              ) : (\n                filterOptions.blocks?.map(block => (\n                  <option key={block} value={block}>\n                    {block}\n                  </option>\n                ))\n              )}\n            </select>\n          </div>\n        </div>\n      )}\n\n      {/* Metric Selection Buttons - Only show when domain is selected */}\n      {selectedDomainId && (\n        <div className=\"metric-checkboxes\">\n          <h3>Select up to 2 Metrics to Display</h3>\n          <div className=\"metric-checkboxes-grid\">\n            {metrics.map(metric => (\n              <label key={metric.key} className=\"metric-checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedMetrics.includes(metric.key)}\n                  onChange={() => {\n                    setSelectedMetrics(prev => {\n                      if (prev.includes(metric.key)) {\n                        // Remove metric\n                        return prev.filter(m => m !== metric.key);\n                      } else if (prev.length < 2) {\n                        // Add metric if less than 2 selected\n                        return [...prev, metric.key];\n                      } else {\n                        // Max 2 metrics\n                        return prev;\n                      }\n                    });\n                  }}\n                  disabled={\n                    !selectedMetrics.includes(metric.key) && selectedMetrics.length >= 2\n                  }\n                />\n                <span className=\"metric-checkbox-icon\" style={{ backgroundColor: metric.color }}></span>\n                <span className=\"metric-checkbox-label-text\">{metric.label}</span>\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Main Chart - Only show when domain is selected */}\n      {selectedDomainId && (\n        <div className=\"main-chart-container\">\n          <h3>\n            {selectedMetrics.map(mKey => metrics.find(m => m.key === mKey)?.label).join(' & ')} by Engineering Stage\n          </h3>\n          {loading ? (\n            <div className=\"loading-container\">\n              <div className=\"loading-spinner\"></div>\n              <p>Loading chart data...</p>\n            </div>\n          ) : chartData.length === 0 ? (\n            <div className=\"no-data-container\">\n              <p>No data available for the selected filters</p>\n            </div>\n          ) : (\n            <ResponsiveContainer width=\"100%\" height={400}>\n              <LineChart\n                data={memoizedChartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                syncId=\"engineering-charts\"\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  dataKey=\"stage\"\n                  allowDataOverflow={false}\n                  scale=\"band\"\n                  type=\"category\"\n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                  minTickGap={10}\n                  interval={0}\n                />\n                <YAxis\n                  axisLine={true}\n                  tickLine={true}\n                  tick={{ fontSize: 12, fill: '#b4b7bd' }}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend verticalAlign=\"top\" height={36} wrapperStyle={{ paddingBottom: '10px' }} />\n                {selectedMetrics.map(mKey => {\n                  const metric = metrics.find(m => m.key === mKey);\n                  \n                  // Special handling for internal timing - render as 3 separate lines\n                  if (mKey === 'internal_timing') {\n                    return (\n                      <React.Fragment key={mKey}>\n                        <Line\n                          type=\"monotone\"\n                          dataKey=\"internal_timing_wns\"\n                          stroke=\"#82ca9d\"\n                          name=\"Internal Timing WNS\"\n                          strokeWidth={3}\n                        />\n                        <Line\n                          type=\"monotone\"\n                          dataKey=\"internal_timing_tns\"\n                          stroke=\"#ffc658\"\n                          name=\"Internal Timing TNS\"\n                          strokeWidth={3}\n                        />\n                        <Line\n                          type=\"monotone\"\n                          dataKey=\"internal_timing_fep\"\n                          stroke=\"#ff7300\"\n                          name=\"Internal Timing FEP\"\n                          strokeWidth={3}\n                        />\n                      </React.Fragment>\n                    );\n                  }\n                  \n                  return (\n                    <Line\n                      key={mKey}\n                      type=\"monotone\"\n                      dataKey={mKey}\n                      stroke={metric.color}\n                      name={metric.label}\n                      strokeWidth={3}\n                    />\n                  );\n                })}\n              </LineChart>\n            </ResponsiveContainer>\n          )}\n        </div>\n      )}\n\n      {/* Status Chart - Only show when domain is selected */}\n      {selectedDomainId && renderStatusChart()}\n\n      {/* Data Summary - Only show when domain is selected */}\n      {selectedDomainId && (\n        <div className=\"data-summary\">\n          <h3>Data Summary</h3>\n          <div className=\"summary-grid\">\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Total Stages:</span>\n              <span className=\"summary-value\">{chartData.length}</span>\n            </div>\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Total Runs:</span>\n              <span className=\"summary-value\">\n                {chartData.reduce((sum, stage) => sum + stage.count, 0)}\n              </span>\n            </div>\n            {/* Show average for each selected metric */}\n            {selectedMetrics.map(mKey => {\n              const metric = metrics.find(m => m.key === mKey);\n              \n              // Special handling for internal timing - show averages for WNS, TNS, FEP\n              if (mKey === 'internal_timing') {\n                const avgWNS = chartData.length > 0 \n                  ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_wns, 0) / chartData.length).toFixed(2)\n                  : '0';\n                const avgTNS = chartData.length > 0 \n                  ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_tns, 0) / chartData.length).toFixed(2)\n                  : '0';\n                const avgFEP = chartData.length > 0 \n                  ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_fep, 0) / chartData.length).toFixed(2)\n                  : '0';\n                \n                return (\n                  <div className=\"summary-item\" key={mKey}>\n                    <span className=\"summary-label\">Average Internal Timing:</span>\n                    <span className=\"summary-value\">\n                      WNS: {avgWNS}, TNS: {avgTNS}, FEP: {avgFEP}\n                    </span>\n                  </div>\n                );\n              }\n              \n              return (\n                <div className=\"summary-item\" key={mKey}>\n                  <span className=\"summary-label\">Average {metric?.label}:</span>\n                  <span className=\"summary-value\">\n                    {chartData.length > 0 \n                      ? (chartData.reduce((sum, stage) => sum + stage[mKey], 0) / chartData.length).toFixed(2)\n                      : '0'\n                    }\n                  </span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EngineeringCharts; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}