{"ast":null,"code":"import { animated as t } from \"@react-spring/web\";\nimport { jsxs as e, Fragment as o, jsx as n } from \"react/jsx-runtime\";\nvar r = {\n    center: \"center\",\n    \"top-left\": \"start\",\n    top: \"center\",\n    \"top-right\": \"end\",\n    right: \"end\",\n    \"bottom-right\": \"end\",\n    bottom: \"center\",\n    \"bottom-left\": \"start\",\n    left: \"start\"\n  },\n  i = {\n    start: \"end\",\n    center: \"center\",\n    end: \"start\"\n  },\n  l = {\n    center: \"center\",\n    \"top-left\": \"top\",\n    top: \"top\",\n    \"top-right\": \"top\",\n    right: \"center\",\n    \"bottom-right\": \"bottom\",\n    bottom: \"bottom\",\n    \"bottom-left\": \"bottom\",\n    left: \"center\"\n  },\n  c = {\n    top: \"bottom\",\n    center: \"center\",\n    bottom: \"top\"\n  },\n  f = function (t, e) {\n    void 0 === e && (e = !1);\n    var o = r[t];\n    return e ? i[o] : o;\n  },\n  u = function (t, e) {\n    void 0 === e && (e = !1);\n    var o = l[t];\n    return e ? c[o] : o;\n  },\n  a = function (t, e) {\n    t.font = (e.fontWeight ? e.fontWeight + \" \" : \"\") + e.fontSize + \"px \" + e.fontFamily;\n  },\n  d = function (t, e, o, n, r) {\n    void 0 === n && (n = 0), void 0 === r && (r = 0), e.outlineWidth > 0 && (t.strokeStyle = e.outlineColor, t.lineWidth = 2 * e.outlineWidth, t.lineJoin = \"round\", t.strokeText(o, n, r)), t.fillStyle = e.fill, t.fillText(o, n, r);\n  };\nfunction p() {\n  return p = Object.assign ? Object.assign.bind() : function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var o = arguments[e];\n      for (var n in o) ({}).hasOwnProperty.call(o, n) && (t[n] = o[n]);\n    }\n    return t;\n  }, p.apply(null, arguments);\n}\nfunction s(t, e) {\n  if (null == t) return {};\n  var o = {};\n  for (var n in t) if ({}.hasOwnProperty.call(t, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    o[n] = t[n];\n  }\n  return o;\n}\nvar h = [\"style\", \"children\"],\n  m = [\"outlineWidth\", \"outlineColor\", \"outlineOpacity\"],\n  b = function (r) {\n    var i = r.style,\n      l = r.children,\n      c = s(r, h),\n      f = i.outlineWidth,\n      u = i.outlineColor,\n      a = i.outlineOpacity,\n      d = s(i, m);\n    return e(o, {\n      children: [f > 0 && n(t.text, p({}, c, {\n        style: p({}, d, {\n          strokeWidth: 2 * f,\n          stroke: u,\n          strokeOpacity: a,\n          strokeLinejoin: \"round\"\n        }),\n        children: l\n      })), n(t.text, p({}, c, {\n        style: d,\n        children: l\n      }))]\n    });\n  };\nexport { b as Text, d as drawCanvasText, f as getTextAlignFromBoxAnchor, u as getTextBaselineFromBoxAnchor, a as setCanvasFont };","map":{"version":3,"names":["r","center","top","right","bottom","left","i","start","end","l","c","f","getTextAlignFromBoxAnchor","t","e","o","u","getTextBaselineFromBoxAnchor","a","setCanvasFont","font","fontWeight","fontSize","fontFamily","d","drawCanvasText","n","outlineWidth","strokeStyle","outlineColor","lineWidth","lineJoin","strokeText","fillStyle","fill","fillText","p","Object","assign","bind","arguments","length","hasOwnProperty","call","apply","s","indexOf","h","m","b","Text","style","children","outlineOpacity","text","strokeWidth","stroke","strokeOpacity","strokeLinejoin"],"sources":["C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\text\\src\\boxAnchor.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\text\\src\\canvas.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\text\\src\\Text.tsx"],"sourcesContent":["import { BoxAnchor } from '@nivo/core'\nimport { TextAlign, TextBaseline } from '@nivo/theming'\n\nconst textAlignByBoxAnchor: Record<BoxAnchor, TextAlign> = {\n    center: 'center',\n    'top-left': 'start',\n    top: 'center',\n    'top-right': 'end',\n    right: 'end',\n    'bottom-right': 'end',\n    bottom: 'center',\n    'bottom-left': 'start',\n    left: 'start',\n}\n\nconst textAlignOppositeMap: Record<TextAlign, TextAlign> = {\n    start: 'end',\n    center: 'center',\n    end: 'start',\n}\n\nconst textBaselineByBoxAnchor: Record<BoxAnchor, TextBaseline> = {\n    center: 'center',\n    'top-left': 'top',\n    top: 'top',\n    'top-right': 'top',\n    right: 'center',\n    'bottom-right': 'bottom',\n    bottom: 'bottom',\n    'bottom-left': 'bottom',\n    left: 'center',\n}\n\nconst textBaselineOppositeMap: Record<TextBaseline, TextBaseline> = {\n    top: 'bottom',\n    center: 'center',\n    bottom: 'top',\n}\n\nexport const getTextAlignFromBoxAnchor = (anchor: BoxAnchor, isOutside = false) => {\n    const align = textAlignByBoxAnchor[anchor]\n    if (!isOutside) return align\n    return textAlignOppositeMap[align]\n}\n\nexport const getTextBaselineFromBoxAnchor = (anchor: BoxAnchor, isOutside = false) => {\n    const baseline = textBaselineByBoxAnchor[anchor]\n    if (!isOutside) return baseline\n    return textBaselineOppositeMap[baseline]\n}\n","import { TextStyle } from '@nivo/theming'\n\nexport const setCanvasFont = (ctx: CanvasRenderingContext2D, style: TextStyle) => {\n    ctx.font = `${style.fontWeight ? `${style.fontWeight} ` : ''}${style.fontSize}px ${\n        style.fontFamily\n    }`\n}\n\nexport const drawCanvasText = (\n    ctx: CanvasRenderingContext2D,\n    style: TextStyle,\n    text: string,\n    x = 0,\n    y = 0\n) => {\n    if (style.outlineWidth > 0) {\n        ctx.strokeStyle = style.outlineColor\n        ctx.lineWidth = style.outlineWidth * 2\n        ctx.lineJoin = 'round'\n        ctx.strokeText(text, x, y)\n    }\n\n    ctx.fillStyle = style.fill\n    ctx.fillText(text, x, y)\n}\n","import { PropsWithChildren, ComponentProps } from 'react'\nimport { animated } from '@react-spring/web'\nimport { TextStyle } from '@nivo/theming'\n\ntype AnimatedComponentProps = ComponentProps<(typeof animated)['text']>\n\nexport type TextProps = PropsWithChildren<\n    Omit<AnimatedComponentProps, 'style'> & {\n        style: AnimatedComponentProps['style'] &\n            Pick<TextStyle, 'outlineWidth' | 'outlineColor' | 'outlineOpacity'>\n    }\n>\n\nexport const Text = ({ style: fullStyle, children, ...attributes }: TextProps) => {\n    const { outlineWidth, outlineColor, outlineOpacity, ...style } = fullStyle\n\n    return (\n        <>\n            {outlineWidth > 0 && (\n                <animated.text\n                    {...attributes}\n                    style={{\n                        ...style,\n                        strokeWidth: outlineWidth * 2,\n                        stroke: outlineColor,\n                        strokeOpacity: outlineOpacity,\n                        strokeLinejoin: 'round',\n                    }}\n                >\n                    {children}\n                </animated.text>\n            )}\n            <animated.text {...attributes} style={style}>\n                {children}\n            </animated.text>\n        </>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}