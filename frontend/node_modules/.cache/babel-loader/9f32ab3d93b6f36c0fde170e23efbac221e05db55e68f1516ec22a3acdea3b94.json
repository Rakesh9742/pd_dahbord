{"ast":null,"code":"import { useState as i, useMemo as e, useCallback as t, createElement as o, memo as n, forwardRef as r, Fragment as a } from \"react\";\nimport { useMotionConfig as d, useAnimatedPath as l, Container as c, useDimensions as s, SvgWrapper as u, ResponsiveWrapper as v, bindDefs as p } from \"@nivo/core\";\nimport { Grid as h, Axes as f } from \"@nivo/axes\";\nimport { line as g, curveBasis as y, curveLinear as b, area as m } from \"d3-shape\";\nimport { useTheme as x } from \"@nivo/theming\";\nimport { useOrdinalColorScale as M, useInheritedColor as W } from \"@nivo/colors\";\nimport { useTooltip as P, BasicTooltip as O } from \"@nivo/tooltip\";\nimport { scalePoint as L, scaleLinear as C } from \"d3-scale\";\nimport { castPointScale as S, castLinearScale as I } from \"@nivo/scales\";\nimport { jsx as B, jsxs as k, Fragment as w } from \"react/jsx-runtime\";\nimport { useSpring as A, animated as z, to as E, useSprings as T } from \"@react-spring/web\";\nimport { Text as D } from \"@nivo/text\";\nimport { Mesh as G } from \"@nivo/voronoi\";\nfunction F() {\n  return F = Object.assign ? Object.assign.bind() : function (i) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var o in t) ({}).hasOwnProperty.call(t, o) && (i[o] = t[o]);\n    }\n    return i;\n  }, F.apply(null, arguments);\n}\nfunction R(i, e) {\n  if (null == i) return {};\n  var t = {};\n  for (var o in i) if ({}.hasOwnProperty.call(i, o)) {\n    if (-1 !== e.indexOf(o)) continue;\n    t[o] = i[o];\n  }\n  return t;\n}\nvar H = function (i) {\n    return e(function () {\n      return \"function\" == typeof i ? i : function () {\n        return i;\n      };\n    }, [i]);\n  },\n  U = function (o) {\n    var n = o.width,\n      r = o.height,\n      a = o.data,\n      d = o.interpolation,\n      l = o.xPadding,\n      c = o.xOuterPadding,\n      s = o.yOuterPadding,\n      u = o.lineWidth,\n      v = o.activeLineWidth,\n      p = o.inactiveLineWidth,\n      h = o.colors,\n      f = o.opacity,\n      m = o.activeOpacity,\n      P = o.inactiveOpacity,\n      O = o.pointSize,\n      C = o.activePointSize,\n      I = o.inactivePointSize,\n      B = o.pointColor,\n      k = o.pointBorderWidth,\n      w = o.activePointBorderWidth,\n      A = o.inactivePointBorderWidth,\n      z = o.pointBorderColor,\n      E = o.isInteractive,\n      T = o.defaultActiveSerieIds,\n      D = i(T),\n      G = D[0],\n      R = D[1],\n      U = i(T),\n      X = U[0],\n      j = U[1],\n      Y = e(function () {\n        return function (i) {\n          var e = i.width,\n            t = i.height,\n            o = i.data,\n            n = i.xPadding,\n            r = i.xOuterPadding,\n            a = i.yOuterPadding,\n            d = new Set(),\n            l = new Set();\n          o.forEach(function (i) {\n            i.data.forEach(function (i) {\n              d.add(i.x), null !== i.y && l.add(i.y);\n            });\n          });\n          var c = Array.from(d),\n            s = S(L().domain(c).range([0, e]).padding(r)),\n            u = Array.from(l).sort(function (i, e) {\n              return i - e;\n            }),\n            v = S(L().domain(u).range([0, t]).padding(a)),\n            p = s.step() * Math.min(.5 * n, .5);\n          return {\n            series: o.map(function (i) {\n              var t = {\n                id: i.id,\n                data: i,\n                points: [],\n                linePoints: []\n              };\n              return i.data.forEach(function (o, n) {\n                var r = null,\n                  a = null;\n                null !== o.y && (r = s(o.x), a = v(o.y));\n                var d = {\n                  id: i.id + \".\" + n,\n                  serie: i,\n                  data: o,\n                  x: r,\n                  y: a\n                };\n                t.points.push(d), null !== d.x && (0 === n ? t.linePoints.push([0, d.y]) : t.linePoints.push([d.x - p, d.y])), t.linePoints.push([d.x, d.y]), null !== r && (n === i.data.length - 1 && r ? t.linePoints.push([e, d.y]) : t.linePoints.push([d.x + p, d.y])), t.points = t.points.filter(function (i) {\n                  return null !== i.x;\n                });\n              }), t;\n            }),\n            xScale: s,\n            yScale: v\n          };\n        }({\n          width: n,\n          height: r,\n          data: a,\n          xPadding: l,\n          xOuterPadding: c,\n          yOuterPadding: s\n        });\n      }, [n, r, a, l, c, s]),\n      K = Y.series,\n      q = Y.xScale,\n      J = Y.yScale,\n      N = function (i) {\n        return e(function () {\n          return g().curve(\"smooth\" === i ? y : b).defined(function (i) {\n            return null !== i[0] && null !== i[1];\n          });\n        }, [i]);\n      }(d),\n      Q = M(h, \"id\"),\n      V = function (i) {\n        var e = i.lineWidth,\n          o = i.activeLineWidth,\n          n = i.inactiveLineWidth,\n          r = i.opacity,\n          a = i.activeOpacity,\n          d = i.inactiveOpacity,\n          l = i.isInteractive,\n          c = i.activeSerieIds,\n          s = H(e),\n          u = H(o),\n          v = H(n),\n          p = H(r),\n          h = H(a),\n          f = H(d),\n          g = t(function (i) {\n            return {\n              opacity: p(i),\n              lineWidth: s(i)\n            };\n          }, [s, p]),\n          y = t(function (i) {\n            return {\n              opacity: h(i),\n              lineWidth: u(i)\n            };\n          }, [u, h]),\n          b = t(function (i) {\n            return {\n              opacity: f(i),\n              lineWidth: v(i)\n            };\n          }, [v, f]);\n        return t(function (i) {\n          return l && 0 !== c.length ? c.includes(i.id) ? y(i) : b(i) : g(i);\n        }, [g, y, b, l, c]);\n      }({\n        lineWidth: u,\n        activeLineWidth: v,\n        inactiveLineWidth: p,\n        opacity: f,\n        activeOpacity: m,\n        inactiveOpacity: P,\n        isInteractive: E,\n        activeSerieIds: G\n      }),\n      Z = e(function () {\n        return K.map(function (i) {\n          return F({}, i, {\n            color: Q(i.data)\n          }, V(i));\n        });\n      }, [K, Q, V]),\n      $ = x(),\n      _ = W(B, $),\n      ii = W(z, $),\n      ei = function (i) {\n        var e = i.pointSize,\n          o = i.activePointSize,\n          n = i.inactivePointSize,\n          r = i.pointBorderWidth,\n          a = i.activePointBorderWidth,\n          d = i.inactivePointBorderWidth,\n          l = i.isInteractive,\n          c = i.activePointIds,\n          s = H(e),\n          u = H(o),\n          v = H(n),\n          p = H(r),\n          h = H(a),\n          f = H(d),\n          g = t(function (i) {\n            return {\n              size: s(i),\n              borderWidth: p(i)\n            };\n          }, [s, p]),\n          y = t(function (i) {\n            return {\n              size: u(i),\n              borderWidth: h(i)\n            };\n          }, [u, h]),\n          b = t(function (i) {\n            return {\n              size: v(i),\n              borderWidth: f(i)\n            };\n          }, [v, f]);\n        return t(function (i) {\n          return l && 0 !== c.length ? c.includes(i.id) ? y(i) : b(i) : g(i);\n        }, [g, y, b, l, c]);\n      }({\n        pointSize: O,\n        activePointSize: C,\n        inactivePointSize: I,\n        pointBorderWidth: k,\n        activePointBorderWidth: w,\n        inactivePointBorderWidth: A,\n        isInteractive: E,\n        activePointIds: X\n      }),\n      ti = e(function () {\n        var i = [];\n        return Z.forEach(function (e) {\n          e.points.forEach(function (t) {\n            var o = F({}, t, {\n              serie: e,\n              isActive: G.includes(e.id),\n              isInactive: G.length > 0 && !G.includes(e.id)\n            });\n            o.color = _(o), o.borderColor = ii(o), i.push(F({}, o, ei(o)));\n          });\n        }), i;\n      }, [Z, G, _, ii, ei]);\n    return {\n      xScale: q,\n      yScale: J,\n      series: Z,\n      points: ti,\n      lineGenerator: N,\n      activeSerieIds: G,\n      setActiveSerieIds: R,\n      activePointIds: X,\n      setActivePointIds: j\n    };\n  },\n  X = function (i) {\n    var n = i.serie,\n      r = i.isInteractive,\n      a = i.onMouseEnter,\n      d = i.onMouseMove,\n      l = i.onMouseLeave,\n      c = i.onMouseDown,\n      s = i.onMouseUp,\n      u = i.onClick,\n      v = i.onDoubleClick,\n      p = i.setActiveSerieIds,\n      h = i.lineTooltip,\n      f = P(),\n      g = f.showTooltipFromEvent,\n      y = f.hideTooltip,\n      b = t(function (i) {\n        g(o(h, {\n          serie: n\n        }), i), p([n.id]), null == a || a(n, i);\n      }, [n, a, g, p, h]),\n      m = t(function (i) {\n        g(o(h, {\n          serie: n\n        }), i), null == d || d(n, i);\n      }, [n, d, g, h]),\n      x = t(function (i) {\n        y(), p([]), null == l || l(n, i);\n      }, [n, l, y, p]),\n      M = t(function (i) {\n        null == c || c(n, i);\n      }, [n, c]),\n      W = t(function (i) {\n        null == s || s(n, i);\n      }, [n, s]),\n      O = t(function (i) {\n        null == u || u(n, i);\n      }, [n, u]),\n      L = t(function (i) {\n        null == v || v(n, i);\n      }, [n, v]);\n    return e(function () {\n      return {\n        onMouseEnter: r ? b : void 0,\n        onMouseMove: r ? m : void 0,\n        onMouseLeave: r ? x : void 0,\n        onMouseDown: r ? M : void 0,\n        onMouseUp: r ? W : void 0,\n        onClick: r ? O : void 0,\n        onDoubleClick: r ? L : void 0\n      };\n    }, [r, b, m, x, M, W, O, L]);\n  },\n  j = function (i) {\n    var n = i.point,\n      r = i.isInteractive,\n      a = i.onMouseEnter,\n      d = i.onMouseMove,\n      l = i.onMouseLeave,\n      c = i.onMouseDown,\n      s = i.onMouseUp,\n      u = i.onClick,\n      v = i.onDoubleClick,\n      p = i.setActivePointIds,\n      h = i.setActiveSerieIds,\n      f = i.pointTooltip,\n      g = P(),\n      y = g.showTooltipFromEvent,\n      b = g.hideTooltip,\n      m = t(function (i) {\n        y(o(f, {\n          point: n\n        }), i), p([n.id]), h([n.serie.id]), null == a || a(n, i);\n      }, [y, f, n, p, h, a]),\n      x = t(function (i) {\n        y(o(f, {\n          point: n\n        }), i), null == d || d(n, i);\n      }, [y, f, n, d]),\n      M = t(function (i) {\n        b(), p([]), h([]), null == l || l(n, i);\n      }, [b, p, h, l, n]),\n      W = t(function (i) {\n        null == c || c(n, i);\n      }, [n, c]),\n      O = t(function (i) {\n        null == s || s(n, i);\n      }, [n, s]),\n      L = t(function (i) {\n        null == u || u(n, i);\n      }, [n, u]),\n      C = t(function (i) {\n        null == v || v(n, i);\n      }, [n, v]);\n    return e(function () {\n      return {\n        onMouseEnter: r ? m : void 0,\n        onMouseMove: r ? x : void 0,\n        onMouseLeave: r ? M : void 0,\n        onMouseDown: r ? W : void 0,\n        onMouseUp: r ? O : void 0,\n        onClick: r ? L : void 0,\n        onDoubleClick: r ? C : void 0\n      };\n    }, [r, m, x, M, W, O, L, C]);\n  },\n  Y = function (i) {\n    var t = i.series,\n      o = i.position,\n      n = i.padding,\n      r = i.color,\n      a = i.getLabel,\n      d = x(),\n      l = W(r, d);\n    return e(function () {\n      var i, e;\n      \"start\" === o ? (i = \"end\", e = -1 * n) : (i = \"start\", e = n);\n      var r = [];\n      return t.forEach(function (t) {\n        var n = t.id;\n        \"function\" == typeof a && (n = a(t.data));\n        var d = \"start\" === o ? t.linePoints[0] : t.linePoints[t.linePoints.length - 1];\n        null !== (null == d ? void 0 : d[0]) && null !== (null == d ? void 0 : d[1]) && r.push({\n          id: t.id,\n          label: n,\n          x: d[0] + e,\n          y: d[1],\n          color: l(t),\n          opacity: t.opacity,\n          serie: t,\n          textAnchor: i\n        });\n      }), r;\n    }, [t, o, n, l, a]);\n  },\n  K = {\n    pointerEvents: \"none\"\n  },\n  q = F({}, {\n    layers: [\"grid\", \"axes\", \"labels\", \"lines\", \"points\", \"mesh\"],\n    interpolation: \"smooth\",\n    xPadding: .6,\n    xOuterPadding: .5,\n    yOuterPadding: .5,\n    colors: {\n      scheme: \"nivo\"\n    },\n    lineWidth: 2,\n    activeLineWidth: 4,\n    inactiveLineWidth: 1,\n    opacity: 1,\n    activeOpacity: 1,\n    inactiveOpacity: .3,\n    startLabel: !1,\n    startLabelPadding: 16,\n    startLabelTextColor: {\n      from: \"color\"\n    },\n    endLabel: !0,\n    endLabelPadding: 16,\n    endLabelTextColor: {\n      from: \"color\"\n    },\n    pointSize: 6,\n    activePointSize: 8,\n    inactivePointSize: 4,\n    pointColor: {\n      from: \"serie.color\"\n    },\n    pointBorderWidth: 0,\n    activePointBorderWidth: 0,\n    inactivePointBorderWidth: 0,\n    pointBorderColor: {\n      from: \"serie.color\",\n      modifiers: [[\"darker\", 1.4]]\n    },\n    enableGridX: !0,\n    enableGridY: !0,\n    axisTop: {},\n    axisRight: null,\n    axisBottom: {},\n    axisLeft: {},\n    isInteractive: !0,\n    defaultActiveSerieIds: [],\n    lineTooltip: function (i) {\n      var e = i.serie;\n      return B(O, {\n        \"data-testid\": \"tooltip.\" + e.data.id,\n        id: e.data.id,\n        enableChip: !0,\n        color: e.color\n      });\n    },\n    pointTooltip: n(function (i) {\n      var e = i.point;\n      return B(O, {\n        id: k(\"span\", {\n          children: [\"x: \", B(\"strong\", {\n            children: e.data.x\n          }), \", y: \", B(\"strong\", {\n            children: e.data.y\n          })]\n        }),\n        enableChip: !0,\n        color: e.serie.color\n      });\n    }),\n    useMesh: !1,\n    debugMesh: !1,\n    role: \"img\",\n    renderWrapper: !0\n  }, {\n    pointComponent: function (i) {\n      var e = i.point,\n        t = d(),\n        o = t.animate,\n        n = t.config,\n        r = A({\n          x: e.x,\n          y: e.y,\n          radius: e.size / 2,\n          color: e.color,\n          borderWidth: e.borderWidth,\n          config: n,\n          immediate: !o\n        });\n      return B(z.circle, {\n        \"data-testid\": \"point.\" + e.serie.id + \".\" + e.data.x,\n        cx: r.x,\n        cy: r.y,\n        r: E(r.radius, function (i) {\n          return Math.max(i, 0);\n        }),\n        fill: r.color,\n        strokeWidth: r.borderWidth,\n        stroke: e.borderColor,\n        style: K\n      });\n    },\n    animate: !0,\n    motionConfig: \"gentle\"\n  }),\n  J = function (i) {\n    var e = i.serie,\n      t = i.lineGenerator,\n      o = i.yStep,\n      n = i.isInteractive,\n      r = i.onMouseEnter,\n      a = i.onMouseMove,\n      c = i.onMouseLeave,\n      s = i.onMouseDown,\n      u = i.onMouseUp,\n      v = i.onClick,\n      p = i.onDoubleClick,\n      h = i.setActiveSerieIds,\n      f = i.lineTooltip,\n      g = i.useMesh,\n      y = X({\n        serie: e,\n        isInteractive: n,\n        onMouseEnter: r,\n        onMouseMove: a,\n        onMouseLeave: c,\n        onMouseDown: s,\n        onMouseUp: u,\n        onClick: v,\n        onDoubleClick: p,\n        setActiveSerieIds: h,\n        lineTooltip: f\n      }),\n      b = d(),\n      m = b.animate,\n      x = b.config,\n      M = t(e.linePoints) || \"\",\n      W = l(M),\n      P = A({\n        color: e.color,\n        opacity: e.opacity,\n        lineWidth: e.lineWidth,\n        config: x,\n        immediate: !m\n      });\n    return k(w, {\n      children: [B(z.path, {\n        \"data-testid\": \"line.\" + e.id,\n        fill: \"none\",\n        d: W,\n        stroke: P.color,\n        strokeWidth: P.lineWidth,\n        strokeLinecap: \"round\",\n        strokeOpacity: P.opacity,\n        style: {\n          pointerEvents: \"none\"\n        }\n      }), n && !g && B(\"path\", {\n        \"data-testid\": \"line.\" + e.id + \".interactive\",\n        fill: \"none\",\n        stroke: \"red\",\n        strokeOpacity: 0,\n        strokeWidth: o,\n        d: M,\n        strokeLinecap: \"butt\",\n        onMouseEnter: y.onMouseEnter,\n        onMouseMove: y.onMouseMove,\n        onMouseLeave: y.onMouseLeave,\n        onMouseDown: y.onMouseDown,\n        onMouseUp: y.onMouseUp,\n        onClick: y.onClick,\n        onDoubleClick: y.onDoubleClick\n      })]\n    });\n  },\n  N = function (i) {\n    var e = i.series,\n      t = i.getLabel,\n      o = i.position,\n      n = i.padding,\n      r = i.color,\n      a = x(),\n      l = d(),\n      c = l.animate,\n      s = l.config,\n      u = Y({\n        series: e,\n        getLabel: t,\n        position: o,\n        padding: n,\n        color: r\n      }),\n      v = T(u.length, u.map(function (i) {\n        return {\n          x: i.x,\n          y: i.y,\n          opacity: i.opacity,\n          config: s,\n          immediate: !c\n        };\n      }));\n    return B(w, {\n      children: v.map(function (i, e) {\n        var t = u[e];\n        return B(D, {\n          \"data-testid\": \"label.\" + o + \".\" + t.serie.id,\n          x: i.x,\n          y: i.y,\n          textAnchor: t.textAnchor,\n          dominantBaseline: \"central\",\n          opacity: i.opacity,\n          style: F({}, a.labels.text, {\n            fill: t.color\n          }),\n          children: t.label\n        }, t.id);\n      })\n    });\n  },\n  Q = n(function (i) {\n    var e = i.points,\n      n = i.width,\n      r = i.height,\n      a = i.margin,\n      d = i.setActivePointIds,\n      l = i.setActiveSerieIds,\n      c = i.onMouseEnter,\n      s = i.onMouseMove,\n      u = i.onMouseLeave,\n      v = i.onMouseDown,\n      p = i.onMouseUp,\n      h = i.onClick,\n      f = i.onDoubleClick,\n      g = i.tooltip,\n      y = i.debug,\n      b = P(),\n      m = b.showTooltipAt,\n      x = b.hideTooltip,\n      M = t(function (i, e) {\n        var t;\n        m(o(g, {\n          point: i\n        }), [i.x + a.left, null != (t = i.y) ? t : 0 + a.top], \"top\"), d([i.id]), l([i.serie.id]), null == c || c(i, e);\n      }, [m, g, a.left, a.top, d, l, c]),\n      W = t(function (i, e) {\n        var t;\n        m(o(g, {\n          point: i\n        }), [i.x + a.left, null != (t = i.y) ? t : 0 + a.top], \"top\"), d([i.id]), l([i.serie.id]), null == s || s(i, e);\n      }, [m, g, a.left, a.top, d, l, s]),\n      O = t(function (i, e) {\n        x(), d([]), l([]), null == u || u(i, e);\n      }, [x, u, d, l]),\n      L = t(function (i, e) {\n        null == v || v(i, e);\n      }, [v]),\n      C = t(function (i, e) {\n        null == p || p(i, e);\n      }, [p]),\n      S = t(function (i, e) {\n        null == h || h(i, e);\n      }, [h]),\n      I = t(function (i, e) {\n        null == f || f(i, e);\n      }, [f]);\n    return B(G, {\n      nodes: e,\n      width: n,\n      height: r,\n      onMouseEnter: M,\n      onMouseMove: W,\n      onMouseLeave: O,\n      onMouseDown: L,\n      onMouseUp: C,\n      onClick: S,\n      onDoubleClick: I,\n      debug: y\n    });\n  }),\n  V = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  Z = function (i) {\n    var t = i.data,\n      n = i.width,\n      r = i.height,\n      d = i.margin,\n      l = i.layers,\n      c = void 0 === l ? q.layers : l,\n      v = i.interpolation,\n      p = void 0 === v ? q.interpolation : v,\n      g = i.xPadding,\n      y = void 0 === g ? q.xPadding : g,\n      b = i.xOuterPadding,\n      m = void 0 === b ? q.xOuterPadding : b,\n      x = i.yOuterPadding,\n      M = void 0 === x ? q.yOuterPadding : x,\n      W = i.colors,\n      P = void 0 === W ? q.colors : W,\n      O = i.lineWidth,\n      L = void 0 === O ? q.lineWidth : O,\n      C = i.activeLineWidth,\n      S = void 0 === C ? q.activeLineWidth : C,\n      I = i.inactiveLineWidth,\n      w = void 0 === I ? q.inactiveLineWidth : I,\n      A = i.opacity,\n      z = void 0 === A ? q.opacity : A,\n      E = i.activeOpacity,\n      T = void 0 === E ? q.activeOpacity : E,\n      D = i.inactiveOpacity,\n      G = void 0 === D ? q.inactiveOpacity : D,\n      F = i.startLabel,\n      R = void 0 === F ? q.startLabel : F,\n      H = i.startLabelPadding,\n      X = void 0 === H ? q.startLabelPadding : H,\n      j = i.startLabelTextColor,\n      Y = void 0 === j ? q.startLabelTextColor : j,\n      K = i.endLabel,\n      V = void 0 === K ? q.endLabel : K,\n      Z = i.endLabelPadding,\n      $ = void 0 === Z ? q.endLabelPadding : Z,\n      _ = i.endLabelTextColor,\n      ii = void 0 === _ ? q.endLabelTextColor : _,\n      ei = i.pointComponent,\n      ti = void 0 === ei ? q.pointComponent : ei,\n      oi = i.pointSize,\n      ni = void 0 === oi ? q.pointSize : oi,\n      ri = i.activePointSize,\n      ai = void 0 === ri ? q.activePointSize : ri,\n      di = i.inactivePointSize,\n      li = void 0 === di ? q.inactivePointSize : di,\n      ci = i.pointColor,\n      si = void 0 === ci ? q.pointColor : ci,\n      ui = i.pointBorderWidth,\n      vi = void 0 === ui ? q.pointBorderWidth : ui,\n      pi = i.activePointBorderWidth,\n      hi = void 0 === pi ? q.activePointBorderWidth : pi,\n      fi = i.inactivePointBorderWidth,\n      gi = void 0 === fi ? q.inactivePointBorderWidth : fi,\n      yi = i.pointBorderColor,\n      bi = void 0 === yi ? q.pointBorderColor : yi,\n      mi = i.enableGridX,\n      xi = void 0 === mi ? q.enableGridX : mi,\n      Mi = i.enableGridY,\n      Wi = void 0 === Mi ? q.enableGridY : Mi,\n      Pi = i.axisTop,\n      Oi = void 0 === Pi ? q.axisTop : Pi,\n      Li = i.axisRight,\n      Ci = i.axisBottom,\n      Si = void 0 === Ci ? q.axisBottom : Ci,\n      Ii = i.axisLeft,\n      Bi = void 0 === Ii ? q.axisLeft : Ii,\n      ki = i.isInteractive,\n      wi = void 0 === ki ? q.isInteractive : ki,\n      Ai = i.defaultActiveSerieIds,\n      zi = void 0 === Ai ? q.defaultActiveSerieIds : Ai,\n      Ei = i.onMouseEnter,\n      Ti = i.onMouseMove,\n      Di = i.onMouseLeave,\n      Gi = i.onMouseDown,\n      Fi = i.onMouseUp,\n      Ri = i.onClick,\n      Hi = i.onDoubleClick,\n      Ui = i.useMesh,\n      Xi = void 0 === Ui ? q.useMesh : Ui,\n      ji = i.debugMesh,\n      Yi = void 0 === ji ? q.debugMesh : ji,\n      Ki = i.lineTooltip,\n      qi = void 0 === Ki ? q.lineTooltip : Ki,\n      Ji = i.pointTooltip,\n      Ni = void 0 === Ji ? q.pointTooltip : Ji,\n      Qi = i.role,\n      Vi = void 0 === Qi ? q.role : Qi,\n      Zi = i.forwardedRef,\n      $i = s(n, r, d),\n      _i = $i.margin,\n      ie = $i.innerWidth,\n      ee = $i.innerHeight,\n      te = $i.outerWidth,\n      oe = $i.outerHeight,\n      ne = U({\n        width: ie,\n        height: ee,\n        data: t,\n        interpolation: p,\n        xPadding: y,\n        xOuterPadding: m,\n        yOuterPadding: M,\n        lineWidth: L,\n        activeLineWidth: S,\n        inactiveLineWidth: w,\n        colors: P,\n        opacity: z,\n        activeOpacity: T,\n        inactiveOpacity: G,\n        pointSize: ni,\n        activePointSize: ai,\n        inactivePointSize: li,\n        pointColor: si,\n        pointBorderWidth: vi,\n        activePointBorderWidth: hi,\n        inactivePointBorderWidth: gi,\n        pointBorderColor: bi,\n        isInteractive: wi,\n        defaultActiveSerieIds: zi\n      }),\n      re = ne.series,\n      ae = ne.points,\n      de = ne.xScale,\n      le = ne.yScale,\n      ce = ne.lineGenerator,\n      se = ne.activePointIds,\n      ue = ne.activeSerieIds,\n      ve = ne.setActiveSerieIds,\n      pe = ne.setActivePointIds,\n      he = {\n        grid: null,\n        axes: null,\n        labels: null,\n        lines: null,\n        points: null,\n        mesh: null\n      };\n    c.includes(\"grid\") && (he.grid = B(h, {\n      width: ie,\n      height: ee,\n      xScale: xi ? de : null,\n      yScale: Wi ? le : null\n    }, \"grid\")), c.includes(\"axes\") && (he.axes = B(f, {\n      xScale: de,\n      yScale: le,\n      width: ie,\n      height: ee,\n      top: Oi,\n      right: Li,\n      bottom: Si,\n      left: Bi\n    }, \"axes\")), c.includes(\"lines\") && (he.lines = B(a, {\n      children: re.map(function (i) {\n        return B(J, {\n          serie: i,\n          setActiveSerieIds: ve,\n          lineGenerator: ce,\n          yStep: le.step(),\n          isInteractive: wi,\n          onMouseEnter: Ei,\n          onMouseMove: Ti,\n          onMouseLeave: Di,\n          onMouseDown: Gi,\n          onMouseUp: Fi,\n          onClick: Ri,\n          onDoubleClick: Hi,\n          lineTooltip: qi,\n          useMesh: Xi\n        }, i.id);\n      })\n    }, \"lines\")), wi && Xi && c.includes(\"mesh\") && (he.mesh = B(Q, {\n      points: ae,\n      width: ie,\n      height: ee,\n      margin: _i,\n      setActivePointIds: pe,\n      setActiveSerieIds: ve,\n      onMouseEnter: Ei,\n      onMouseMove: Ti,\n      onMouseLeave: Di,\n      onMouseDown: Gi,\n      onMouseUp: Fi,\n      onClick: Ri,\n      onDoubleClick: Hi,\n      tooltip: Ni,\n      debug: Yi\n    }, \"mesh\")), c.includes(\"points\") && (he.points = ae.map(function (i) {\n      return o(ti, {\n        key: i.id,\n        point: i\n      });\n    })), c.includes(\"labels\") && (he.labels = k(a, {\n      children: [!1 !== R && B(N, {\n        series: re,\n        getLabel: R,\n        position: \"start\",\n        padding: X,\n        color: Y\n      }), !1 !== V && B(N, {\n        series: re,\n        getLabel: V,\n        position: \"end\",\n        padding: $,\n        color: ii\n      })]\n    }, \"legends\"));\n    var fe = e(function () {\n      return {\n        innerHeight: ee,\n        innerWidth: ie,\n        lineGenerator: ce,\n        points: ae,\n        series: re,\n        xScale: de,\n        yScale: le,\n        activeSerieIds: ue,\n        activePointIds: se,\n        setActiveSerieIds: ve,\n        setActivePointIds: pe\n      };\n    }, [se, ue, pe, ve, ee, ie, ce, ae, re, de, le]);\n    return B(u, {\n      width: te,\n      height: oe,\n      margin: _i,\n      role: Vi,\n      ref: Zi,\n      children: c.map(function (i, e) {\n        var t;\n        return \"function\" == typeof i ? B(a, {\n          children: o(i, fe)\n        }, e) : null != (t = null == he ? void 0 : he[i]) ? t : null;\n      })\n    });\n  },\n  $ = r(function (i, e) {\n    var t = i.isInteractive,\n      o = void 0 === t ? q.isInteractive : t,\n      n = i.animate,\n      r = void 0 === n ? q.animate : n,\n      a = i.motionConfig,\n      d = void 0 === a ? q.motionConfig : a,\n      l = i.theme,\n      s = i.renderWrapper,\n      u = R(i, V);\n    return B(c, {\n      animate: r,\n      isInteractive: o,\n      motionConfig: d,\n      renderWrapper: s,\n      theme: l,\n      children: B(Z, F({\n        isInteractive: o\n      }, u, {\n        forwardedRef: e\n      }))\n    });\n  }),\n  _ = [\"defaultWidth\", \"defaultHeight\", \"onResize\", \"debounceResize\"],\n  ii = r(function (i, e) {\n    var t = i.defaultWidth,\n      o = i.defaultHeight,\n      n = i.onResize,\n      r = i.debounceResize,\n      a = R(i, _);\n    return B(v, {\n      defaultWidth: t,\n      defaultHeight: o,\n      onResize: n,\n      debounceResize: r,\n      children: function (i) {\n        var t = i.width,\n          o = i.height;\n        return B($, F({\n          width: t,\n          height: o\n        }, a, {\n          ref: e\n        }));\n      }\n    });\n  }),\n  ei = function (i) {\n    return \"serie\" in i;\n  },\n  ti = function (i) {\n    return \"points\" in i;\n  },\n  oi = function (i) {\n    var t = i.data,\n      o = i.width,\n      n = i.height,\n      r = i.align,\n      a = i.spacing,\n      d = i.xPadding;\n    return e(function () {\n      return function (i) {\n        var e,\n          t,\n          o = i.data,\n          n = i.width,\n          r = i.height,\n          a = i.align,\n          d = i.spacing,\n          l = i.xPadding,\n          c = new Map();\n        o.forEach(function (i) {\n          i.data.forEach(function (o) {\n            c.has(o.x) || c.set(o.x, {\n              id: o.x,\n              total: 0,\n              values: new Map(),\n              x: 0\n            });\n            var n = c.get(o.x),\n              r = n.total + o.y;\n            n.total = r, n.values.set(i.id, {\n              serieId: i.id,\n              value: o.y,\n              position: 0,\n              height: 0,\n              beforeHeight: 0\n            }), (void 0 === e || r > e) && (e = r), (void 0 === t || n.values.size > t) && (t = n.values.size);\n          });\n        });\n        var s = S(L().domain(Array.from(c.keys())).range([0, n])),\n          u = I(C().domain([0, e]).range([0, r - t * d]));\n        c.forEach(function (i, e) {\n          i.x = s(e);\n          var t = u(i.total) + i.values.size * d,\n            o = 0;\n          \"middle\" === a ? o = (r - t) / 2 : \"end\" === a && (o = r - t), Array.from(i.values.values()).sort(function (i, e) {\n            return e.value - i.value;\n          }).forEach(function (e, t, n) {\n            var r = n.filter(function (i, e) {\n                return e < t;\n              }),\n              a = r.reduce(function (i, e) {\n                return i + e.value;\n              }, 0),\n              l = i.values.get(e.serieId);\n            l.position = t, l.height = u(e.value), l.beforeHeight = u(a) + o + d * (r.length + .5);\n          });\n        });\n        var v = s.step() * Math.min(.5 * l, .5),\n          p = o.map(function (i) {\n            var e = {\n              id: i.id,\n              data: i,\n              points: [],\n              areaPoints: []\n            };\n            return i.data.forEach(function (t, o) {\n              var n = c.get(t.x),\n                r = n.values.get(i.id),\n                a = n.x,\n                d = r.beforeHeight,\n                l = r.height,\n                s = d + l / 2,\n                u = d,\n                p = d + l;\n              e.points.push({\n                x: a,\n                y: s,\n                height: l,\n                data: F({}, t)\n              }), o > 0 && e.areaPoints.push({\n                x: a - v,\n                y0: u,\n                y1: p\n              }), e.areaPoints.push({\n                x: a,\n                y0: u,\n                y1: p\n              }), o < i.data.length - 1 && e.areaPoints.push({\n                x: a + v,\n                y0: u,\n                y1: p\n              });\n            }), e;\n          });\n        return {\n          series: p,\n          xScale: s,\n          heightScale: u\n        };\n      }({\n        data: t,\n        width: o,\n        height: n,\n        align: r,\n        spacing: a,\n        xPadding: d\n      });\n    }, [t, o, n, r, a, d]);\n  },\n  ni = function (i) {\n    return e(function () {\n      return \"function\" == typeof i ? i : function () {\n        return i;\n      };\n    }, [i]);\n  },\n  ri = function (o) {\n    var n = o.data,\n      r = o.width,\n      a = o.height,\n      d = o.align,\n      l = o.spacing,\n      c = o.xPadding,\n      s = o.interpolation,\n      u = o.colors,\n      v = o.fillOpacity,\n      p = o.activeFillOpacity,\n      h = o.inactiveFillOpacity,\n      f = o.borderWidth,\n      g = o.activeBorderWidth,\n      P = o.inactiveBorderWidth,\n      O = o.borderColor,\n      L = o.borderOpacity,\n      C = o.activeBorderOpacity,\n      S = o.inactiveBorderOpacity,\n      I = o.isInteractive,\n      B = o.defaultActiveSerieIds,\n      k = i(B),\n      w = k[0],\n      A = k[1],\n      z = oi({\n        data: n,\n        width: r,\n        height: a,\n        align: d,\n        spacing: l,\n        xPadding: c\n      }),\n      E = z.series,\n      T = z.xScale,\n      D = z.heightScale,\n      G = function (i) {\n        return e(function () {\n          return m().x(function (i) {\n            return i.x;\n          }).y0(function (i) {\n            return i.y0;\n          }).y1(function (i) {\n            return i.y1;\n          }).curve(\"smooth\" === i ? y : b);\n        }, [i]);\n      }(s),\n      R = M(u, \"id\"),\n      H = function (i) {\n        var e = i.fillOpacity,\n          o = i.activeFillOpacity,\n          n = i.inactiveFillOpacity,\n          r = i.borderWidth,\n          a = i.activeBorderWidth,\n          d = i.inactiveBorderWidth,\n          l = i.borderColor,\n          c = i.borderOpacity,\n          s = i.activeBorderOpacity,\n          u = i.inactiveBorderOpacity,\n          v = i.isInteractive,\n          p = i.activeSerieIds,\n          h = ni(e),\n          f = ni(o),\n          g = ni(n),\n          y = ni(r),\n          b = ni(a),\n          m = ni(d),\n          M = x(),\n          P = W(l, M),\n          O = ni(c),\n          L = ni(s),\n          C = ni(u),\n          S = t(function (i) {\n            return {\n              fillOpacity: h(i),\n              borderWidth: y(i),\n              borderColor: P(i),\n              borderOpacity: O(i)\n            };\n          }, [h, y, P, O]),\n          I = t(function (i) {\n            return {\n              fillOpacity: f(i),\n              borderWidth: b(i),\n              borderColor: P(i),\n              borderOpacity: L(i)\n            };\n          }, [f, b, P, L]),\n          B = t(function (i) {\n            return {\n              fillOpacity: g(i),\n              borderWidth: m(i),\n              borderColor: P(i),\n              borderOpacity: C(i)\n            };\n          }, [g, m, P, C]);\n        return t(function (i) {\n          return v && 0 !== p.length ? p.includes(i.id) ? I(i) : B(i) : S(i);\n        }, [S, I, B, v, p]);\n      }({\n        fillOpacity: v,\n        activeFillOpacity: p,\n        inactiveFillOpacity: h,\n        borderWidth: f,\n        activeBorderWidth: g,\n        inactiveBorderWidth: P,\n        borderColor: O,\n        borderOpacity: L,\n        activeBorderOpacity: C,\n        inactiveBorderOpacity: S,\n        isInteractive: I,\n        activeSerieIds: w\n      });\n    return {\n      series: e(function () {\n        return E.map(function (i) {\n          var e = F({}, i, {\n            color: R(i.data)\n          });\n          return F({}, e, H(e));\n        });\n      }, [E, R, H]),\n      xScale: T,\n      heightScale: D,\n      areaGenerator: G,\n      activeSerieIds: w,\n      setActiveSerieIds: A\n    };\n  },\n  ai = function (i) {\n    var n = i.serie,\n      r = i.isInteractive,\n      a = i.onMouseEnter,\n      d = i.onMouseMove,\n      l = i.onMouseLeave,\n      c = i.onClick,\n      s = i.setActiveSerieIds,\n      u = i.tooltip,\n      v = P(),\n      p = v.showTooltipFromEvent,\n      h = v.hideTooltip,\n      f = t(function (i) {\n        p(o(u, {\n          serie: n\n        }), i), s([n.id]), null == a || a(n, i);\n      }, [n, a, p, s, u]),\n      g = t(function (i) {\n        p(o(u, {\n          serie: n\n        }), i), null == d || d(n, i);\n      }, [n, d, p, u]),\n      y = t(function (i) {\n        h(), s([]), null == l || l(n, i);\n      }, [n, l, h, s]),\n      b = t(function (i) {\n        null == c || c(n, i);\n      }, [n, c]);\n    return e(function () {\n      return {\n        onMouseEnter: r ? f : void 0,\n        onMouseMove: r ? g : void 0,\n        onMouseLeave: r ? y : void 0,\n        onClick: r ? b : void 0\n      };\n    }, [r, f, g, y, b]);\n  },\n  di = function (i) {\n    var t = i.series,\n      o = i.position,\n      n = i.padding,\n      r = i.color,\n      a = i.getLabel,\n      d = x(),\n      l = W(r, d);\n    return e(function () {\n      var i, e;\n      return \"start\" === o ? (i = \"end\", e = -1 * n) : (i = \"start\", e = n), t.map(function (t) {\n        var n = t.id;\n        \"function\" == typeof a && (n = a(t.data));\n        var r = \"start\" === o ? t.points[0] : t.points[t.points.length - 1];\n        return {\n          id: t.id,\n          label: n,\n          x: r.x + e,\n          y: r.y,\n          color: l(t),\n          opacity: t.fillOpacity,\n          serie: t,\n          textAnchor: i\n        };\n      });\n    }, [a, t, o, n, l]);\n  },\n  li = function (i) {\n    var e = i.serie,\n      t = i.areaGenerator,\n      o = i.blendMode,\n      n = i.isInteractive,\n      r = i.onMouseEnter,\n      a = i.onMouseMove,\n      c = i.onMouseLeave,\n      s = i.onClick,\n      u = i.setActiveSerieIds,\n      v = i.tooltip,\n      p = ai({\n        serie: e,\n        isInteractive: n,\n        onMouseEnter: r,\n        onMouseMove: a,\n        onMouseLeave: c,\n        onClick: s,\n        setActiveSerieIds: u,\n        tooltip: v\n      }),\n      h = d(),\n      f = h.animate,\n      g = h.config,\n      y = l(t(e.areaPoints) || \"\"),\n      b = A({\n        color: e.color,\n        fillOpacity: e.fillOpacity,\n        stroke: e.borderColor,\n        strokeOpacity: e.borderOpacity,\n        config: g,\n        immediate: !f\n      });\n    return B(z.path, {\n      \"data-testid\": \"area.\" + e.id,\n      d: y,\n      fill: e.fill ? e.fill : b.color,\n      fillOpacity: b.fillOpacity,\n      stroke: b.stroke,\n      strokeWidth: e.borderWidth,\n      strokeOpacity: b.strokeOpacity,\n      style: {\n        mixBlendMode: o\n      },\n      onMouseEnter: p.onMouseEnter,\n      onMouseMove: p.onMouseMove,\n      onMouseLeave: p.onMouseLeave,\n      onClick: p.onClick\n    });\n  },\n  ci = function (i) {\n    var e = i.getLabel,\n      t = i.series,\n      o = i.position,\n      n = i.padding,\n      r = i.color,\n      a = x(),\n      l = d(),\n      c = l.animate,\n      s = l.config,\n      u = di({\n        getLabel: e,\n        series: t,\n        position: o,\n        padding: n,\n        color: r\n      }),\n      v = T(u.length, u.map(function (i) {\n        return {\n          x: i.x,\n          y: i.y,\n          opacity: i.opacity,\n          config: s,\n          immediate: !c\n        };\n      }));\n    return B(w, {\n      children: v.map(function (i, e) {\n        var t = u[e];\n        return B(D, {\n          \"data-testid\": \"label.\" + o + \".\" + t.serie.id,\n          x: i.x,\n          y: i.y,\n          textAnchor: t.textAnchor,\n          dominantBaseline: \"central\",\n          opacity: i.opacity,\n          style: F({}, a.labels.text, {\n            fill: t.color\n          }),\n          children: t.label\n        }, t.id);\n      })\n    });\n  },\n  si = F({}, {\n    align: \"middle\",\n    layers: [\"grid\", \"axes\", \"labels\", \"areas\"],\n    interpolation: \"smooth\",\n    spacing: 0,\n    xPadding: .6,\n    colors: {\n      scheme: \"nivo\"\n    },\n    blendMode: \"normal\",\n    fillOpacity: .8,\n    activeFillOpacity: 1,\n    inactiveFillOpacity: .15,\n    borderWidth: 1,\n    activeBorderWidth: 1,\n    inactiveBorderWidth: 0,\n    borderColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", .4]]\n    },\n    borderOpacity: 1,\n    activeBorderOpacity: 1,\n    inactiveBorderOpacity: 0,\n    startLabel: !0,\n    startLabelPadding: 12,\n    startLabelTextColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1]]\n    },\n    endLabel: !0,\n    endLabelPadding: 12,\n    endLabelTextColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1]]\n    },\n    enableGridX: !0,\n    axisTop: {},\n    axisBottom: {},\n    isInteractive: !0,\n    defaultActiveSerieIds: [],\n    tooltip: function (i) {\n      var e = i.serie;\n      return B(O, {\n        id: e.id,\n        enableChip: !0,\n        color: e.color\n      });\n    },\n    role: \"img\"\n  }, {\n    defs: [],\n    fill: [],\n    animate: !0,\n    motionConfig: \"gentle\"\n  }),\n  ui = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  vi = function (i) {\n    var t = i.data,\n      n = i.align,\n      r = void 0 === n ? si.align : n,\n      d = i.width,\n      l = i.height,\n      c = i.margin,\n      v = i.layers,\n      g = void 0 === v ? si.layers : v,\n      y = i.interpolation,\n      b = void 0 === y ? si.interpolation : y,\n      m = i.spacing,\n      x = void 0 === m ? si.spacing : m,\n      M = i.xPadding,\n      W = void 0 === M ? si.xPadding : M,\n      P = i.colors,\n      O = void 0 === P ? si.colors : P,\n      L = i.blendMode,\n      C = void 0 === L ? si.blendMode : L,\n      S = i.fillOpacity,\n      I = void 0 === S ? si.fillOpacity : S,\n      w = i.activeFillOpacity,\n      A = void 0 === w ? si.activeFillOpacity : w,\n      z = i.inactiveFillOpacity,\n      E = void 0 === z ? si.inactiveFillOpacity : z,\n      T = i.defs,\n      D = void 0 === T ? si.defs : T,\n      G = i.fill,\n      F = void 0 === G ? si.fill : G,\n      R = i.borderWidth,\n      H = void 0 === R ? si.borderWidth : R,\n      U = i.activeBorderWidth,\n      X = void 0 === U ? si.activeBorderWidth : U,\n      j = i.inactiveBorderWidth,\n      Y = void 0 === j ? si.inactiveBorderWidth : j,\n      K = i.borderColor,\n      q = void 0 === K ? si.borderColor : K,\n      J = i.borderOpacity,\n      N = void 0 === J ? si.borderOpacity : J,\n      Q = i.activeBorderOpacity,\n      V = void 0 === Q ? si.activeBorderOpacity : Q,\n      Z = i.inactiveBorderOpacity,\n      $ = void 0 === Z ? si.inactiveBorderOpacity : Z,\n      _ = i.startLabel,\n      ii = void 0 === _ ? si.startLabel : _,\n      ei = i.startLabelPadding,\n      ti = void 0 === ei ? si.startLabelPadding : ei,\n      oi = i.startLabelTextColor,\n      ni = void 0 === oi ? si.startLabelTextColor : oi,\n      ai = i.endLabel,\n      di = void 0 === ai ? si.endLabel : ai,\n      ui = i.endLabelPadding,\n      vi = void 0 === ui ? si.endLabelPadding : ui,\n      pi = i.endLabelTextColor,\n      hi = void 0 === pi ? si.endLabelTextColor : pi,\n      fi = i.enableGridX,\n      gi = void 0 === fi ? si.enableGridX : fi,\n      yi = i.axisTop,\n      bi = void 0 === yi ? si.axisTop : yi,\n      mi = i.axisBottom,\n      xi = void 0 === mi ? si.axisBottom : mi,\n      Mi = i.isInteractive,\n      Wi = void 0 === Mi ? si.isInteractive : Mi,\n      Pi = i.defaultActiveSerieIds,\n      Oi = void 0 === Pi ? si.defaultActiveSerieIds : Pi,\n      Li = i.onMouseEnter,\n      Ci = i.onMouseMove,\n      Si = i.onMouseLeave,\n      Ii = i.onClick,\n      Bi = i.tooltip,\n      ki = void 0 === Bi ? si.tooltip : Bi,\n      wi = i.role,\n      Ai = void 0 === wi ? si.role : wi,\n      zi = i.forwardedRef,\n      Ei = s(d, l, c),\n      Ti = Ei.margin,\n      Di = Ei.innerWidth,\n      Gi = Ei.innerHeight,\n      Fi = Ei.outerWidth,\n      Ri = Ei.outerHeight,\n      Hi = ri({\n        data: t,\n        width: Di,\n        height: Gi,\n        align: r,\n        spacing: x,\n        xPadding: W,\n        interpolation: b,\n        colors: O,\n        fillOpacity: I,\n        activeFillOpacity: A,\n        inactiveFillOpacity: E,\n        borderWidth: H,\n        activeBorderWidth: X,\n        inactiveBorderWidth: Y,\n        borderColor: q,\n        borderOpacity: N,\n        activeBorderOpacity: V,\n        inactiveBorderOpacity: $,\n        isInteractive: Wi,\n        defaultActiveSerieIds: Oi\n      }),\n      Ui = Hi.series,\n      Xi = Hi.xScale,\n      ji = Hi.heightScale,\n      Yi = Hi.areaGenerator,\n      Ki = Hi.setActiveSerieIds,\n      qi = e(function () {\n        return p(D, Ui, F, {\n          targetKey: \"fill\"\n        });\n      }, [D, Ui, F]),\n      Ji = {\n        grid: null,\n        axes: null,\n        labels: null,\n        areas: null\n      };\n    g.includes(\"grid\") && gi && (Ji.grid = B(h, {\n      width: Di,\n      height: Gi,\n      xScale: Xi\n    }, \"grid\")), g.includes(\"axes\") && (Ji.axes = B(f, {\n      xScale: Xi,\n      yScale: ji,\n      width: Di,\n      height: Gi,\n      top: bi,\n      bottom: xi\n    }, \"axes\")), g.includes(\"areas\") && (Ji.areas = B(a, {\n      children: Ui.map(function (i) {\n        return B(li, {\n          areaGenerator: Yi,\n          serie: i,\n          blendMode: C,\n          isInteractive: Wi,\n          setActiveSerieIds: Ki,\n          onMouseEnter: Li,\n          onMouseMove: Ci,\n          onMouseLeave: Si,\n          onClick: Ii,\n          tooltip: ki\n        }, i.id);\n      })\n    }, \"areas\")), g.includes(\"labels\") && (Ji.labels = k(a, {\n      children: [!1 !== ii && B(ci, {\n        getLabel: ii,\n        series: Ui,\n        position: \"start\",\n        padding: ti,\n        color: ni\n      }), !1 !== di && B(ci, {\n        getLabel: di,\n        series: Ui,\n        position: \"end\",\n        padding: vi,\n        color: hi\n      })]\n    }, \"labels\"));\n    var Ni = e(function () {\n      return {\n        innerWidth: Di,\n        innerHeight: Gi,\n        outerWidth: Fi,\n        outerHeight: Ri,\n        series: Ui,\n        xScale: Xi,\n        areaGenerator: Yi\n      };\n    }, [Di, Gi, Fi, Ri, Ui, Xi, Yi]);\n    return B(u, {\n      defs: qi,\n      width: Fi,\n      height: Ri,\n      margin: Ti,\n      role: Ai,\n      ref: zi,\n      children: g.map(function (i, e) {\n        var t;\n        return \"function\" == typeof i ? B(a, {\n          children: o(i, Ni)\n        }, e) : null != (t = null == Ji ? void 0 : Ji[i]) ? t : null;\n      })\n    });\n  },\n  pi = r(function (i, e) {\n    var t = i.isInteractive,\n      o = void 0 === t ? si.isInteractive : t,\n      n = i.animate,\n      r = void 0 === n ? si.animate : n,\n      a = i.motionConfig,\n      d = void 0 === a ? si.motionConfig : a,\n      l = i.theme,\n      s = i.renderWrapper,\n      u = R(i, ui);\n    return B(c, {\n      animate: r,\n      isInteractive: o,\n      motionConfig: d,\n      renderWrapper: s,\n      theme: l,\n      children: B(vi, F({\n        isInteractive: o\n      }, u, {\n        forwardedRef: e\n      }))\n    });\n  }),\n  hi = [\"defaultWidth\", \"defaultHeight\", \"onResize\", \"debounceResize\"],\n  fi = r(function (i, e) {\n    var t = i.defaultWidth,\n      o = i.defaultHeight,\n      n = i.onResize,\n      r = i.debounceResize,\n      a = R(i, hi);\n    return B(v, {\n      defaultWidth: t,\n      defaultHeight: o,\n      onResize: n,\n      debounceResize: r,\n      children: function (i) {\n        var t = i.width,\n          o = i.height;\n        return B(pi, F({\n          width: t,\n          height: o\n        }, a, {\n          ref: e\n        }));\n      }\n    });\n  });\nexport { pi as AreaBump, $ as Bump, fi as ResponsiveAreaBump, ii as ResponsiveBump, si as areaBumpSvgDefaultProps, q as bumpSvgDefaultProps, ei as isBumpPoint, ti as isComputedBumpSerie, ri as useAreaBump, ai as useAreaBumpSerieHandlers, di as useAreaBumpSeriesLabels, U as useBump, j as useBumpPointHandlers, X as useBumpSerieHandlers, Y as useBumpSeriesLabels };","map":{"version":3,"names":["H","useSerieDerivedProp","i","e","U","useBump","o","n","width","r","height","a","data","d","interpolation","l","xPadding","c","xOuterPadding","s","yOuterPadding","u","lineWidth","v","activeLineWidth","p","inactiveLineWidth","h","colors","f","opacity","m","activeOpacity","P","inactiveOpacity","O","pointSize","C","activePointSize","I","inactivePointSize","B","pointColor","k","pointBorderWidth","w","activePointBorderWidth","A","inactivePointBorderWidth","z","pointBorderColor","E","isInteractive","T","defaultActiveSerieIds","D","G","R","X","j","Y","t","Set","forEach","add","x","y","Array","from","S","L","domain","range","padding","sort","step","Math","min","series","map","id","points","linePoints","serie","push","length","filter","xScale","yScale","K","q","J","N","g","curve","b","defined","Q","M","V","activeSerieIds","includes","Z","F","color","$","_","W","ii","ei","activePointIds","size","borderWidth","ti","isActive","isInactive","borderColor","lineGenerator","setActiveSerieIds","setActivePointIds","useBumpSerieHandlers","onMouseEnter","onMouseMove","onMouseLeave","onMouseDown","onMouseUp","onClick","onDoubleClick","lineTooltip","showTooltipFromEvent","hideTooltip","useBumpPointHandlers","point","pointTooltip","useBumpSeriesLabels","position","getLabel","label","textAnchor","pointerEvents","layers","scheme","startLabel","startLabelPadding","startLabelTextColor","endLabel","endLabelPadding","endLabelTextColor","modifiers","enableGridX","enableGridY","axisTop","axisRight","axisBottom","axisLeft","enableChip","children","useMesh","debugMesh","role","renderWrapper","pointComponent","animate","config","radius","immediate","circle","cx","cy","max","fill","strokeWidth","stroke","style","motionConfig","Line","yStep","path","strokeLinecap","strokeOpacity","LinesLabels","dominantBaseline","labels","text","margin","tooltip","debug","showTooltipAt","left","top","nodes","InnerBump","oi","ni","ri","ai","di","li","ci","si","ui","vi","pi","hi","fi","gi","yi","bi","mi","xi","Mi","Wi","Pi","Oi","Li","Ci","Si","Ii","Bi","ki","wi","Ai","zi","Ei","Ti","Di","Gi","Fi","Ri","Hi","Ui","Xi","ji","Yi","Ki","qi","Ji","Ni","Qi","Vi","Zi","forwardedRef","$i","_i","ie","innerWidth","ee","innerHeight","te","outerWidth","oe","outerHeight","ne","re","ae","de","le","ce","se","ue","ve","pe","he","grid","axes","lines","mesh","right","bottom","key","fe","ref","theme","defaultWidth","defaultHeight","onResize","debounceResize","isBumpPoint","isComputedBumpSerie","useAreaBumpSeries","align","spacing","Map","has","set","total","values","get","serieId","value","beforeHeight","keys","reduce","areaPoints","y0","y1","heightScale","useAreaBump","fillOpacity","activeFillOpacity","inactiveFillOpacity","activeBorderWidth","inactiveBorderWidth","borderOpacity","activeBorderOpacity","inactiveBorderOpacity","areaGenerator","useAreaBumpSerieHandlers","useAreaBumpSeriesLabels","Area","blendMode","mixBlendMode","AreasLabels","defs","InnerAreaBump","targetKey","areas","AreaBump","Bump","ResponsiveAreaBump","ResponsiveBump","areaBumpSvgDefaultProps","bumpSvgDefaultProps"],"sources":["C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\bump\\compute.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\bump\\hooks.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\bump\\Point.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\bump\\defaults.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\bump\\LineTooltip.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\bump\\PointTooltip.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\bump\\Line.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\bump\\LinesLabels.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\bump\\Mesh.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\bump\\Bump.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\bump\\ResponsiveBump.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\bump\\types.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\area-bump\\hooks.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\area-bump\\compute.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\area-bump\\Area.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\area-bump\\AreasLabels.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\area-bump\\defaults.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\area-bump\\AreaTooltip.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\area-bump\\AreaBump.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\bump\\src\\area-bump\\ResponsiveAreaBump.tsx"],"sourcesContent":["import { scalePoint } from 'd3-scale'\nimport { castPointScale } from '@nivo/scales'\nimport {\n    BumpDataProps,\n    BumpDatum,\n    BumpComputedSerie,\n    BumpSeriePoint,\n    BumpSerieExtraProps,\n} from './types'\n\nexport const computeSeries = <Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps>({\n    width,\n    height,\n    data,\n    xPadding,\n    xOuterPadding,\n    yOuterPadding,\n}: {\n    width: number\n    height: number\n    data: BumpDataProps<Datum, ExtraProps>['data']\n    xPadding: number\n    xOuterPadding: number\n    yOuterPadding: number\n}) => {\n    const xValuesSet = new Set<Datum['x']>()\n    const yValuesSet = new Set<number>()\n\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            xValuesSet.add(datum.x)\n            if (datum.y !== null) {\n                yValuesSet.add(datum.y)\n            }\n        })\n    })\n\n    const xValues: Datum['x'][] = Array.from(xValuesSet)\n    const xScale = castPointScale<Datum['x']>(\n        scalePoint<Datum['x']>().domain(xValues).range([0, width]).padding(xOuterPadding)\n    )\n\n    const yValues: number[] = Array.from(yValuesSet).sort((a, b) => a - b)\n    const yScale = castPointScale<number>(\n        scalePoint<number>().domain(yValues).range([0, height]).padding(yOuterPadding)\n    )\n\n    const linePointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series: Omit<BumpComputedSerie<Datum, ExtraProps>, 'color' | 'opacity' | 'lineWidth'>[] =\n        data.map(rawSerie => {\n            const serie: Omit<\n                BumpComputedSerie<Datum, ExtraProps>,\n                'color' | 'opacity' | 'lineWidth'\n            > = {\n                id: rawSerie.id,\n                data: rawSerie,\n                points: [],\n                linePoints: [],\n            }\n\n            rawSerie.data.forEach((datum, i) => {\n                let x = null\n                let y = null\n\n                if (datum.y !== null) {\n                    x = xScale(datum.x)!\n                    y = yScale(datum.y)!\n                }\n\n                const point: BumpSeriePoint<Datum, ExtraProps> = {\n                    id: `${rawSerie.id}.${i}`,\n                    serie: rawSerie,\n                    data: datum,\n                    x: x as number,\n                    y,\n                }\n                serie.points.push(point)\n\n                // only add pre transition point if the datum is not empty\n                if (point.x !== null) {\n                    if (i === 0) {\n                        serie.linePoints.push([0, point.y])\n                    } else {\n                        serie.linePoints.push([point.x - linePointPadding, point.y])\n                    }\n                }\n\n                serie.linePoints.push([point.x, point.y])\n\n                // only add post transition point if the datum is not empty\n                if (x !== null) {\n                    if (i === rawSerie.data.length - 1 && x) {\n                        serie.linePoints.push([width, point.y])\n                    } else {\n                        serie.linePoints.push([point.x + linePointPadding, point.y])\n                    }\n                }\n\n                // remove points having null coordinates\n                serie.points = serie.points.filter(point => point.x !== null)\n            })\n\n            return serie\n        })\n\n    return {\n        series,\n        xScale,\n        yScale,\n    }\n}\n","import { createElement, useMemo, useCallback, useState, MouseEvent } from 'react'\nimport { line as d3Line, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@nivo/theming'\nimport { useOrdinalColorScale, useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    BumpInterpolation,\n    BumpCommonProps,\n    BumpDatum,\n    DefaultBumpDatum,\n    BumpDataProps,\n    BumpComputedSerie,\n    BumpPoint,\n    BumpLabel,\n    BumpLabelData,\n    BumpSerieExtraProps,\n    BumpPointMouseHandler,\n    BumpSerieMouseHandler,\n} from './types'\nimport { computeSeries } from './compute'\n\nconst useLineGenerator = (interpolation: BumpInterpolation) =>\n    useMemo(\n        () =>\n            d3Line<[number, number | null]>()\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n                .defined(d => d[0] !== null && d[1] !== null),\n\n        [interpolation]\n    )\n\nconst useSerieDerivedProp = <Target, Output extends string | number>(\n    instruction: ((target: Target) => Output) | Output\n): ((target: Target) => Output) =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nconst useSerieStyle = <Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps>({\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    isInteractive,\n    activeSerieIds,\n}: {\n    lineWidth: BumpCommonProps<Datum, ExtraProps>['lineWidth']\n    activeLineWidth: BumpCommonProps<Datum, ExtraProps>['activeLineWidth']\n    inactiveLineWidth: BumpCommonProps<Datum, ExtraProps>['inactiveLineWidth']\n    opacity: BumpCommonProps<Datum, ExtraProps>['opacity']\n    activeOpacity: BumpCommonProps<Datum, ExtraProps>['activeOpacity']\n    inactiveOpacity: BumpCommonProps<Datum, ExtraProps>['inactiveOpacity']\n    isInteractive: BumpCommonProps<Datum, ExtraProps>['isInteractive']\n    activeSerieIds: string[]\n}) => {\n    type Serie = Omit<BumpComputedSerie<Datum, ExtraProps>, 'color' | 'opacity' | 'lineWidth'>\n\n    const getLineWidth = useSerieDerivedProp<Serie, number>(lineWidth)\n    const getActiveLineWidth = useSerieDerivedProp<Serie, number>(activeLineWidth)\n    const getInactiveLineWidth = useSerieDerivedProp<Serie, number>(inactiveLineWidth)\n\n    const getOpacity = useSerieDerivedProp<Serie, number>(opacity)\n    const getActiveOpacity = useSerieDerivedProp<Serie, number>(activeOpacity)\n    const getInactiveOpacity = useSerieDerivedProp<Serie, number>(inactiveOpacity)\n\n    const getNormalStyle = useCallback(\n        (serie: Serie) => ({\n            opacity: getOpacity(serie),\n            lineWidth: getLineWidth(serie),\n        }),\n        [getLineWidth, getOpacity]\n    )\n    const getActiveStyle = useCallback(\n        (serie: Serie) => ({\n            opacity: getActiveOpacity(serie),\n            lineWidth: getActiveLineWidth(serie),\n        }),\n        [getActiveLineWidth, getActiveOpacity]\n    )\n    const getInactiveStyle = useCallback(\n        (serie: Serie) => ({\n            opacity: getInactiveOpacity(serie),\n            lineWidth: getInactiveLineWidth(serie),\n        }),\n        [getInactiveLineWidth, getInactiveOpacity]\n    )\n\n    return useCallback(\n        (serie: Serie) => {\n            if (!isInteractive || activeSerieIds.length === 0) return getNormalStyle(serie)\n            if (activeSerieIds.includes(serie.id)) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        },\n        [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, activeSerieIds]\n    )\n}\n\nconst usePointStyle = <Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps>({\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    isInteractive,\n    activePointIds,\n}: {\n    pointSize: BumpCommonProps<Datum, ExtraProps>['pointSize']\n    activePointSize: BumpCommonProps<Datum, ExtraProps>['activePointSize']\n    inactivePointSize: BumpCommonProps<Datum, ExtraProps>['inactivePointSize']\n    pointBorderWidth: BumpCommonProps<Datum, ExtraProps>['pointBorderWidth']\n    activePointBorderWidth: BumpCommonProps<Datum, ExtraProps>['activePointBorderWidth']\n    inactivePointBorderWidth: BumpCommonProps<Datum, ExtraProps>['inactivePointBorderWidth']\n    isInteractive: BumpCommonProps<Datum, ExtraProps>['isInteractive']\n    activePointIds: string[]\n}) => {\n    type Point = Omit<BumpPoint<Datum, ExtraProps>, 'size' | 'borderWidth'>\n\n    const getSize = useSerieDerivedProp(pointSize)\n    const getActiveSize = useSerieDerivedProp(activePointSize)\n    const getInactiveSize = useSerieDerivedProp(inactivePointSize)\n\n    const getBorderWidth = useSerieDerivedProp(pointBorderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activePointBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactivePointBorderWidth)\n\n    const getNormalStyle = useCallback(\n        (point: Point) => ({\n            size: getSize(point),\n            borderWidth: getBorderWidth(point),\n        }),\n        [getSize, getBorderWidth]\n    )\n    const getActiveStyle = useCallback(\n        (point: Point) => ({\n            size: getActiveSize(point),\n            borderWidth: getActiveBorderWidth(point),\n        }),\n        [getActiveSize, getActiveBorderWidth]\n    )\n    const getInactiveStyle = useCallback(\n        (point: Point) => ({\n            size: getInactiveSize(point),\n            borderWidth: getInactiveBorderWidth(point),\n        }),\n        [getInactiveSize, getInactiveBorderWidth]\n    )\n\n    return useCallback(\n        (point: Point) => {\n            if (!isInteractive || activePointIds.length === 0) return getNormalStyle(point)\n            if (activePointIds.includes(point.id)) return getActiveStyle(point)\n            return getInactiveStyle(point)\n        },\n        [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, activePointIds]\n    )\n}\n\nexport const useBump = <\n    Datum extends BumpDatum = DefaultBumpDatum,\n    ExtraProps extends BumpSerieExtraProps = Record<string, never>,\n>({\n    width,\n    height,\n    data,\n    interpolation,\n    xPadding,\n    xOuterPadding,\n    yOuterPadding,\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    colors,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointColor,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    pointBorderColor,\n    isInteractive,\n    defaultActiveSerieIds,\n}: {\n    width: number\n    height: number\n    data: BumpDataProps<Datum, ExtraProps>['data']\n    interpolation: BumpCommonProps<Datum, ExtraProps>['interpolation']\n    xPadding: BumpCommonProps<Datum, ExtraProps>['xPadding']\n    xOuterPadding: BumpCommonProps<Datum, ExtraProps>['xOuterPadding']\n    yOuterPadding: BumpCommonProps<Datum, ExtraProps>['yOuterPadding']\n    lineWidth: BumpCommonProps<Datum, ExtraProps>['lineWidth']\n    activeLineWidth: BumpCommonProps<Datum, ExtraProps>['activeLineWidth']\n    inactiveLineWidth: BumpCommonProps<Datum, ExtraProps>['inactiveLineWidth']\n    colors: BumpCommonProps<Datum, ExtraProps>['colors']\n    opacity: BumpCommonProps<Datum, ExtraProps>['opacity']\n    activeOpacity: BumpCommonProps<Datum, ExtraProps>['activeOpacity']\n    inactiveOpacity: BumpCommonProps<Datum, ExtraProps>['inactiveOpacity']\n    pointSize: BumpCommonProps<Datum, ExtraProps>['pointSize']\n    activePointSize: BumpCommonProps<Datum, ExtraProps>['activePointSize']\n    inactivePointSize: BumpCommonProps<Datum, ExtraProps>['inactivePointSize']\n    pointColor: BumpCommonProps<Datum, ExtraProps>['pointColor']\n    pointBorderWidth: BumpCommonProps<Datum, ExtraProps>['pointBorderWidth']\n    activePointBorderWidth: BumpCommonProps<Datum, ExtraProps>['activePointBorderWidth']\n    inactivePointBorderWidth: BumpCommonProps<Datum, ExtraProps>['inactivePointBorderWidth']\n    pointBorderColor: BumpCommonProps<Datum, ExtraProps>['pointBorderColor']\n    isInteractive: BumpCommonProps<Datum, ExtraProps>['isInteractive']\n    defaultActiveSerieIds: string[]\n}) => {\n    const [activeSerieIds, setActiveSerieIds] = useState<string[]>(defaultActiveSerieIds)\n    const [activePointIds, setActivePointIds] = useState<string[]>(defaultActiveSerieIds)\n\n    const {\n        series: rawSeries,\n        xScale,\n        yScale,\n    } = useMemo(\n        () =>\n            computeSeries<Datum, ExtraProps>({\n                width,\n                height,\n                data,\n                xPadding,\n                xOuterPadding,\n                yOuterPadding,\n            }),\n        [width, height, data, xPadding, xOuterPadding, yOuterPadding]\n    )\n\n    const lineGenerator = useLineGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle<Datum, ExtraProps>({\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        isInteractive,\n        activeSerieIds,\n    })\n\n    const series: BumpComputedSerie<Datum, ExtraProps>[] = useMemo(\n        () =>\n            rawSeries.map(serie => ({\n                ...serie,\n                color: getColor(serie.data),\n                ...getSerieStyle(serie),\n            })),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const getPointStyle = usePointStyle<Datum, ExtraProps>({\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        isInteractive,\n        activePointIds,\n    })\n    const points: BumpPoint<Datum, ExtraProps>[] = useMemo(() => {\n        const pts: BumpPoint<Datum, ExtraProps>[] = []\n        series.forEach(serie => {\n            serie.points.forEach(rawPoint => {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-expect-error\n                const point: BumpPoint<Datum, ExtraProps> = {\n                    ...rawPoint,\n                    serie,\n                    isActive: activeSerieIds.includes(serie.id),\n                    isInactive: activeSerieIds.length > 0 && !activeSerieIds.includes(serie.id),\n                }\n                point.color = getPointColor(point)\n                point.borderColor = getPointBorderColor(point)\n\n                pts.push({\n                    ...point,\n                    ...getPointStyle(point),\n                })\n            })\n        })\n\n        return pts\n    }, [series, activeSerieIds, getPointColor, getPointBorderColor, getPointStyle])\n\n    return {\n        xScale,\n        yScale,\n        series,\n        points,\n        lineGenerator,\n        activeSerieIds,\n        setActiveSerieIds,\n        activePointIds,\n        setActivePointIds,\n    }\n}\n\nexport const useBumpSerieHandlers = <\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n>({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n    setActiveSerieIds,\n    lineTooltip: tooltip,\n}: {\n    serie: BumpComputedSerie<Datum, ExtraProps>\n    isInteractive: BumpCommonProps<Datum, ExtraProps>['isInteractive']\n    onMouseEnter?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onMouseMove?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onMouseLeave?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onMouseDown?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onMouseUp?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onClick?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onDoubleClick?: BumpSerieMouseHandler<Datum, ExtraProps>\n    setActiveSerieIds: (serieIds: string[]) => void\n    lineTooltip: BumpCommonProps<Datum, ExtraProps>['lineTooltip']\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { serie }), event)\n            setActiveSerieIds([serie.id])\n            onMouseEnter?.(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setActiveSerieIds, tooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { serie }), event)\n            onMouseMove?.(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveSerieIds([])\n            onMouseLeave?.(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setActiveSerieIds]\n    )\n\n    const handleMouseDown = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            onMouseDown?.(serie, event)\n        },\n        [serie, onMouseDown]\n    )\n\n    const handleMouseUp = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            onMouseUp?.(serie, event)\n        },\n        [serie, onMouseUp]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            onClick?.(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handleDoubleClick = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            onDoubleClick?.(serie, event)\n        },\n        [serie, onDoubleClick]\n    )\n\n    return useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onMouseDown: isInteractive ? handleMouseDown : undefined,\n            onMouseUp: isInteractive ? handleMouseUp : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n            onDoubleClick: isInteractive ? handleDoubleClick : undefined,\n        }),\n        [\n            isInteractive,\n            handleMouseEnter,\n            handleMouseMove,\n            handleMouseLeave,\n            handleMouseDown,\n            handleMouseUp,\n            handleClick,\n            handleDoubleClick,\n        ]\n    )\n}\n\nexport const useBumpPointHandlers = <\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n>({\n    point,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n    setActivePointIds,\n    setActiveSerieIds,\n    pointTooltip: tooltip,\n}: {\n    point: BumpPoint<Datum, ExtraProps>\n    isInteractive: BumpCommonProps<Datum, ExtraProps>['isInteractive']\n    onMouseEnter?: BumpPointMouseHandler<Datum, ExtraProps>\n    onMouseMove?: BumpPointMouseHandler<Datum, ExtraProps>\n    onMouseLeave?: BumpPointMouseHandler<Datum, ExtraProps>\n    onMouseDown?: BumpPointMouseHandler<Datum, ExtraProps>\n    onMouseUp?: BumpPointMouseHandler<Datum, ExtraProps>\n    onClick?: BumpPointMouseHandler<Datum, ExtraProps>\n    onDoubleClick?: BumpPointMouseHandler<Datum, ExtraProps>\n    setActivePointIds: (pointIds: string[]) => void\n    setActiveSerieIds: (pointIds: string[]) => void\n    pointTooltip: BumpCommonProps<Datum, ExtraProps>['pointTooltip']\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { point }), event)\n            setActivePointIds([point.id])\n            setActiveSerieIds([point.serie.id])\n            onMouseEnter?.(point, event)\n        },\n        [showTooltipFromEvent, tooltip, point, setActivePointIds, setActiveSerieIds, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { point }), event)\n            onMouseMove?.(point, event)\n        },\n        [showTooltipFromEvent, tooltip, point, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActivePointIds([])\n            setActiveSerieIds([])\n            onMouseLeave?.(point, event)\n        },\n        [hideTooltip, setActivePointIds, setActiveSerieIds, onMouseLeave, point]\n    )\n\n    const handleMouseDown = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            onMouseDown?.(point, event)\n        },\n        [point, onMouseDown]\n    )\n\n    const handleMouseUp = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            onMouseUp?.(point, event)\n        },\n        [point, onMouseUp]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            onClick?.(point, event)\n        },\n        [point, onClick]\n    )\n\n    const handleDoubleClick = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            onDoubleClick?.(point, event)\n        },\n        [point, onDoubleClick]\n    )\n\n    return useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onMouseDown: isInteractive ? handleMouseDown : undefined,\n            onMouseUp: isInteractive ? handleMouseUp : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n            onDoubleClick: isInteractive ? handleDoubleClick : undefined,\n        }),\n        [\n            isInteractive,\n            handleMouseEnter,\n            handleMouseMove,\n            handleMouseLeave,\n            handleMouseDown,\n            handleMouseUp,\n            handleClick,\n            handleDoubleClick,\n        ]\n    )\n}\n\nexport const useBumpSeriesLabels = <\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n>({\n    series,\n    position,\n    padding,\n    color,\n    getLabel,\n}: {\n    series: BumpComputedSerie<Datum, ExtraProps>[]\n    position: 'start' | 'end'\n    padding: number\n    color: InheritedColorConfig<BumpComputedSerie<Datum, ExtraProps>>\n    getLabel: Exclude<BumpLabel<Datum, ExtraProps>, false>\n}) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor: 'start' | 'end'\n        let signedPadding: number\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        const labels: BumpLabelData<Datum, ExtraProps>[] = []\n        series.forEach(serie => {\n            let label = serie.id\n            if (typeof getLabel === 'function') {\n                label = getLabel(serie.data)\n            }\n\n            const point =\n                position === 'start'\n                    ? serie.linePoints[0]\n                    : serie.linePoints[serie.linePoints.length - 1]\n\n            // exclude labels for series having missing data at the beginning/end\n            if (point?.[0] === null || point?.[1] === null) {\n                return\n            }\n\n            labels.push({\n                id: serie.id,\n                label,\n                x: point[0] + signedPadding,\n                y: point[1],\n                color: getColor(serie) as string,\n                opacity: serie.opacity,\n                serie,\n                textAnchor,\n            })\n        })\n\n        return labels\n    }, [series, position, padding, getColor, getLabel])\n}\n","import { SVGAttributes } from 'react'\nimport { useSpring, animated, to } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { BumpDatum, BumpPoint, BumpSerieExtraProps } from './types'\n\nconst pointStyle: SVGAttributes<SVGCircleElement>['style'] = {\n    pointerEvents: 'none',\n}\n\nexport interface PointProps<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> {\n    point: BumpPoint<Datum, ExtraProps>\n}\n\nexport const Point = <Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps>({\n    point,\n}: PointProps<Datum, ExtraProps>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring<{\n        x: number\n        y: number\n        radius: number\n        color: string\n        borderWidth: number\n    }>({\n        x: point.x,\n        y: point.y,\n        radius: point.size / 2,\n        color: point.color,\n        borderWidth: point.borderWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            data-testid={`point.${point.serie.id}.${point.data.x}`}\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={to(animatedProps.radius, v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            strokeWidth={animatedProps.borderWidth}\n            stroke={point.borderColor}\n            style={pointStyle}\n        />\n    )\n}\n","import { LineTooltip } from './LineTooltip'\nimport { Point } from './Point'\nimport { BumpCommonProps, DefaultBumpDatum, BumpSvgPropsWithDefaults } from './types'\nimport PointTooltip from './PointTooltip'\n\nconst commonDefaultProps: BumpCommonProps<DefaultBumpDatum, Record<string, unknown>> = {\n    layers: ['grid', 'axes', 'labels', 'lines', 'points', 'mesh'],\n    interpolation: 'smooth',\n    xPadding: 0.6,\n    xOuterPadding: 0.5,\n    yOuterPadding: 0.5,\n    colors: { scheme: 'nivo' },\n    lineWidth: 2,\n    activeLineWidth: 4,\n    inactiveLineWidth: 1,\n    opacity: 1,\n    activeOpacity: 1,\n    inactiveOpacity: 0.3,\n    startLabel: false,\n    startLabelPadding: 16,\n    startLabelTextColor: { from: 'color' },\n    endLabel: true,\n    endLabelPadding: 16,\n    endLabelTextColor: { from: 'color' },\n    pointSize: 6,\n    activePointSize: 8,\n    inactivePointSize: 4,\n    pointColor: { from: 'serie.color' },\n    pointBorderWidth: 0,\n    activePointBorderWidth: 0,\n    inactivePointBorderWidth: 0,\n    pointBorderColor: { from: 'serie.color', modifiers: [['darker', 1.4]] },\n    enableGridX: true,\n    enableGridY: true,\n    axisTop: {},\n    axisRight: null,\n    axisBottom: {},\n    axisLeft: {},\n    isInteractive: true,\n    defaultActiveSerieIds: [],\n    lineTooltip: LineTooltip,\n    pointTooltip: PointTooltip,\n    useMesh: false,\n    debugMesh: false,\n    role: 'img',\n    renderWrapper: true,\n}\n\nexport const bumpSvgDefaultProps: Omit<\n    BumpSvgPropsWithDefaults<DefaultBumpDatum, Record<string, unknown>>,\n    'width' | 'height' | 'data'\n> = {\n    ...commonDefaultProps,\n    pointComponent: Point,\n    animate: true,\n    motionConfig: 'gentle',\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { BumpComputedSerie, BumpDatum, BumpSerieExtraProps } from './types'\n\ninterface LineTooltipProps<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> {\n    serie: BumpComputedSerie<Datum, ExtraProps>\n}\n\nexport const LineTooltip = <Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps>({\n    serie,\n}: LineTooltipProps<Datum, ExtraProps>) => (\n    <BasicTooltip\n        data-testid={`tooltip.${serie.data.id}`}\n        id={serie.data.id}\n        enableChip={true}\n        color={serie.color}\n    />\n)\n","import { memo } from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { BumpDatum, BumpPoint, BumpSerieExtraProps } from './types'\n\ninterface PointTooltipProps<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> {\n    point: BumpPoint<Datum, ExtraProps>\n}\n\nconst LinePointTooltip = <Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps>({\n    point,\n}: PointTooltipProps<Datum, ExtraProps>) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.x}</strong>, y: <strong>{point.data.y}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serie.color}\n        />\n    )\n}\n\nexport default memo(LinePointTooltip)\n","import { useSpring, animated } from '@react-spring/web'\nimport { Line as D3Line } from 'd3-shape'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport {\n    BumpCommonProps,\n    BumpComputedSerie,\n    BumpDatum,\n    BumpSerieExtraProps,\n    BumpSerieMouseHandler,\n} from './types'\nimport { useBumpSerieHandlers } from './hooks'\n\ninterface LineProps<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> {\n    serie: BumpComputedSerie<Datum, ExtraProps>\n    lineGenerator: D3Line<[number, number | null]>\n    yStep: number\n    isInteractive: BumpCommonProps<Datum, ExtraProps>['isInteractive']\n    onMouseEnter?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onMouseMove?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onMouseLeave?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onMouseDown?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onMouseUp?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onClick?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onDoubleClick?: BumpSerieMouseHandler<Datum, ExtraProps>\n    setActiveSerieIds: (serieIds: string[]) => void\n    lineTooltip: BumpCommonProps<Datum, ExtraProps>['lineTooltip']\n    useMesh: BumpCommonProps<Datum, ExtraProps>['useMesh']\n}\n\nexport const Line = <Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps>({\n    serie,\n    lineGenerator,\n    yStep,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n    setActiveSerieIds,\n    lineTooltip,\n    useMesh,\n}: LineProps<Datum, ExtraProps>) => {\n    const handlers = useBumpSerieHandlers<Datum, ExtraProps>({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onMouseDown,\n        onMouseUp,\n        onClick,\n        onDoubleClick,\n        setActiveSerieIds,\n        lineTooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const linePath = lineGenerator(serie.linePoints) || ''\n\n    const animatedPath = useAnimatedPath(linePath)\n    const animatedProps = useSpring<{\n        color: string\n        opacity: number\n        lineWidth: number\n    }>({\n        color: serie.color,\n        opacity: serie.opacity,\n        lineWidth: serie.lineWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            <animated.path\n                data-testid={`line.${serie.id}`}\n                fill=\"none\"\n                d={animatedPath}\n                stroke={animatedProps.color}\n                strokeWidth={animatedProps.lineWidth}\n                strokeLinecap=\"round\"\n                strokeOpacity={animatedProps.opacity}\n                style={{ pointerEvents: 'none' }}\n            />\n            {isInteractive && !useMesh && (\n                <path\n                    data-testid={`line.${serie.id}.interactive`}\n                    fill=\"none\"\n                    stroke=\"red\"\n                    strokeOpacity={0}\n                    strokeWidth={yStep}\n                    d={linePath}\n                    strokeLinecap=\"butt\"\n                    onMouseEnter={handlers.onMouseEnter}\n                    onMouseMove={handlers.onMouseMove}\n                    onMouseLeave={handlers.onMouseLeave}\n                    onMouseDown={handlers.onMouseDown}\n                    onMouseUp={handlers.onMouseUp}\n                    onClick={handlers.onClick}\n                    onDoubleClick={handlers.onDoubleClick}\n                />\n            )}\n        </>\n    )\n}\n","import { useSprings } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport { Text } from '@nivo/text'\nimport { BumpComputedSerie, BumpDatum, BumpLabel, BumpSerieExtraProps } from './types'\nimport { useBumpSeriesLabels } from './hooks'\n\ninterface LineLabelsProps<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> {\n    series: BumpComputedSerie<Datum, ExtraProps>[]\n    getLabel: Exclude<BumpLabel<Datum, ExtraProps>, false>\n    position: 'start' | 'end'\n    padding: number\n    color: InheritedColorConfig<BumpComputedSerie<Datum, ExtraProps>>\n}\n\nexport const LinesLabels = <Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps>({\n    series,\n    getLabel,\n    position,\n    padding,\n    color,\n}: LineLabelsProps<Datum, ExtraProps>) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useBumpSeriesLabels<Datum, ExtraProps>({\n        series,\n        getLabel,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings<{\n        x: number\n        y: number\n        opacity: number\n    }>(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return (\n        <>\n            {springs.map((animatedProps, index) => {\n                const label = labels[index]\n\n                return (\n                    <Text\n                        data-testid={`label.${position}.${label.serie.id}`}\n                        key={label.id}\n                        x={animatedProps.x}\n                        y={animatedProps.y}\n                        textAnchor={label.textAnchor}\n                        dominantBaseline=\"central\"\n                        opacity={animatedProps.opacity}\n                        style={{\n                            ...theme.labels.text,\n                            fill: label.color,\n                        }}\n                    >\n                        {label.label}\n                    </Text>\n                )\n            })}\n        </>\n    )\n}\n","import { MouseEvent } from 'react'\nimport { createElement, memo, useCallback } from 'react'\nimport { Margin } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\nimport {\n    BumpCommonProps,\n    BumpDatum,\n    BumpPoint,\n    BumpPointMouseHandler,\n    BumpSerieExtraProps,\n} from './types'\n\ninterface MeshProps<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> {\n    points: BumpPoint<Datum, ExtraProps>[]\n    width: number\n    height: number\n    margin: Margin\n    setActivePointIds: (ids: string[]) => void\n    setActiveSerieIds: (ids: string[]) => void\n    onMouseEnter?: BumpPointMouseHandler<Datum, ExtraProps>\n    onMouseMove?: BumpPointMouseHandler<Datum, ExtraProps>\n    onMouseLeave?: BumpPointMouseHandler<Datum, ExtraProps>\n    onMouseDown?: BumpPointMouseHandler<Datum, ExtraProps>\n    onMouseUp?: BumpPointMouseHandler<Datum, ExtraProps>\n    onClick?: BumpPointMouseHandler<Datum, ExtraProps>\n    onDoubleClick?: BumpPointMouseHandler<Datum, ExtraProps>\n    tooltip: BumpCommonProps<Datum, ExtraProps>['pointTooltip']\n    debug: boolean\n}\n\nconst InnerMesh = <Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps>({\n    points,\n    width,\n    height,\n    margin,\n    setActivePointIds,\n    setActiveSerieIds,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n    tooltip,\n    debug,\n}: MeshProps<Datum, ExtraProps>) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point: BumpPoint<Datum, ExtraProps>, event: MouseEvent) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y ?? 0 + margin.top],\n                'top'\n            )\n            setActivePointIds([point.id])\n            setActiveSerieIds([point.serie.id])\n            onMouseEnter?.(point, event)\n        },\n        [\n            showTooltipAt,\n            tooltip,\n            margin.left,\n            margin.top,\n            setActivePointIds,\n            setActiveSerieIds,\n            onMouseEnter,\n        ]\n    )\n\n    const handleMouseMove = useCallback(\n        (point: BumpPoint<Datum, ExtraProps>, event: MouseEvent) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y ?? 0 + margin.top],\n                'top'\n            )\n            setActivePointIds([point.id])\n            setActiveSerieIds([point.serie.id])\n            onMouseMove?.(point, event)\n        },\n        [\n            showTooltipAt,\n            tooltip,\n            margin.left,\n            margin.top,\n            setActivePointIds,\n            setActiveSerieIds,\n            onMouseMove,\n        ]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point: BumpPoint<Datum, ExtraProps>, event: MouseEvent) => {\n            hideTooltip()\n            setActivePointIds([])\n            setActiveSerieIds([])\n            onMouseLeave?.(point, event)\n        },\n        [hideTooltip, onMouseLeave, setActivePointIds, setActiveSerieIds]\n    )\n\n    const handleMouseDown = useCallback(\n        (point: BumpPoint<Datum, ExtraProps>, event: MouseEvent) => {\n            onMouseDown?.(point, event)\n        },\n        [onMouseDown]\n    )\n\n    const handleMouseUp = useCallback(\n        (point: BumpPoint<Datum, ExtraProps>, event: MouseEvent) => {\n            onMouseUp?.(point, event)\n        },\n        [onMouseUp]\n    )\n\n    const handleClick = useCallback(\n        (point: BumpPoint<Datum, ExtraProps>, event: MouseEvent) => {\n            onClick?.(point, event)\n        },\n        [onClick]\n    )\n\n    const handleDoubleClick = useCallback(\n        (point: BumpPoint<Datum, ExtraProps>, event: MouseEvent) => {\n            onDoubleClick?.(point, event)\n        },\n        [onDoubleClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onMouseDown={handleMouseDown}\n            onMouseUp={handleMouseUp}\n            onClick={handleClick}\n            onDoubleClick={handleDoubleClick}\n            debug={debug}\n        />\n    )\n}\n\nexport const Mesh = memo(InnerMesh) as typeof InnerMesh\n","import { createElement, useMemo, Fragment, ReactNode, forwardRef, ReactElement, Ref } from 'react'\nimport { Container, useDimensions, SvgWrapper, WithChartRef } from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport {\n    BumpCustomLayerProps,\n    BumpDatum,\n    BumpLayerId,\n    BumpPointMouseHandler,\n    BumpSerieExtraProps,\n    BumpSerieMouseHandler,\n    BumpSvgProps,\n    BumpSvgPropsWithDefaults,\n    DefaultBumpDatum,\n} from './types'\nimport { useBump } from './hooks'\nimport { bumpSvgDefaultProps } from './defaults'\nimport { Line } from './Line'\nimport { LinesLabels } from './LinesLabels'\nimport { Mesh } from './Mesh'\n\ntype InnerBumpProps<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> = Omit<\n    BumpSvgProps<Datum, ExtraProps>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBump = <Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps>({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    layers = bumpSvgDefaultProps.layers as BumpLayerId[],\n    interpolation = bumpSvgDefaultProps.interpolation,\n    xPadding = bumpSvgDefaultProps.xPadding,\n    xOuterPadding = bumpSvgDefaultProps.xOuterPadding,\n    yOuterPadding = bumpSvgDefaultProps.yOuterPadding,\n    colors = bumpSvgDefaultProps.colors as BumpSvgPropsWithDefaults<Datum, ExtraProps>['colors'],\n    lineWidth = bumpSvgDefaultProps.lineWidth,\n    activeLineWidth = bumpSvgDefaultProps.activeLineWidth,\n    inactiveLineWidth = bumpSvgDefaultProps.inactiveLineWidth,\n    opacity = bumpSvgDefaultProps.opacity,\n    activeOpacity = bumpSvgDefaultProps.activeOpacity,\n    inactiveOpacity = bumpSvgDefaultProps.inactiveOpacity,\n    startLabel = bumpSvgDefaultProps.startLabel as BumpSvgPropsWithDefaults<\n        Datum,\n        ExtraProps\n    >['startLabel'],\n    startLabelPadding = bumpSvgDefaultProps.startLabelPadding,\n    startLabelTextColor = bumpSvgDefaultProps.startLabelTextColor as BumpSvgPropsWithDefaults<\n        Datum,\n        ExtraProps\n    >['startLabelTextColor'],\n    endLabel = bumpSvgDefaultProps.endLabel as BumpSvgPropsWithDefaults<\n        Datum,\n        ExtraProps\n    >['endLabel'],\n    endLabelPadding = bumpSvgDefaultProps.endLabelPadding,\n    endLabelTextColor = bumpSvgDefaultProps.endLabelTextColor as BumpSvgPropsWithDefaults<\n        Datum,\n        ExtraProps\n    >['endLabelTextColor'],\n    pointComponent = bumpSvgDefaultProps.pointComponent as BumpSvgPropsWithDefaults<\n        Datum,\n        ExtraProps\n    >['pointComponent'],\n    pointSize = bumpSvgDefaultProps.pointSize,\n    activePointSize = bumpSvgDefaultProps.activePointSize,\n    inactivePointSize = bumpSvgDefaultProps.inactivePointSize,\n    pointColor = bumpSvgDefaultProps.pointColor as BumpSvgPropsWithDefaults<\n        Datum,\n        ExtraProps\n    >['pointColor'],\n    pointBorderWidth = bumpSvgDefaultProps.pointBorderWidth,\n    activePointBorderWidth = bumpSvgDefaultProps.activePointBorderWidth,\n    inactivePointBorderWidth = bumpSvgDefaultProps.inactivePointBorderWidth,\n    pointBorderColor = bumpSvgDefaultProps.pointBorderColor as BumpSvgPropsWithDefaults<\n        Datum,\n        ExtraProps\n    >['pointBorderColor'],\n    enableGridX = bumpSvgDefaultProps.enableGridX,\n    enableGridY = bumpSvgDefaultProps.enableGridY,\n    axisTop = bumpSvgDefaultProps.axisTop,\n    axisRight,\n    axisBottom = bumpSvgDefaultProps.axisBottom,\n    axisLeft = bumpSvgDefaultProps.axisLeft,\n    isInteractive = bumpSvgDefaultProps.isInteractive,\n    defaultActiveSerieIds = bumpSvgDefaultProps.defaultActiveSerieIds,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n    useMesh = bumpSvgDefaultProps.useMesh,\n    debugMesh = bumpSvgDefaultProps.debugMesh,\n    lineTooltip = bumpSvgDefaultProps.lineTooltip as BumpSvgPropsWithDefaults<\n        Datum,\n        ExtraProps\n    >['lineTooltip'],\n    pointTooltip = bumpSvgDefaultProps.pointTooltip as BumpSvgPropsWithDefaults<\n        Datum,\n        ExtraProps\n    >['pointTooltip'],\n    role = bumpSvgDefaultProps.role,\n    forwardedRef,\n}: InnerBumpProps<Datum, ExtraProps> & {\n    forwardedRef: Ref<SVGSVGElement>\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        series,\n        points,\n        xScale,\n        yScale,\n        lineGenerator,\n        activePointIds,\n        activeSerieIds,\n        setActiveSerieIds,\n        setActivePointIds,\n    } = useBump<Datum, ExtraProps>({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        colors,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n        isInteractive,\n        defaultActiveSerieIds,\n    })\n\n    const layerById: Record<BumpLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        labels: null,\n        lines: null,\n        points: null,\n        mesh: null,\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n            />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('lines')) {\n        layerById.lines = (\n            <Fragment key=\"lines\">\n                {series.map(serie => (\n                    <Line<Datum, ExtraProps>\n                        key={serie.id}\n                        serie={serie}\n                        setActiveSerieIds={setActiveSerieIds}\n                        lineGenerator={lineGenerator}\n                        yStep={yScale.step()}\n                        isInteractive={isInteractive}\n                        onMouseEnter={onMouseEnter as BumpSerieMouseHandler<Datum, ExtraProps>}\n                        onMouseMove={onMouseMove as BumpSerieMouseHandler<Datum, ExtraProps>}\n                        onMouseLeave={onMouseLeave as BumpSerieMouseHandler<Datum, ExtraProps>}\n                        onMouseDown={onMouseDown as BumpSerieMouseHandler<Datum, ExtraProps>}\n                        onMouseUp={onMouseUp as BumpSerieMouseHandler<Datum, ExtraProps>}\n                        onClick={onClick as BumpSerieMouseHandler<Datum, ExtraProps>}\n                        onDoubleClick={onDoubleClick as BumpSerieMouseHandler<Datum, ExtraProps>}\n                        lineTooltip={lineTooltip}\n                        useMesh={useMesh}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (isInteractive && useMesh && layers.includes('mesh')) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                setActivePointIds={setActivePointIds}\n                setActiveSerieIds={setActiveSerieIds}\n                onMouseEnter={onMouseEnter as BumpPointMouseHandler<Datum, ExtraProps>}\n                onMouseMove={onMouseMove as BumpPointMouseHandler<Datum, ExtraProps>}\n                onMouseLeave={onMouseLeave as BumpPointMouseHandler<Datum, ExtraProps>}\n                onMouseDown={onMouseDown as BumpPointMouseHandler<Datum, ExtraProps>}\n                onMouseUp={onMouseUp as BumpPointMouseHandler<Datum, ExtraProps>}\n                onClick={onClick as BumpPointMouseHandler<Datum, ExtraProps>}\n                onDoubleClick={onDoubleClick as BumpPointMouseHandler<Datum, ExtraProps>}\n                tooltip={pointTooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    if (layers.includes('points')) {\n        layerById.points = points.map(point =>\n            createElement(pointComponent, {\n                key: point.id,\n                point,\n            })\n        )\n    }\n\n    if (layers.includes('labels')) {\n        layerById.labels = (\n            <Fragment key=\"legends\">\n                {startLabel !== false && (\n                    <LinesLabels<Datum, ExtraProps>\n                        series={series}\n                        getLabel={startLabel}\n                        position=\"start\"\n                        padding={startLabelPadding}\n                        color={startLabelTextColor}\n                    />\n                )}\n                {endLabel !== false && (\n                    <LinesLabels<Datum, ExtraProps>\n                        series={series}\n                        getLabel={endLabel}\n                        position=\"end\"\n                        padding={endLabelPadding}\n                        color={endLabelTextColor}\n                    />\n                )}\n            </Fragment>\n        )\n    }\n\n    const customLayerProps: BumpCustomLayerProps<Datum, ExtraProps> = useMemo(\n        () => ({\n            innerHeight,\n            innerWidth,\n            lineGenerator,\n            points,\n            series,\n            xScale,\n            yScale,\n            activeSerieIds,\n            activePointIds,\n            setActiveSerieIds,\n            setActivePointIds,\n        }),\n        [\n            activePointIds,\n            activeSerieIds,\n            setActivePointIds,\n            setActiveSerieIds,\n            innerHeight,\n            innerWidth,\n            lineGenerator,\n            points,\n            series,\n            xScale,\n            yScale,\n        ]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ref={forwardedRef}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bump = forwardRef(\n    <\n        Datum extends BumpDatum = DefaultBumpDatum,\n        ExtraProps extends BumpSerieExtraProps = Record<string, unknown>,\n    >(\n        {\n            isInteractive = bumpSvgDefaultProps.isInteractive,\n            animate = bumpSvgDefaultProps.animate,\n            motionConfig = bumpSvgDefaultProps.motionConfig,\n            theme,\n            renderWrapper,\n            ...otherProps\n        }: BumpSvgProps<Datum, ExtraProps>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <Container\n            {...{\n                animate,\n                isInteractive,\n                motionConfig,\n                renderWrapper,\n                theme,\n            }}\n        >\n            <InnerBump<Datum, ExtraProps>\n                isInteractive={isInteractive}\n                {...otherProps}\n                forwardedRef={ref}\n            />\n        </Container>\n    )\n) as <\n    Datum extends BumpDatum = DefaultBumpDatum,\n    ExtraProps extends BumpSerieExtraProps = Record<string, unknown>,\n>(\n    props: WithChartRef<BumpSvgProps<Datum, ExtraProps>, SVGSVGElement>\n) => ReactElement\n","import { forwardRef, Ref, ReactElement } from 'react'\nimport { ResponsiveWrapper, ResponsiveProps, WithChartRef } from '@nivo/core'\nimport {\n    BumpDatum,\n    BumpSvgPropsWithSeriesMouseHandlers,\n    BumpSvgPropsWithPointMouseHandlers,\n    BumpSerieExtraProps,\n    DefaultBumpDatum,\n} from './types'\nimport { Bump } from './Bump'\n\nexport const ResponsiveBump = forwardRef(\n    <\n        Datum extends BumpDatum = DefaultBumpDatum,\n        ExtraProps extends BumpSerieExtraProps = Record<string, unknown>,\n    >(\n        {\n            defaultWidth,\n            defaultHeight,\n            onResize,\n            debounceResize,\n            ...props\n        }:\n            | ResponsiveProps<BumpSvgPropsWithSeriesMouseHandlers<Datum, ExtraProps>>\n            | ResponsiveProps<BumpSvgPropsWithPointMouseHandlers<Datum, ExtraProps>>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultHeight}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }) => (\n                <Bump<Datum, ExtraProps> width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n) as <\n    Datum extends BumpDatum = DefaultBumpDatum,\n    ExtraProps extends BumpSerieExtraProps = Record<string, unknown>,\n>(\n    props:\n        | WithChartRef<\n              ResponsiveProps<BumpSvgPropsWithSeriesMouseHandlers<Datum, ExtraProps>>,\n              SVGSVGElement\n          >\n        | WithChartRef<\n              ResponsiveProps<BumpSvgPropsWithPointMouseHandlers<Datum, ExtraProps>>,\n              SVGSVGElement\n          >\n) => ReactElement | null\n","import { FunctionComponent, MouseEvent } from 'react'\nimport { Line as D3Line } from 'd3-shape'\nimport { Box, Dimensions, MotionProps } from '@nivo/core'\nimport { PartialTheme } from '@nivo/theming'\nimport { OrdinalColorScaleConfig, InheritedColorConfig } from '@nivo/colors'\nimport { AxisProps } from '@nivo/axes'\nimport { ScalePoint } from '@nivo/scales'\nimport { PointProps } from './Point'\n\nexport interface BumpDatum {\n    x: number | string\n    y: number | null\n}\n\nexport interface DefaultBumpDatum {\n    x: string\n    y: number\n}\n\nexport type BumpSerieExtraProps = Record<string, unknown>\n\nexport type BumpSerie<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> = ExtraProps & {\n    id: string\n    data: Datum[]\n}\n\nexport interface BumpSeriePoint<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> {\n    id: string\n    serie: BumpSerie<Datum, ExtraProps>\n    data: Datum\n    x: number\n    y: number | null\n}\n\nexport interface BumpPoint<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> {\n    id: string\n    serie: BumpComputedSerie<Datum, ExtraProps>\n    data: Datum\n    x: number\n    y: number | null\n    isActive: boolean\n    isInactive: boolean\n    size: number\n    color: string\n    borderWidth: number\n    borderColor: string\n}\nexport type BumpPointComponent<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> = FunctionComponent<PointProps<Datum, ExtraProps>>\n\nexport interface BumpComputedSerie<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> {\n    id: string\n    data: BumpSerie<Datum, ExtraProps>\n    points: BumpSeriePoint<Datum, ExtraProps>[]\n    linePoints: [number, number | null][]\n    color: string\n    opacity: number\n    lineWidth: number\n}\n\nexport type BumpDataProps<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> = {\n    data: BumpSerie<Datum, ExtraProps>[]\n}\n\nexport type BumpInterpolation = 'smooth' | 'linear'\n\nexport type BumpLabel<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> =\n    | ((serie: BumpSerie<Datum, ExtraProps>) => string)\n    | boolean\nexport interface BumpLabelData<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> {\n    serie: BumpComputedSerie<Datum, ExtraProps>\n    id: string\n    label: string\n    x: number\n    y: number\n    color: string\n    opacity: number\n    textAnchor: 'start' | 'end'\n}\n\nexport type BumpSerieMouseHandler<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> = (serie: BumpComputedSerie<Datum, ExtraProps>, event: MouseEvent<SVGPathElement>) => void\nexport type BumpPointMouseHandler<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> = (point: BumpPoint<Datum, ExtraProps>, event: MouseEvent) => void\nexport type BumpMouseHandler<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> =\n    | BumpSerieMouseHandler<Datum, ExtraProps>\n    | BumpPointMouseHandler<Datum, ExtraProps>\n\nexport type BumpLayerId = 'grid' | 'axes' | 'labels' | 'lines' | 'points' | 'mesh'\nexport interface BumpCustomLayerProps<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> {\n    innerHeight: number\n    innerWidth: number\n    lineGenerator: D3Line<[number, number | null]>\n    points: BumpPoint<Datum, ExtraProps>[]\n    series: BumpComputedSerie<Datum, ExtraProps>[]\n    xScale: ScalePoint<Datum['x']>\n    yScale: ScalePoint<number>\n    activeSerieIds: string[]\n    activePointIds: string[]\n    setActiveSerieIds: (serieIds: string[]) => void\n    setActivePointIds: (pointIds: string[]) => void\n}\nexport type BumpCustomLayer<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> = FunctionComponent<BumpCustomLayerProps<Datum, ExtraProps>>\nexport type BumpLayer<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> =\n    | BumpLayerId\n    | BumpCustomLayer<Datum, ExtraProps>\n\nexport type BumpLineTooltip<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> = FunctionComponent<{\n    serie: BumpComputedSerie<Datum, ExtraProps>\n}>\n\nexport type BumpPointTooltip<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> = FunctionComponent<{\n    point: BumpPoint<Datum, ExtraProps>\n}>\n\nexport interface BumpCommonProps<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> {\n    margin?: Box\n    interpolation: BumpInterpolation\n    xPadding: number\n    xOuterPadding: number\n    yOuterPadding: number\n    theme?: PartialTheme\n    colors: OrdinalColorScaleConfig<BumpSerie<Datum, ExtraProps>>\n    lineWidth: number\n    activeLineWidth: number\n    inactiveLineWidth: number\n    opacity: number\n    activeOpacity: number\n    inactiveOpacity: number\n    startLabel: BumpLabel<Datum, ExtraProps>\n    startLabelPadding: number\n    startLabelTextColor: InheritedColorConfig<BumpComputedSerie<Datum, ExtraProps>>\n    endLabel: BumpLabel<Datum, ExtraProps>\n    endLabelPadding: number\n    endLabelTextColor: InheritedColorConfig<BumpComputedSerie<Datum, ExtraProps>>\n    pointSize: number\n    activePointSize: number\n    inactivePointSize: number\n    pointColor: InheritedColorConfig<Omit<BumpPoint<Datum, ExtraProps>, 'color' | 'borderColor'>>\n    pointBorderWidth: number\n    activePointBorderWidth: number\n    inactivePointBorderWidth: number\n    pointBorderColor: InheritedColorConfig<Omit<BumpPoint<Datum, ExtraProps>, 'borderColor'>>\n    enableGridX: boolean\n    enableGridY: boolean\n    axisBottom?: AxisProps | null\n    axisLeft?: AxisProps | null\n    axisRight?: AxisProps | null\n    axisTop?: AxisProps | null\n    isInteractive: boolean\n    defaultActiveSerieIds: string[]\n    lineTooltip: BumpLineTooltip<Datum, ExtraProps>\n    pointTooltip: BumpPointTooltip<Datum, ExtraProps>\n    role: string\n    layers: BumpLayer<Datum, ExtraProps>[]\n    renderWrapper: boolean\n    useMesh?: boolean\n    debugMesh: boolean\n}\n\nexport const isBumpPoint = <Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps>(\n    point: BumpComputedSerie<Datum, ExtraProps> | BumpPoint<Datum, ExtraProps>\n): point is BumpPoint<Datum, ExtraProps> => {\n    return 'serie' in point\n}\n\nexport const isComputedBumpSerie = <\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n>(\n    serie: BumpComputedSerie<Datum, ExtraProps> | BumpPoint<Datum, ExtraProps>\n): serie is BumpComputedSerie<Datum, ExtraProps> => {\n    return 'points' in serie\n}\n\ninterface BumpPointMouseHandlersProps<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> {\n    useMesh: true\n    onMouseEnter?: BumpPointMouseHandler<Datum, ExtraProps>\n    onMouseMove?: BumpPointMouseHandler<Datum, ExtraProps>\n    onMouseLeave?: BumpPointMouseHandler<Datum, ExtraProps>\n    onMouseDown?: BumpPointMouseHandler<Datum, ExtraProps>\n    onMouseUp?: BumpPointMouseHandler<Datum, ExtraProps>\n    onClick?: BumpPointMouseHandler<Datum, ExtraProps>\n    onDoubleClick?: BumpPointMouseHandler<Datum, ExtraProps>\n}\n\ninterface BumpSeriesMouseHandlersProps<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> {\n    useMesh?: false\n    onMouseEnter?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onMouseMove?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onMouseLeave?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onMouseDown?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onMouseUp?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onClick?: BumpSerieMouseHandler<Datum, ExtraProps>\n    onDoubleClick?: BumpSerieMouseHandler<Datum, ExtraProps>\n}\n\ninterface BumpSvgExtraProps<Datum extends BumpDatum, ExtraProps extends BumpSerieExtraProps> {\n    pointComponent: BumpPointComponent<Datum, ExtraProps>\n}\n\nexport type BumpSvgPropsWithSeriesMouseHandlers<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> = Dimensions &\n    BumpDataProps<Datum, ExtraProps> &\n    Partial<BumpCommonProps<Datum, ExtraProps>> &\n    BumpSeriesMouseHandlersProps<Datum, ExtraProps> &\n    Partial<BumpSvgExtraProps<Datum, ExtraProps>> &\n    MotionProps\n\nexport type BumpSvgPropsWithPointMouseHandlers<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> = Dimensions &\n    BumpDataProps<Datum, ExtraProps> &\n    Partial<BumpCommonProps<Datum, ExtraProps>> &\n    BumpPointMouseHandlersProps<Datum, ExtraProps> &\n    Partial<BumpSvgExtraProps<Datum, ExtraProps>> &\n    MotionProps\n\nexport type BumpSvgProps<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps = Record<string, unknown>,\n> =\n    | BumpSvgPropsWithSeriesMouseHandlers<Datum, ExtraProps>\n    | BumpSvgPropsWithPointMouseHandlers<Datum, ExtraProps>\n\nexport type BumpSvgPropsWithDefaults<\n    Datum extends BumpDatum,\n    ExtraProps extends BumpSerieExtraProps,\n> = Dimensions &\n    BumpDataProps<Datum, ExtraProps> &\n    BumpCommonProps<Datum, ExtraProps> &\n    (\n        | BumpSeriesMouseHandlersProps<Datum, ExtraProps>\n        | BumpPointMouseHandlersProps<Datum, ExtraProps>\n    ) &\n    BumpSvgExtraProps<Datum, ExtraProps> &\n    MotionProps\n","import { createElement, useMemo, useCallback, useState, MouseEvent } from 'react'\nimport { area as d3Area, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@nivo/theming'\nimport { useOrdinalColorScale, useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { computeSeries } from './compute'\nimport {\n    AreaBumpAreaPoint,\n    AreaBumpCommonProps,\n    AreaBumpComputedSerie,\n    AreaBumpDataProps,\n    AreaBumpDatum,\n    AreaBumpInterpolation,\n    AreaBumpLabel,\n    AreaBumpLabelData,\n    AreaBumpSerieExtraProps,\n    DefaultAreaBumpDatum,\n} from './types'\n\nconst useAreaBumpSeries = <\n    Datum extends AreaBumpDatum,\n    ExtraProps extends AreaBumpSerieExtraProps,\n>({\n    data,\n    width,\n    height,\n    align,\n    spacing,\n    xPadding,\n}: {\n    data: AreaBumpDataProps<Datum, ExtraProps>['data']\n    width: number\n    height: number\n    align: AreaBumpCommonProps<Datum, ExtraProps>['align']\n    spacing: AreaBumpCommonProps<Datum, ExtraProps>['spacing']\n    xPadding: AreaBumpCommonProps<Datum, ExtraProps>['xPadding']\n}) =>\n    useMemo(\n        () => computeSeries<Datum, ExtraProps>({ data, width, height, align, spacing, xPadding }),\n        [data, width, height, align, spacing, xPadding]\n    )\n\nconst useAreaGenerator = (interpolation: AreaBumpInterpolation) =>\n    useMemo(\n        () =>\n            d3Area<AreaBumpAreaPoint>()\n                .x(d => d.x)\n                .y0(d => d.y0)\n                .y1(d => d.y1)\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear),\n        [interpolation]\n    )\n\nconst useSerieDerivedProp = <Target, Output extends string | number>(\n    instruction: ((target: Target) => Output) | Output\n): ((target: Target) => Output) =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nconst useSerieStyle = <Datum extends AreaBumpDatum, ExtraProps extends AreaBumpSerieExtraProps>({\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    activeSerieIds,\n}: {\n    fillOpacity: AreaBumpCommonProps<Datum, ExtraProps>['fillOpacity']\n    activeFillOpacity: AreaBumpCommonProps<Datum, ExtraProps>['activeFillOpacity']\n    inactiveFillOpacity: AreaBumpCommonProps<Datum, ExtraProps>['inactiveFillOpacity']\n    borderWidth: AreaBumpCommonProps<Datum, ExtraProps>['borderWidth']\n    activeBorderWidth: AreaBumpCommonProps<Datum, ExtraProps>['activeBorderWidth']\n    inactiveBorderWidth: AreaBumpCommonProps<Datum, ExtraProps>['inactiveBorderWidth']\n    borderColor: AreaBumpCommonProps<Datum, ExtraProps>['borderColor']\n    borderOpacity: AreaBumpCommonProps<Datum, ExtraProps>['borderOpacity']\n    activeBorderOpacity: AreaBumpCommonProps<Datum, ExtraProps>['activeBorderOpacity']\n    inactiveBorderOpacity: AreaBumpCommonProps<Datum, ExtraProps>['inactiveBorderOpacity']\n    isInteractive: AreaBumpCommonProps<Datum, ExtraProps>['isInteractive']\n    activeSerieIds: string[]\n}) => {\n    type Serie = Omit<\n        AreaBumpComputedSerie<Datum, ExtraProps>,\n        'fillOpacity' | 'borderWidth' | 'borderColor' | 'borderOpacity'\n    >\n\n    const getFillOpacity = useSerieDerivedProp<Serie, number>(fillOpacity)\n    const getActiveFillOpacity = useSerieDerivedProp<Serie, number>(activeFillOpacity)\n    const getInactiveFillOpacity = useSerieDerivedProp<Serie, number>(inactiveFillOpacity)\n\n    const getBorderWidth = useSerieDerivedProp<Serie, number>(borderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp<Serie, number>(activeBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp<Serie, number>(inactiveBorderWidth)\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const getBorderOpacity = useSerieDerivedProp<Serie, number>(borderOpacity)\n    const getActiveBorderOpacity = useSerieDerivedProp<Serie, number>(activeBorderOpacity)\n    const getInactiveBorderOpacity = useSerieDerivedProp<Serie, number>(inactiveBorderOpacity)\n\n    const getNormalStyle = useCallback(\n        (serie: Serie) => ({\n            fillOpacity: getFillOpacity(serie),\n            borderWidth: getBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getBorderOpacity(serie),\n        }),\n        [getFillOpacity, getBorderWidth, getBorderColor, getBorderOpacity]\n    )\n    const getActiveStyle = useCallback(\n        (serie: Serie) => ({\n            fillOpacity: getActiveFillOpacity(serie),\n            borderWidth: getActiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getActiveBorderOpacity(serie),\n        }),\n        [getActiveFillOpacity, getActiveBorderWidth, getBorderColor, getActiveBorderOpacity]\n    )\n    const getInactiveStyle = useCallback(\n        (serie: Serie) => ({\n            fillOpacity: getInactiveFillOpacity(serie),\n            borderWidth: getInactiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getInactiveBorderOpacity(serie),\n        }),\n        [getInactiveFillOpacity, getInactiveBorderWidth, getBorderColor, getInactiveBorderOpacity]\n    )\n\n    return useCallback(\n        (serie: Serie) => {\n            if (!isInteractive || activeSerieIds.length === 0) return getNormalStyle(serie)\n            if (activeSerieIds.includes(serie.id)) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        },\n        [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, activeSerieIds]\n    )\n}\n\nexport const useAreaBump = <\n    Datum extends AreaBumpDatum = DefaultAreaBumpDatum,\n    ExtraProps extends AreaBumpSerieExtraProps = Record<string, unknown>,\n>({\n    data,\n    width,\n    height,\n    align,\n    spacing,\n    xPadding,\n    interpolation,\n    colors,\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    defaultActiveSerieIds,\n}: {\n    data: AreaBumpDataProps<Datum, ExtraProps>['data']\n    width: number\n    height: number\n    align: AreaBumpCommonProps<Datum, ExtraProps>['align']\n    spacing: AreaBumpCommonProps<Datum, ExtraProps>['spacing']\n    xPadding: AreaBumpCommonProps<Datum, ExtraProps>['xPadding']\n    interpolation: AreaBumpCommonProps<Datum, ExtraProps>['interpolation']\n    colors: AreaBumpCommonProps<Datum, ExtraProps>['colors']\n    fillOpacity: AreaBumpCommonProps<Datum, ExtraProps>['fillOpacity']\n    activeFillOpacity: AreaBumpCommonProps<Datum, ExtraProps>['activeFillOpacity']\n    inactiveFillOpacity: AreaBumpCommonProps<Datum, ExtraProps>['inactiveFillOpacity']\n    borderWidth: AreaBumpCommonProps<Datum, ExtraProps>['borderWidth']\n    activeBorderWidth: AreaBumpCommonProps<Datum, ExtraProps>['activeBorderWidth']\n    inactiveBorderWidth: AreaBumpCommonProps<Datum, ExtraProps>['inactiveBorderWidth']\n    borderColor: AreaBumpCommonProps<Datum, ExtraProps>['borderColor']\n    borderOpacity: AreaBumpCommonProps<Datum, ExtraProps>['borderOpacity']\n    activeBorderOpacity: AreaBumpCommonProps<Datum, ExtraProps>['activeBorderOpacity']\n    inactiveBorderOpacity: AreaBumpCommonProps<Datum, ExtraProps>['inactiveBorderOpacity']\n    isInteractive: AreaBumpCommonProps<Datum, ExtraProps>['isInteractive']\n    defaultActiveSerieIds: string[]\n}) => {\n    const [activeSerieIds, setActiveSerieIds] = useState<string[]>(defaultActiveSerieIds)\n\n    const {\n        series: rawSeries,\n        xScale,\n        heightScale,\n    } = useAreaBumpSeries<Datum, ExtraProps>({\n        data,\n        width,\n        height,\n        align,\n        spacing,\n        xPadding,\n    })\n\n    const areaGenerator = useAreaGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle<Datum, ExtraProps>({\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        activeSerieIds,\n    })\n\n    const series: AreaBumpComputedSerie<Datum, ExtraProps>[] = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                const serieWithColor = {\n                    ...serie,\n                    color: getColor(serie.data),\n                }\n\n                return {\n                    ...serieWithColor,\n                    ...getSerieStyle(serieWithColor),\n                }\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    return {\n        series,\n        xScale,\n        heightScale,\n        areaGenerator,\n        activeSerieIds,\n        setActiveSerieIds,\n    }\n}\n\nexport const useAreaBumpSerieHandlers = <\n    Datum extends AreaBumpDatum,\n    ExtraProps extends AreaBumpSerieExtraProps,\n>({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setActiveSerieIds,\n    tooltip,\n}: {\n    serie: AreaBumpComputedSerie<Datum, ExtraProps>\n    isInteractive: AreaBumpCommonProps<Datum, ExtraProps>['isInteractive']\n    onMouseEnter?: AreaBumpCommonProps<Datum, ExtraProps>['onMouseEnter']\n    onMouseMove?: AreaBumpCommonProps<Datum, ExtraProps>['onMouseMove']\n    onMouseLeave?: AreaBumpCommonProps<Datum, ExtraProps>['onMouseLeave']\n    onClick?: AreaBumpCommonProps<Datum, ExtraProps>['onClick']\n    setActiveSerieIds: (serieIds: string[]) => void\n    tooltip: AreaBumpCommonProps<Datum, ExtraProps>['tooltip']\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { serie }), event)\n            setActiveSerieIds([serie.id])\n            onMouseEnter?.(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setActiveSerieIds, tooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { serie }), event)\n            onMouseMove?.(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveSerieIds([])\n            onMouseLeave?.(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setActiveSerieIds]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            onClick?.(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    return useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n}\n\nexport const useAreaBumpSeriesLabels = <\n    Datum extends AreaBumpDatum,\n    ExtraProps extends AreaBumpSerieExtraProps,\n>({\n    series,\n    position,\n    padding,\n    color,\n    getLabel,\n}: {\n    series: AreaBumpComputedSerie<Datum, ExtraProps>[]\n    position: 'start' | 'end'\n    padding: number\n    color: InheritedColorConfig<AreaBumpComputedSerie<Datum, ExtraProps>>\n    getLabel: Exclude<AreaBumpLabel<Datum, ExtraProps>, false>\n}): AreaBumpLabelData<Datum, ExtraProps>[] => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor: 'start' | 'end'\n        let signedPadding: number\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        return series.map(serie => {\n            let label = serie.id\n            if (typeof getLabel === 'function') {\n                label = getLabel(serie.data)\n            }\n\n            const point =\n                position === 'start' ? serie.points[0] : serie.points[serie.points.length - 1]\n\n            return {\n                id: serie.id,\n                label,\n                x: point.x + signedPadding,\n                y: point.y,\n                color: getColor(serie),\n                opacity: serie.fillOpacity,\n                serie,\n                textAnchor,\n            }\n        })\n    }, [getLabel, series, position, padding, getColor])\n}\n","import { scalePoint, scaleLinear } from 'd3-scale'\nimport { castPointScale, castLinearScale, ScalePoint, ScaleLinear } from '@nivo/scales'\nimport {\n    AreaBumpCommonProps,\n    AreaBumpComputedSerie,\n    AreaBumpDataProps,\n    AreaBumpDatum,\n    AreaBumpSerieExtraProps,\n} from './types'\n\nexport const computeSeries = <\n    Datum extends AreaBumpDatum,\n    ExtraProps extends AreaBumpSerieExtraProps,\n>({\n    data,\n    width,\n    height,\n    align,\n    spacing,\n    xPadding,\n}: {\n    data: AreaBumpDataProps<Datum, ExtraProps>['data']\n    width: number\n    height: number\n    align: AreaBumpCommonProps<Datum, ExtraProps>['align']\n    spacing: AreaBumpCommonProps<Datum, ExtraProps>['spacing']\n    xPadding: AreaBumpCommonProps<Datum, ExtraProps>['xPadding']\n}): {\n    series: Omit<\n        AreaBumpComputedSerie<Datum, ExtraProps>,\n        'color' | 'fill' | 'fillOpacity' | 'borderWidth' | 'borderColor' | 'borderOpacity'\n    >[]\n    xScale: ScalePoint<Datum['x']>\n    heightScale: ScaleLinear<number>\n} => {\n    const slices = new Map<\n        Datum['x'],\n        {\n            id: Datum['x']\n            total: number\n            x: number\n            values: Map<\n                string,\n                {\n                    serieId: string\n                    value: number\n                    position: number\n                    height: number\n                    beforeHeight: number\n                }\n            >\n        }\n    >()\n\n    let maxSum: number\n    let maxValues: number\n\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!slices.has(datum.x)) {\n                slices.set(datum.x, {\n                    id: datum.x,\n                    total: 0,\n                    values: new Map(),\n                    x: 0,\n                })\n            }\n\n            const slice = slices.get(datum.x)!\n\n            const total = slice.total + datum.y\n            slice.total = total\n\n            slice.values.set(serie.id, {\n                serieId: serie.id,\n                value: datum.y,\n                position: 0,\n                height: 0,\n                beforeHeight: 0,\n            })\n\n            if (maxSum === undefined || total > maxSum) {\n                maxSum = total\n            }\n            if (maxValues === undefined || slice.values.size > maxValues) {\n                maxValues = slice.values.size\n            }\n        })\n    })\n\n    const xScale = castPointScale<Datum['x']>(\n        scalePoint<Datum['x']>().domain(Array.from(slices.keys())).range([0, width])\n    )\n\n    const heightScale = castLinearScale<number, number>(\n        scaleLinear<number, number>()\n            .domain([0, maxSum!])\n            .range([0, height - maxValues! * spacing])\n    )\n\n    slices.forEach((slice, x) => {\n        slice.x = xScale(x)!\n        const sliceHeight = heightScale(slice.total) + slice.values.size * spacing\n\n        let offset = 0\n        if (align === 'middle') {\n            offset = (height - sliceHeight) / 2\n        } else if (align === 'end') {\n            offset = height - sliceHeight\n        }\n\n        Array.from(slice.values.values())\n            .sort((a, b) => b.value - a.value)\n            .forEach((value, position, all) => {\n                const previousValues = all.filter((_i, pos) => pos < position)\n                const beforeValue = previousValues.reduce((t, v) => t + v.value, 0)\n\n                const sliceValue = slice.values.get(value.serieId)!\n                sliceValue.position = position\n                sliceValue.height = heightScale(value.value)\n                sliceValue.beforeHeight =\n                    heightScale(beforeValue) + offset + spacing * (previousValues.length + 0.5)\n            })\n    })\n\n    const areaPointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(serie => {\n        const computedSerie: Omit<\n            AreaBumpComputedSerie<Datum, ExtraProps>,\n            'color' | 'fill' | 'fillOpacity' | 'borderWidth' | 'borderColor' | 'borderOpacity'\n        > = {\n            id: serie.id,\n            data: serie,\n            points: [],\n            areaPoints: [],\n        }\n\n        serie.data.forEach((datum, i) => {\n            const slice = slices.get(datum.x)!\n            const position = slice.values.get(serie.id)!\n\n            const x = slice.x\n            const { beforeHeight, height } = position\n            const y = beforeHeight + height / 2\n            const y0 = beforeHeight\n            const y1 = beforeHeight + height\n\n            computedSerie.points.push({\n                x,\n                y,\n                height,\n                data: { ...datum },\n            })\n            if (i > 0) {\n                computedSerie.areaPoints.push({ x: x - areaPointPadding, y0, y1 })\n            }\n            computedSerie.areaPoints.push({ x, y0, y1 })\n            if (i < serie.data.length - 1) {\n                computedSerie.areaPoints.push({ x: x + areaPointPadding, y0, y1 })\n            }\n        })\n\n        return computedSerie\n    })\n\n    return {\n        series,\n        xScale,\n        heightScale,\n    }\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useAreaBumpSerieHandlers } from './hooks'\nimport {\n    AreaBumpAreaGenerator,\n    AreaBumpCommonProps,\n    AreaBumpComputedSerie,\n    AreaBumpDatum,\n    AreaBumpSerieExtraProps,\n} from './types'\n\ninterface AreaProps<Datum extends AreaBumpDatum, ExtraProps extends AreaBumpSerieExtraProps> {\n    serie: AreaBumpComputedSerie<Datum, ExtraProps>\n    areaGenerator: AreaBumpAreaGenerator\n    blendMode: AreaBumpCommonProps<Datum, ExtraProps>['blendMode']\n    isInteractive: AreaBumpCommonProps<Datum, ExtraProps>['isInteractive']\n    onMouseEnter?: AreaBumpCommonProps<Datum, ExtraProps>['onMouseEnter']\n    onMouseMove?: AreaBumpCommonProps<Datum, ExtraProps>['onMouseMove']\n    onMouseLeave?: AreaBumpCommonProps<Datum, ExtraProps>['onMouseLeave']\n    onClick?: AreaBumpCommonProps<Datum, ExtraProps>['onClick']\n    setActiveSerieIds: (serieIds: string[]) => void\n    tooltip: AreaBumpCommonProps<Datum, ExtraProps>['tooltip']\n}\n\nexport const Area = <Datum extends AreaBumpDatum, ExtraProps extends AreaBumpSerieExtraProps>({\n    serie,\n    areaGenerator,\n    blendMode,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setActiveSerieIds,\n    tooltip,\n}: AreaProps<Datum, ExtraProps>) => {\n    const handlers = useAreaBumpSerieHandlers<Datum, ExtraProps>({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setActiveSerieIds,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(areaGenerator(serie.areaPoints) || '')\n    const animatedProps = useSpring<{\n        color: string\n        fillOpacity: number\n        stroke: string\n        strokeOpacity: number\n    }>({\n        color: serie.color,\n        fillOpacity: serie.fillOpacity,\n        stroke: serie.borderColor,\n        strokeOpacity: serie.borderOpacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            data-testid={`area.${serie.id}`}\n            d={animatedPath}\n            fill={serie.fill ? serie.fill : animatedProps.color}\n            fillOpacity={animatedProps.fillOpacity}\n            stroke={animatedProps.stroke}\n            strokeWidth={serie.borderWidth}\n            strokeOpacity={animatedProps.strokeOpacity}\n            style={{ mixBlendMode: blendMode }}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n","import { useSprings } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport { Text } from '@nivo/text'\nimport {\n    AreaBumpComputedSerie,\n    AreaBumpDatum,\n    AreaBumpLabel,\n    AreaBumpSerieExtraProps,\n} from './types'\nimport { useAreaBumpSeriesLabels } from './hooks'\n\ninterface AreaLabelsProps<Datum extends AreaBumpDatum, ExtraProps extends AreaBumpSerieExtraProps> {\n    getLabel: Exclude<AreaBumpLabel<Datum, ExtraProps>, false>\n    series: AreaBumpComputedSerie<Datum, ExtraProps>[]\n    position: 'start' | 'end'\n    padding: number\n    color: InheritedColorConfig<AreaBumpComputedSerie<Datum, ExtraProps>>\n}\n\nexport const AreasLabels = <\n    Datum extends AreaBumpDatum,\n    ExtraProps extends AreaBumpSerieExtraProps,\n>({\n    getLabel,\n    series,\n    position,\n    padding,\n    color,\n}: AreaLabelsProps<Datum, ExtraProps>) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useAreaBumpSeriesLabels<Datum, ExtraProps>({\n        getLabel,\n        series,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings<{\n        x: number\n        y: number\n        opacity: number\n    }>(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return (\n        <>\n            {springs.map((animatedProps, index) => {\n                const label = labels[index]\n\n                return (\n                    <Text\n                        data-testid={`label.${position}.${label.serie.id}`}\n                        key={label.id}\n                        x={animatedProps.x}\n                        y={animatedProps.y}\n                        textAnchor={label.textAnchor}\n                        dominantBaseline=\"central\"\n                        opacity={animatedProps.opacity}\n                        style={{\n                            ...theme.labels.text,\n                            fill: label.color,\n                        }}\n                    >\n                        {label.label}\n                    </Text>\n                )\n            })}\n        </>\n    )\n}\n","import { MotionProps, SvgDefsAndFill } from '@nivo/core'\nimport { AreaBumpCommonProps, AreaBumpComputedSerie, DefaultAreaBumpDatum } from './types'\nimport { AreaTooltip } from './AreaTooltip'\n\nconst commonDefaultProps: Omit<\n    AreaBumpCommonProps<DefaultAreaBumpDatum, Record<string, unknown>>,\n    | 'onMouseEnter'\n    | 'onMouseMove'\n    | 'onMouseLeave'\n    | 'onClick'\n    | 'margin'\n    | 'theme'\n    | 'renderWrapper'\n> = {\n    align: 'middle',\n    layers: ['grid', 'axes', 'labels', 'areas'],\n    interpolation: 'smooth',\n    spacing: 0,\n    xPadding: 0.6,\n    colors: { scheme: 'nivo' },\n    blendMode: 'normal',\n    fillOpacity: 0.8,\n    activeFillOpacity: 1,\n    inactiveFillOpacity: 0.15,\n    borderWidth: 1,\n    activeBorderWidth: 1,\n    inactiveBorderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 0.4]] },\n    borderOpacity: 1,\n    activeBorderOpacity: 1,\n    inactiveBorderOpacity: 0,\n    startLabel: true,\n    startLabelPadding: 12,\n    startLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    endLabel: true,\n    endLabelPadding: 12,\n    endLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    enableGridX: true,\n    axisTop: {},\n    axisBottom: {},\n    isInteractive: true,\n    defaultActiveSerieIds: [],\n    tooltip: AreaTooltip,\n    role: 'img',\n}\n\nexport const areaBumpSvgDefaultProps: typeof commonDefaultProps &\n    SvgDefsAndFill<AreaBumpComputedSerie<DefaultAreaBumpDatum, Record<string, unknown>>> & {\n        animate: boolean\n        motionConfig: MotionProps['motionConfig']\n    } = {\n    ...commonDefaultProps,\n    defs: [],\n    fill: [],\n    animate: true,\n    motionConfig: 'gentle',\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { AreaBumpDatum, AreaBumpComputedSerie, AreaBumpSerieExtraProps } from './types'\n\ninterface AreaTooltipProps<\n    Datum extends AreaBumpDatum,\n    ExtraProps extends AreaBumpSerieExtraProps,\n> {\n    serie: AreaBumpComputedSerie<Datum, ExtraProps>\n}\n\nexport const AreaTooltip = <\n    Datum extends AreaBumpDatum,\n    ExtraProps extends AreaBumpSerieExtraProps,\n>({\n    serie,\n}: AreaTooltipProps<Datum, ExtraProps>) => (\n    <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n)\n","import { Fragment, useMemo, ReactNode, createElement, forwardRef, Ref, ReactElement } from 'react'\nimport {\n    // @ts-expect-error no types\n    bindDefs,\n    useDimensions,\n    SvgWrapper,\n    Container,\n    WithChartRef,\n} from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { useAreaBump } from './hooks'\nimport { Area } from './Area'\nimport { AreasLabels } from './AreasLabels'\nimport {\n    AreaBumpSvgProps,\n    AreaBumpDatum,\n    DefaultAreaBumpDatum,\n    AreaBumpLayerId,\n    AreaBumpCustomLayerProps,\n    AreaBumpSerieExtraProps,\n} from './types'\nimport { areaBumpSvgDefaultProps } from './defaults'\n\ntype InnerAreaBumpProps<\n    Datum extends AreaBumpDatum,\n    ExtraProps extends AreaBumpSerieExtraProps,\n> = Omit<\n    AreaBumpSvgProps<Datum, ExtraProps>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerAreaBump = <Datum extends AreaBumpDatum, ExtraProps extends AreaBumpSerieExtraProps>({\n    data,\n    align = areaBumpSvgDefaultProps.align,\n    width,\n    height,\n    margin: partialMargin,\n    layers = areaBumpSvgDefaultProps.layers as NonNullable<\n        AreaBumpSvgProps<Datum, ExtraProps>['layers']\n    >,\n    interpolation = areaBumpSvgDefaultProps.interpolation,\n    spacing = areaBumpSvgDefaultProps.spacing,\n    xPadding = areaBumpSvgDefaultProps.xPadding,\n    colors = areaBumpSvgDefaultProps.colors as NonNullable<\n        AreaBumpSvgProps<Datum, ExtraProps>['colors']\n    >,\n    blendMode = areaBumpSvgDefaultProps.blendMode,\n    fillOpacity = areaBumpSvgDefaultProps.fillOpacity,\n    activeFillOpacity = areaBumpSvgDefaultProps.activeFillOpacity,\n    inactiveFillOpacity = areaBumpSvgDefaultProps.inactiveFillOpacity,\n    defs = areaBumpSvgDefaultProps.defs,\n    fill = areaBumpSvgDefaultProps.fill as NonNullable<AreaBumpSvgProps<Datum, ExtraProps>['fill']>,\n    borderWidth = areaBumpSvgDefaultProps.borderWidth,\n    activeBorderWidth = areaBumpSvgDefaultProps.activeBorderWidth,\n    inactiveBorderWidth = areaBumpSvgDefaultProps.inactiveBorderWidth,\n    borderColor = areaBumpSvgDefaultProps.borderColor as NonNullable<\n        AreaBumpSvgProps<Datum, ExtraProps>['borderColor']\n    >,\n    borderOpacity = areaBumpSvgDefaultProps.borderOpacity,\n    activeBorderOpacity = areaBumpSvgDefaultProps.activeBorderOpacity,\n    inactiveBorderOpacity = areaBumpSvgDefaultProps.inactiveBorderOpacity,\n    startLabel = areaBumpSvgDefaultProps.startLabel as NonNullable<\n        AreaBumpSvgProps<Datum, ExtraProps>['startLabel']\n    >,\n    startLabelPadding = areaBumpSvgDefaultProps.startLabelPadding,\n    startLabelTextColor = areaBumpSvgDefaultProps.startLabelTextColor as NonNullable<\n        AreaBumpSvgProps<Datum, ExtraProps>['startLabelTextColor']\n    >,\n    endLabel = areaBumpSvgDefaultProps.endLabel as NonNullable<\n        AreaBumpSvgProps<Datum, ExtraProps>['endLabel']\n    >,\n    endLabelPadding = areaBumpSvgDefaultProps.endLabelPadding,\n    endLabelTextColor = areaBumpSvgDefaultProps.endLabelTextColor as NonNullable<\n        AreaBumpSvgProps<Datum, ExtraProps>['endLabelTextColor']\n    >,\n    enableGridX = areaBumpSvgDefaultProps.enableGridX,\n    axisTop = areaBumpSvgDefaultProps.axisTop,\n    axisBottom = areaBumpSvgDefaultProps.axisBottom,\n    isInteractive = areaBumpSvgDefaultProps.isInteractive,\n    defaultActiveSerieIds = areaBumpSvgDefaultProps.defaultActiveSerieIds,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = areaBumpSvgDefaultProps.tooltip as NonNullable<\n        AreaBumpSvgProps<Datum, ExtraProps>['tooltip']\n    >,\n    role = areaBumpSvgDefaultProps.role,\n    forwardedRef,\n}: InnerAreaBumpProps<Datum, ExtraProps> & {\n    forwardedRef: Ref<SVGSVGElement>\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { series, xScale, heightScale, areaGenerator, setActiveSerieIds } = useAreaBump<\n        Datum,\n        ExtraProps\n    >({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        align,\n        spacing,\n        xPadding,\n        interpolation,\n        colors,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        defaultActiveSerieIds,\n    })\n\n    const boundDefs = useMemo(\n        () => bindDefs(defs, series, fill, { targetKey: 'fill' }),\n        [defs, series, fill]\n    )\n\n    const layerById: Record<AreaBumpLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        labels: null,\n        areas: null,\n    }\n\n    if (layers.includes('grid') && enableGridX) {\n        layerById.grid = <Grid key=\"grid\" width={innerWidth} height={innerHeight} xScale={xScale} />\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={heightScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                bottom={axisBottom}\n            />\n        )\n    }\n\n    if (layers.includes('areas')) {\n        layerById.areas = (\n            <Fragment key=\"areas\">\n                {series.map(serie => (\n                    <Area<Datum, ExtraProps>\n                        key={serie.id}\n                        areaGenerator={areaGenerator}\n                        serie={serie}\n                        blendMode={blendMode}\n                        isInteractive={isInteractive}\n                        setActiveSerieIds={setActiveSerieIds}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('labels')) {\n        layerById.labels = (\n            <Fragment key=\"labels\">\n                {startLabel !== false && (\n                    <AreasLabels<Datum, ExtraProps>\n                        getLabel={startLabel}\n                        series={series}\n                        position=\"start\"\n                        padding={startLabelPadding}\n                        color={startLabelTextColor}\n                    />\n                )}\n                {endLabel !== false && (\n                    <AreasLabels<Datum, ExtraProps>\n                        getLabel={endLabel}\n                        series={series}\n                        position=\"end\"\n                        padding={endLabelPadding}\n                        color={endLabelTextColor}\n                    />\n                )}\n            </Fragment>\n        )\n    }\n\n    const customLayerProps: AreaBumpCustomLayerProps<Datum, ExtraProps> = useMemo(\n        () => ({\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n            series,\n            xScale,\n            areaGenerator,\n        }),\n        [innerWidth, innerHeight, outerWidth, outerHeight, series, xScale, areaGenerator]\n    )\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ref={forwardedRef}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const AreaBump = forwardRef(\n    <\n        Datum extends AreaBumpDatum = DefaultAreaBumpDatum,\n        ExtraProps extends AreaBumpSerieExtraProps = Record<string, unknown>,\n    >(\n        {\n            isInteractive = areaBumpSvgDefaultProps.isInteractive,\n            animate = areaBumpSvgDefaultProps.animate,\n            motionConfig = areaBumpSvgDefaultProps.motionConfig,\n            theme,\n            renderWrapper,\n            ...props\n        }: AreaBumpSvgProps<Datum, ExtraProps>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <Container\n            {...{\n                animate,\n                isInteractive,\n                motionConfig,\n                renderWrapper,\n                theme,\n            }}\n        >\n            <InnerAreaBump<Datum, ExtraProps>\n                isInteractive={isInteractive}\n                {...props}\n                forwardedRef={ref}\n            />\n        </Container>\n    )\n) as <\n    Datum extends AreaBumpDatum = DefaultAreaBumpDatum,\n    ExtraProps extends AreaBumpSerieExtraProps = Record<string, unknown>,\n>(\n    props: WithChartRef<AreaBumpSvgProps<Datum, ExtraProps>, SVGSVGElement>\n) => ReactElement\n","import { forwardRef, Ref, ReactElement } from 'react'\nimport { ResponsiveWrapper, ResponsiveProps, WithChartRef } from '@nivo/core'\nimport {\n    AreaBumpDatum,\n    AreaBumpSerieExtraProps,\n    AreaBumpSvgProps,\n    DefaultAreaBumpDatum,\n} from './types'\nimport { AreaBump } from './AreaBump'\n\nexport const ResponsiveAreaBump = forwardRef(\n    <\n        Datum extends AreaBumpDatum = DefaultAreaBumpDatum,\n        ExtraProps extends AreaBumpSerieExtraProps = Record<string, unknown>,\n    >(\n        {\n            defaultWidth,\n            defaultHeight,\n            onResize,\n            debounceResize,\n            ...props\n        }: ResponsiveProps<AreaBumpSvgProps<Datum, ExtraProps>>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultHeight}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }) => (\n                <AreaBump<Datum, ExtraProps> width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n) as <\n    Datum extends AreaBumpDatum = DefaultAreaBumpDatum,\n    ExtraProps extends AreaBumpSerieExtraProps = Record<string, unknown>,\n>(\n    props: WithChartRef<ResponsiveProps<AreaBumpSvgProps<Datum, ExtraProps>>, SVGSVGElement>\n) => ReactElement | null\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUO,ICqBDA,CAAA,GAAsB,SAAAC,CACxBC,CAAA;IAAkD,OAElDC,CAAA,CAAQ;MACJ,OAA2B,qBAAhBD,CAAA,GAAmCA,CAAA,GACvC;QAAA,OAAMA,CAAW;MAAA,CAC5B;IAAA,GAAG,CAACA,CAAA,EAAa;EAAA;EA4HRE,CAAA,GAAU,SAAAC,CAAHC,CAAA;IAqDd,IAjDFC,CAAA,GAAKD,CAAA,CAALE,KAAA;MACAC,CAAA,GAAMH,CAAA,CAANI,MAAA;MACAC,CAAA,GAAIL,CAAA,CAAJM,IAAA;MACAC,CAAA,GAAaP,CAAA,CAAbQ,aAAA;MACAC,CAAA,GAAQT,CAAA,CAARU,QAAA;MACAC,CAAA,GAAaX,CAAA,CAAbY,aAAA;MACAC,CAAA,GAAab,CAAA,CAAbc,aAAA;MACAC,CAAA,GAASf,CAAA,CAATgB,SAAA;MACAC,CAAA,GAAejB,CAAA,CAAfkB,eAAA;MACAC,CAAA,GAAiBnB,CAAA,CAAjBoB,iBAAA;MACAC,CAAA,GAAMrB,CAAA,CAANsB,MAAA;MACAC,CAAA,GAAOvB,CAAA,CAAPwB,OAAA;MACAC,CAAA,GAAazB,CAAA,CAAb0B,aAAA;MACAC,CAAA,GAAe3B,CAAA,CAAf4B,eAAA;MACAC,CAAA,GAAS7B,CAAA,CAAT8B,SAAA;MACAC,CAAA,GAAe/B,CAAA,CAAfgC,eAAA;MACAC,CAAA,GAAiBjC,CAAA,CAAjBkC,iBAAA;MACAC,CAAA,GAAUnC,CAAA,CAAVoC,UAAA;MACAC,CAAA,GAAgBrC,CAAA,CAAhBsC,gBAAA;MACAC,CAAA,GAAsBvC,CAAA,CAAtBwC,sBAAA;MACAC,CAAA,GAAwBzC,CAAA,CAAxB0C,wBAAA;MACAC,CAAA,GAAgB3C,CAAA,CAAhB4C,gBAAA;MACAC,CAAA,GAAa7C,CAAA,CAAb8C,aAAA;MACAC,CAAA,GAAqB/C,CAAA,CAArBgD,qBAAA;MA2BAC,CAAA,GAA4CrD,CAAA,CAAmBmD,CAAA;MAAxDG,CAAA,GAAcD,CAAA;MAAEE,CAAA,GAAiBF,CAAA;MACxCnD,CAAA,GAA4CF,CAAA,CAAmBmD,CAAA;MAAxDK,CAAA,GAActD,CAAA;MAAEuD,CAAA,GAAiBvD,CAAA;MAExCwD,CAAA,GAIIzD,CAAA,CACA;QAAA,ODrNqB,UAAHD,CAAA;UAcpB,IAbFC,CAAA,GAAKD,CAAA,CAALM,KAAA;YACAqD,CAAA,GAAM3D,CAAA,CAANQ,MAAA;YACAJ,CAAA,GAAIJ,CAAA,CAAJU,IAAA;YACAL,CAAA,GAAQL,CAAA,CAARc,QAAA;YACAP,CAAA,GAAaP,CAAA,CAAbgB,aAAA;YACAP,CAAA,GAAaT,CAAA,CAAbkB,aAAA;YASMP,CAAA,GAAa,IAAIiD,GAAA;YACjB/C,CAAA,GAAa,IAAI+C,GAAA;UAEvBxD,CAAA,CAAKyD,OAAA,CAAQ,UAAA7D,CAAA;YACTA,CAAA,CAAMU,IAAA,CAAKmD,OAAA,CAAQ,UAAA7D,CAAA;cACfW,CAAA,CAAWmD,GAAA,CAAI9D,CAAA,CAAM+D,CAAA,GACL,SAAZ/D,CAAA,CAAMgE,CAAA,IACNnD,CAAA,CAAWiD,GAAA,CAAI9D,CAAA,CAAMgE,CAAA,CAE7B;YAAA,EACJ;UAAA;UAEA,IAAMjD,CAAA,GAAwBkD,KAAA,CAAMC,IAAA,CAAKvD,CAAA;YACnCM,CAAA,GAASkD,CAAA,CACXC,CAAA,GAAyBC,MAAA,CAAOtD,CAAA,EAASuD,KAAA,CAAM,CAAC,GAAGrE,CAAA,GAAQsE,OAAA,CAAQhE,CAAA;YAGjEY,CAAA,GAAoB8C,KAAA,CAAMC,IAAA,CAAKrD,CAAA,EAAY2D,IAAA,CAAK,UAACxE,CAAA,EAAGC,CAAA;cAAC,OAAKD,CAAA,GAAIC,CAAA;YAAA;YAC9DoB,CAAA,GAAS8C,CAAA,CACXC,CAAA,GAAqBC,MAAA,CAAOlD,CAAA,EAASmD,KAAA,CAAM,CAAC,GAAGX,CAAA,GAASY,OAAA,CAAQ9D,CAAA;YAG9Dc,CAAA,GAAmBN,CAAA,CAAOwD,IAAA,KAASC,IAAA,CAAKC,GAAA,CAAe,KAAXtE,CAAA,EAAgB;UA2DlE,OAAO;YACHuE,MAAA,EAzDAxE,CAAA,CAAKyE,GAAA,CAAI,UAAA7E,CAAA;cACL,IAAM2D,CAAA,GAGF;gBACAmB,EAAA,EAAI9E,CAAA,CAAS8E,EAAA;gBACbpE,IAAA,EAAMV,CAAA;gBACN+E,MAAA,EAAQ;gBACRC,UAAA,EAAY;cAAA;cA6ChB,OA1CAhF,CAAA,CAASU,IAAA,CAAKmD,OAAA,CAAQ,UAACzD,CAAA,EAAOC,CAAA;gBAC1B,IAAIE,CAAA,GAAI;kBACJE,CAAA,GAAI;gBAEQ,SAAZL,CAAA,CAAM4D,CAAA,KACNzD,CAAA,GAAIU,CAAA,CAAOb,CAAA,CAAM2D,CAAA,GACjBtD,CAAA,GAAIY,CAAA,CAAOjB,CAAA,CAAM4D,CAAA;gBAGrB,IAAMrD,CAAA,GAA2C;kBAC7CmE,EAAA,EAAO9E,CAAA,CAAS8E,EAAA,SAAMzE,CAAA;kBACtB4E,KAAA,EAAOjF,CAAA;kBACPU,IAAA,EAAMN,CAAA;kBACN2D,CAAA,EAAGxD,CAAA;kBACHyD,CAAA,EAAAvD;gBAAA;gBAEJkD,CAAA,CAAMoB,MAAA,CAAOG,IAAA,CAAKvE,CAAA,GAGF,SAAZA,CAAA,CAAMoD,CAAA,KACI,MAAN1D,CAAA,GACAsD,CAAA,CAAMqB,UAAA,CAAWE,IAAA,CAAK,CAAC,GAAGvE,CAAA,CAAMqD,CAAA,KAEhCL,CAAA,CAAMqB,UAAA,CAAWE,IAAA,CAAK,CAACvE,CAAA,CAAMoD,CAAA,GAAIxC,CAAA,EAAkBZ,CAAA,CAAMqD,CAAA,KAIjEL,CAAA,CAAMqB,UAAA,CAAWE,IAAA,CAAK,CAACvE,CAAA,CAAMoD,CAAA,EAAGpD,CAAA,CAAMqD,CAAA,IAG5B,SAANzD,CAAA,KACIF,CAAA,KAAML,CAAA,CAASU,IAAA,CAAKyE,MAAA,GAAS,KAAK5E,CAAA,GAClCoD,CAAA,CAAMqB,UAAA,CAAWE,IAAA,CAAK,CAACjF,CAAA,EAAOU,CAAA,CAAMqD,CAAA,KAEpCL,CAAA,CAAMqB,UAAA,CAAWE,IAAA,CAAK,CAACvE,CAAA,CAAMoD,CAAA,GAAIxC,CAAA,EAAkBZ,CAAA,CAAMqD,CAAA,KAKjEL,CAAA,CAAMoB,MAAA,GAASpB,CAAA,CAAMoB,MAAA,CAAOK,MAAA,CAAO,UAAApF,CAAA;kBAAK,OAAgB,SAAZA,CAAA,CAAM+D,CAAA;gBAAA,EACtD;cAAA,IAEOJ,CACX;YAAA;YAIA0B,MAAA,EAAApE,CAAA;YACAqE,MAAA,EAAAjE;UAAA,CAER;QAAA,CCiHY,CAAiC;UAC7Bf,KAAA,EAAAD,CAAA;UACAG,MAAA,EAAAD,CAAA;UACAG,IAAA,EAAAD,CAAA;UACAK,QAAA,EAAAD,CAAA;UACAG,aAAA,EAAAD,CAAA;UACAG,aAAA,EAAAD;QAAA,EACF;MAAA,GACN,CAACZ,CAAA,EAAOE,CAAA,EAAQE,CAAA,EAAMI,CAAA,EAAUE,CAAA,EAAeE,CAAA;MAbvCsE,CAAA,GAAS7B,CAAA,CAAjBkB,MAAA;MACAY,CAAA,GAAM9B,CAAA,CAAN2B,MAAA;MACAI,CAAA,GAAM/B,CAAA,CAAN4B,MAAA;MAcEI,CAAA,GAtNe,UAAC1F,CAAA;QAAgC,OACtDC,CAAA,CACI;UAAA,OACI0F,CAAA,GACKC,KAAA,CAAwB,aAAlB5F,CAAA,GAA6BgE,CAAA,GAAa6B,CAAA,EAChDC,OAAA,CAAQ,UAAA9F,CAAA;YAAC,OAAa,SAATA,CAAA,CAAE,MAAwB,SAATA,CAAA,CAAE;UAAA;QAAA,GAEzC,CAACA,CAAA,EACJ;MAAA,CA8MqB,CAAiBW,CAAA;MAEjCoF,CAAA,GAAWC,CAAA,CAAqBvE,CAAA,EAAQ;MACxCwE,CAAA,GAvMY,UAAHjG,CAAA;QAkBb,IAjBFC,CAAA,GAASD,CAAA,CAAToB,SAAA;UACAhB,CAAA,GAAeJ,CAAA,CAAfsB,eAAA;UACAjB,CAAA,GAAiBL,CAAA,CAAjBwB,iBAAA;UACAjB,CAAA,GAAOP,CAAA,CAAP4B,OAAA;UACAnB,CAAA,GAAaT,CAAA,CAAb8B,aAAA;UACAnB,CAAA,GAAeX,CAAA,CAAfgC,eAAA;UACAnB,CAAA,GAAab,CAAA,CAAbkD,aAAA;UACAnC,CAAA,GAAcf,CAAA,CAAdkG,cAAA;UAaMjF,CAAA,GAAenB,CAAA,CAAmCG,CAAA;UAClDkB,CAAA,GAAqBrB,CAAA,CAAmCM,CAAA;UACxDiB,CAAA,GAAuBvB,CAAA,CAAmCO,CAAA;UAE1DkB,CAAA,GAAazB,CAAA,CAAmCS,CAAA;UAChDkB,CAAA,GAAmB3B,CAAA,CAAmCW,CAAA;UACtDkB,CAAA,GAAqB7B,CAAA,CAAmCa,CAAA;UAExDgF,CAAA,GAAiBhC,CAAA,CACnB,UAAC3D,CAAA;YAAY,OAAM;cACf4B,OAAA,EAASL,CAAA,CAAWvB,CAAA;cACpBoB,SAAA,EAAWH,CAAA,CAAajB,CAAA;YAAA,CAC3B;UAAA,GACD,CAACiB,CAAA,EAAcM,CAAA;UAEbyC,CAAA,GAAiBL,CAAA,CACnB,UAAC3D,CAAA;YAAY,OAAM;cACf4B,OAAA,EAASH,CAAA,CAAiBzB,CAAA;cAC1BoB,SAAA,EAAWD,CAAA,CAAmBnB,CAAA;YAAA,CACjC;UAAA,GACD,CAACmB,CAAA,EAAoBM,CAAA;UAEnBoE,CAAA,GAAmBlC,CAAA,CACrB,UAAC3D,CAAA;YAAY,OAAM;cACf4B,OAAA,EAASD,CAAA,CAAmB3B,CAAA;cAC5BoB,SAAA,EAAWC,CAAA,CAAqBrB,CAAA;YAAA,CACnC;UAAA,GACD,CAACqB,CAAA,EAAsBM,CAAA;QAG3B,OAAOgC,CAAA,CACH,UAAC3D,CAAA;UACG,OAAKa,CAAA,IAA2C,MAA1BE,CAAA,CAAeoE,MAAA,GACjCpE,CAAA,CAAeoF,QAAA,CAASnG,CAAA,CAAM8E,EAAA,IAAYd,CAAA,CAAehE,CAAA,IACtD6F,CAAA,CAAiB7F,CAAA,IAFkC2F,CAAA,CAAe3F,CAAA,CAG7E;QAAA,GACA,CAAC2F,CAAA,EAAgB3B,CAAA,EAAgB6B,CAAA,EAAkBhF,CAAA,EAAeE,CAAA,EAE1E;MAAA,CA4I0B,CAAiC;QACnDK,SAAA,EAAAD,CAAA;QACAG,eAAA,EAAAD,CAAA;QACAG,iBAAA,EAAAD,CAAA;QACAK,OAAA,EAAAD,CAAA;QACAG,aAAA,EAAAD,CAAA;QACAG,eAAA,EAAAD,CAAA;QACAmB,aAAA,EAAAD,CAAA;QACAiD,cAAA,EAAA5C;MAAA;MAGE8C,CAAA,GAAiDnG,CAAA,CACnD;QAAA,OACIsF,CAAA,CAAUV,GAAA,CAAI,UAAA7E,CAAA;UAAK,OAAAqG,CAAA,KACZrG,CAAA,EAAK;YACRsG,KAAA,EAAOP,CAAA,CAAS/F,CAAA,CAAMU,IAAA;UAAA,GACnBuF,CAAA,CAAcjG,CAAA,EAAM;QAAA,EACxB;MAAA,GACP,CAACuF,CAAA,EAAWQ,CAAA,EAAUE,CAAA;MAGpBM,CAAA,GAAQxC,CAAA;MACRyC,CAAA,GAAgBC,CAAA,CAAkBlE,CAAA,EAAYgE,CAAA;MAC9CG,EAAA,GAAsBD,CAAA,CAAkB1D,CAAA,EAAkBwD,CAAA;MAC1DI,EAAA,GAlKY,UAAH3G,CAAA;QAkBb,IAjBFC,CAAA,GAASD,CAAA,CAATkC,SAAA;UACA9B,CAAA,GAAeJ,CAAA,CAAfoC,eAAA;UACA/B,CAAA,GAAiBL,CAAA,CAAjBsC,iBAAA;UACA/B,CAAA,GAAgBP,CAAA,CAAhB0C,gBAAA;UACAjC,CAAA,GAAsBT,CAAA,CAAtB4C,sBAAA;UACAjC,CAAA,GAAwBX,CAAA,CAAxB8C,wBAAA;UACAjC,CAAA,GAAab,CAAA,CAAbkD,aAAA;UACAnC,CAAA,GAAcf,CAAA,CAAd4G,cAAA;UAaM3F,CAAA,GAAUnB,CAAA,CAAoBG,CAAA;UAC9BkB,CAAA,GAAgBrB,CAAA,CAAoBM,CAAA;UACpCiB,CAAA,GAAkBvB,CAAA,CAAoBO,CAAA;UAEtCkB,CAAA,GAAiBzB,CAAA,CAAoBS,CAAA;UACrCkB,CAAA,GAAuB3B,CAAA,CAAoBW,CAAA;UAC3CkB,CAAA,GAAyB7B,CAAA,CAAoBa,CAAA;UAE7CgF,CAAA,GAAiBhC,CAAA,CACnB,UAAC3D,CAAA;YAAY,OAAM;cACf6G,IAAA,EAAM5F,CAAA,CAAQjB,CAAA;cACd8G,WAAA,EAAavF,CAAA,CAAevB,CAAA;YAAA,CAC/B;UAAA,GACD,CAACiB,CAAA,EAASM,CAAA;UAERyC,CAAA,GAAiBL,CAAA,CACnB,UAAC3D,CAAA;YAAY,OAAM;cACf6G,IAAA,EAAM1F,CAAA,CAAcnB,CAAA;cACpB8G,WAAA,EAAarF,CAAA,CAAqBzB,CAAA;YAAA,CACrC;UAAA,GACD,CAACmB,CAAA,EAAeM,CAAA;UAEdoE,CAAA,GAAmBlC,CAAA,CACrB,UAAC3D,CAAA;YAAY,OAAM;cACf6G,IAAA,EAAMxF,CAAA,CAAgBrB,CAAA;cACtB8G,WAAA,EAAanF,CAAA,CAAuB3B,CAAA;YAAA,CACvC;UAAA,GACD,CAACqB,CAAA,EAAiBM,CAAA;QAGtB,OAAOgC,CAAA,CACH,UAAC3D,CAAA;UACG,OAAKa,CAAA,IAA2C,MAA1BE,CAAA,CAAeoE,MAAA,GACjCpE,CAAA,CAAeoF,QAAA,CAASnG,CAAA,CAAM8E,EAAA,IAAYd,CAAA,CAAehE,CAAA,IACtD6F,CAAA,CAAiB7F,CAAA,IAFkC2F,CAAA,CAAe3F,CAAA,CAG7E;QAAA,GACA,CAAC2F,CAAA,EAAgB3B,CAAA,EAAgB6B,CAAA,EAAkBhF,CAAA,EAAeE,CAAA,EAE1E;MAAA,CAuG0B,CAAiC;QACnDmB,SAAA,EAAAD,CAAA;QACAG,eAAA,EAAAD,CAAA;QACAG,iBAAA,EAAAD,CAAA;QACAK,gBAAA,EAAAD,CAAA;QACAG,sBAAA,EAAAD,CAAA;QACAG,wBAAA,EAAAD,CAAA;QACAK,aAAA,EAAAD,CAAA;QACA2D,cAAA,EAAApD;MAAA;MAEEuD,EAAA,GAAyC9G,CAAA,CAAQ;QACnD,IAAMD,CAAA,GAAsC;QAqB5C,OApBAoG,CAAA,CAAOvC,OAAA,CAAQ,UAAA5D,CAAA;UACXA,CAAA,CAAM8E,MAAA,CAAOlB,OAAA,CAAQ,UAAAF,CAAA;YAGjB,IAAMvD,CAAA,GAAmCiG,CAAA,KAClC1C,CAAA,EAAQ;cACXsB,KAAA,EAAAhF,CAAA;cACA+G,QAAA,EAAU1D,CAAA,CAAe6C,QAAA,CAASlG,CAAA,CAAM6E,EAAA;cACxCmC,UAAA,EAAY3D,CAAA,CAAe6B,MAAA,GAAS,MAAM7B,CAAA,CAAe6C,QAAA,CAASlG,CAAA,CAAM6E,EAAA;YAAA;YAE5E1E,CAAA,CAAMkG,KAAA,GAAQE,CAAA,CAAcpG,CAAA,GAC5BA,CAAA,CAAM8G,WAAA,GAAcR,EAAA,CAAoBtG,CAAA,GAExCJ,CAAA,CAAIkF,IAAA,CAAImB,CAAA,CACD,IAAAjG,CAAA,EACAuG,EAAA,CAAcvG,CAAA,GAEzB;UAAA,EACJ;QAAA,IAEOJ,CACX;MAAA,GAAG,CAACoG,CAAA,EAAQ9C,CAAA,EAAgBkD,CAAA,EAAeE,EAAA,EAAqBC,EAAA;IAEhE,OAAO;MACHtB,MAAA,EAAAG,CAAA;MACAF,MAAA,EAAAG,CAAA;MACAb,MAAA,EAAAwB,CAAA;MACArB,MAAA,EAAAgC,EAAA;MACAI,aAAA,EAAAzB,CAAA;MACAQ,cAAA,EAAA5C,CAAA;MACA8D,iBAAA,EAAA7D,CAAA;MACAqD,cAAA,EAAApD,CAAA;MACA6D,iBAAA,EAAA5D;IAAA,CAER;EAAA;EAEaD,CAAA,GAAuB,SAAA8D,CAAHtH,CAAA;IA2B3B,IAvBFK,CAAA,GAAKL,CAAA,CAALiF,KAAA;MACA1E,CAAA,GAAaP,CAAA,CAAbkD,aAAA;MACAzC,CAAA,GAAYT,CAAA,CAAZuH,YAAA;MACA5G,CAAA,GAAWX,CAAA,CAAXwH,WAAA;MACA3G,CAAA,GAAYb,CAAA,CAAZyH,YAAA;MACA1G,CAAA,GAAWf,CAAA,CAAX0H,WAAA;MACAzG,CAAA,GAASjB,CAAA,CAAT2H,SAAA;MACAxG,CAAA,GAAOnB,CAAA,CAAP4H,OAAA;MACAvG,CAAA,GAAarB,CAAA,CAAb6H,aAAA;MACAtG,CAAA,GAAiBvB,CAAA,CAAjBoH,iBAAA;MACa3F,CAAA,GAAOzB,CAAA,CAApB8H,WAAA;MAcAnG,CAAA,GAA8CI,CAAA;MAAtC4D,CAAA,GAAoBhE,CAAA,CAApBoG,oBAAA;MAAsB/D,CAAA,GAAWrC,CAAA,CAAXqG,WAAA;MAExBnC,CAAA,GAAmBlC,CAAA,CACrB,UAAC3D,CAAA;QACG2F,CAAA,CAAqBvF,CAAA,CAAcqB,CAAA,EAAS;UAAEwD,KAAA,EAAA5E;QAAA,IAAUL,CAAA,GACxDuB,CAAA,CAAkB,CAAClB,CAAA,CAAMyE,EAAA,YACzBrE,CAAA,IAAAA,CAAA,CAAeJ,CAAA,EAAOL,CAAA,CAC1B;MAAA,GACA,CAACK,CAAA,EAAOI,CAAA,EAAckF,CAAA,EAAsBpE,CAAA,EAAmBE,CAAA;MAG7DI,CAAA,GAAkB8B,CAAA,CACpB,UAAC3D,CAAA;QACG2F,CAAA,CAAqBvF,CAAA,CAAcqB,CAAA,EAAS;UAAEwD,KAAA,EAAA5E;QAAA,IAAUL,CAAA,WACxDW,CAAA,IAAAA,CAAA,CAAcN,CAAA,EAAOL,CAAA,CACxB;MAAA,GACD,CAACK,CAAA,EAAOM,CAAA,EAAagF,CAAA,EAAsBlE,CAAA;MAGzCsC,CAAA,GAAmBJ,CAAA,CACrB,UAAC3D,CAAA;QACGgE,CAAA,IACAzC,CAAA,CAAkB,aAClBV,CAAA,IAAAA,CAAA,CAAeR,CAAA,EAAOL,CAAA,CACzB;MAAA,GACD,CAACK,CAAA,EAAOQ,CAAA,EAAcmD,CAAA,EAAazC,CAAA;MAGjCyE,CAAA,GAAkBrC,CAAA,CACpB,UAAC3D,CAAA;QAAA,QACGe,CAAA,IAAAA,CAAA,CAAcV,CAAA,EAAOL,CAAA,CACzB;MAAA,GACA,CAACK,CAAA,EAAOU,CAAA;MAGN0F,CAAA,GAAgB9C,CAAA,CAClB,UAAC3D,CAAA;QAAA,QACGiB,CAAA,IAAAA,CAAA,CAAYZ,CAAA,EAAOL,CAAA,CACvB;MAAA,GACA,CAACK,CAAA,EAAOY,CAAA;MAGNgB,CAAA,GAAc0B,CAAA,CAChB,UAAC3D,CAAA;QAAA,QACGmB,CAAA,IAAAA,CAAA,CAAUd,CAAA,EAAOL,CAAA,CACrB;MAAA,GACA,CAACK,CAAA,EAAOc,CAAA;MAGNiD,CAAA,GAAoBT,CAAA,CACtB,UAAC3D,CAAA;QAAA,QACGqB,CAAA,IAAAA,CAAA,CAAgBhB,CAAA,EAAOL,CAAA,CAC3B;MAAA,GACA,CAACK,CAAA,EAAOgB,CAAA;IAGZ,OAAOpB,CAAA,CACH;MAAA,OAAO;QACHsH,YAAA,EAAchH,CAAA,GAAgBsF,CAAA,QAAmB;QACjD2B,WAAA,EAAajH,CAAA,GAAgBsB,CAAA,QAAkB;QAC/C4F,YAAA,EAAclH,CAAA,GAAgBwD,CAAA,QAAmB;QACjD2D,WAAA,EAAanH,CAAA,GAAgByF,CAAA,QAAkB;QAC/C2B,SAAA,EAAWpH,CAAA,GAAgBkG,CAAA,QAAgB;QAC3CmB,OAAA,EAASrH,CAAA,GAAgB0B,CAAA,QAAc;QACvC4F,aAAA,EAAetH,CAAA,GAAgB6D,CAAA,QAAoB;MAAA,CACtD;IAAA,GACD,CACI7D,CAAA,EACAsF,CAAA,EACAhE,CAAA,EACAkC,CAAA,EACAiC,CAAA,EACAS,CAAA,EACAxE,CAAA,EACAmC,CAAA,EAGZ;EAAA;EAEaX,CAAA,GAAuB,SAAAwE,CAAHjI,CAAA;IA6B3B,IAzBFK,CAAA,GAAKL,CAAA,CAALkI,KAAA;MACA3H,CAAA,GAAaP,CAAA,CAAbkD,aAAA;MACAzC,CAAA,GAAYT,CAAA,CAAZuH,YAAA;MACA5G,CAAA,GAAWX,CAAA,CAAXwH,WAAA;MACA3G,CAAA,GAAYb,CAAA,CAAZyH,YAAA;MACA1G,CAAA,GAAWf,CAAA,CAAX0H,WAAA;MACAzG,CAAA,GAASjB,CAAA,CAAT2H,SAAA;MACAxG,CAAA,GAAOnB,CAAA,CAAP4H,OAAA;MACAvG,CAAA,GAAarB,CAAA,CAAb6H,aAAA;MACAtG,CAAA,GAAiBvB,CAAA,CAAjBqH,iBAAA;MACA5F,CAAA,GAAiBzB,CAAA,CAAjBoH,iBAAA;MACczF,CAAA,GAAO3B,CAAA,CAArBmI,YAAA;MAeAxC,CAAA,GAA8C5D,CAAA;MAAtCiC,CAAA,GAAoB2B,CAAA,CAApBoC,oBAAA;MAAsBlC,CAAA,GAAWF,CAAA,CAAXqC,WAAA;MAExBnG,CAAA,GAAmB8B,CAAA,CACrB,UAAC3D,CAAA;QACGgE,CAAA,CAAqB5D,CAAA,CAAcuB,CAAA,EAAS;UAAEuG,KAAA,EAAA7H;QAAA,IAAUL,CAAA,GACxDuB,CAAA,CAAkB,CAAClB,CAAA,CAAMyE,EAAA,IACzBrD,CAAA,CAAkB,CAACpB,CAAA,CAAM4E,KAAA,CAAMH,EAAA,YAC/BrE,CAAA,IAAAA,CAAA,CAAeJ,CAAA,EAAOL,CAAA,CAC1B;MAAA,GACA,CAACgE,CAAA,EAAsBrC,CAAA,EAAStB,CAAA,EAAOkB,CAAA,EAAmBE,CAAA,EAAmBhB,CAAA;MAG3EsD,CAAA,GAAkBJ,CAAA,CACpB,UAAC3D,CAAA;QACGgE,CAAA,CAAqB5D,CAAA,CAAcuB,CAAA,EAAS;UAAEuG,KAAA,EAAA7H;QAAA,IAAUL,CAAA,WACxDW,CAAA,IAAAA,CAAA,CAAcN,CAAA,EAAOL,CAAA,CACxB;MAAA,GACD,CAACgE,CAAA,EAAsBrC,CAAA,EAAStB,CAAA,EAAOM,CAAA;MAGrCqF,CAAA,GAAmBrC,CAAA,CACrB,UAAC3D,CAAA;QACG6F,CAAA,IACAtE,CAAA,CAAkB,KAClBE,CAAA,CAAkB,aAClBZ,CAAA,IAAAA,CAAA,CAAeR,CAAA,EAAOL,CAAA,CAC1B;MAAA,GACA,CAAC6F,CAAA,EAAatE,CAAA,EAAmBE,CAAA,EAAmBZ,CAAA,EAAcR,CAAA;MAGhEoG,CAAA,GAAkB9C,CAAA,CACpB,UAAC3D,CAAA;QAAA,QACGe,CAAA,IAAAA,CAAA,CAAcV,CAAA,EAAOL,CAAA,CACzB;MAAA,GACA,CAACK,CAAA,EAAOU,CAAA;MAGNkB,CAAA,GAAgB0B,CAAA,CAClB,UAAC3D,CAAA;QAAA,QACGiB,CAAA,IAAAA,CAAA,CAAYZ,CAAA,EAAOL,CAAA,CACvB;MAAA,GACA,CAACK,CAAA,EAAOY,CAAA;MAGNmD,CAAA,GAAcT,CAAA,CAChB,UAAC3D,CAAA;QAAA,QACGmB,CAAA,IAAAA,CAAA,CAAUd,CAAA,EAAOL,CAAA,CACrB;MAAA,GACA,CAACK,CAAA,EAAOc,CAAA;MAGNgB,CAAA,GAAoBwB,CAAA,CACtB,UAAC3D,CAAA;QAAA,QACGqB,CAAA,IAAAA,CAAA,CAAgBhB,CAAA,EAAOL,CAAA,CAC3B;MAAA,GACA,CAACK,CAAA,EAAOgB,CAAA;IAGZ,OAAOpB,CAAA,CACH;MAAA,OAAO;QACHsH,YAAA,EAAchH,CAAA,GAAgBsB,CAAA,QAAmB;QACjD2F,WAAA,EAAajH,CAAA,GAAgBwD,CAAA,QAAkB;QAC/C0D,YAAA,EAAclH,CAAA,GAAgByF,CAAA,QAAmB;QACjD0B,WAAA,EAAanH,CAAA,GAAgBkG,CAAA,QAAkB;QAC/CkB,SAAA,EAAWpH,CAAA,GAAgB0B,CAAA,QAAgB;QAC3C2F,OAAA,EAASrH,CAAA,GAAgB6D,CAAA,QAAc;QACvCyD,aAAA,EAAetH,CAAA,GAAgB4B,CAAA,QAAoB;MAAA,CACtD;IAAA,GACD,CACI5B,CAAA,EACAsB,CAAA,EACAkC,CAAA,EACAiC,CAAA,EACAS,CAAA,EACAxE,CAAA,EACAmC,CAAA,EACAjC,CAAA,EAGZ;EAAA;EAEauB,CAAA,GAAsB,SAAA0E,CAAHpI,CAAA;IAe1B,IAXF2D,CAAA,GAAM3D,CAAA,CAAN4E,MAAA;MACAxE,CAAA,GAAQJ,CAAA,CAARqI,QAAA;MACAhI,CAAA,GAAOL,CAAA,CAAPuE,OAAA;MACAhE,CAAA,GAAKP,CAAA,CAALsG,KAAA;MACA7F,CAAA,GAAQT,CAAA,CAARsI,QAAA;MAQM3H,CAAA,GAAQoD,CAAA;MACRlD,CAAA,GAAW4F,CAAA,CAAkBlG,CAAA,EAAOI,CAAA;IAE1C,OAAOV,CAAA,CAAQ;MACX,IAAID,CAAA,EACAC,CAAA;MACa,YAAbG,CAAA,IACAJ,CAAA,GAAa,OACbC,CAAA,IAA2B,IAAXI,CAAA,KAEhBL,CAAA,GAAa,SACbC,CAAA,GAAgBI,CAAA;MAGpB,IAAME,CAAA,GAA6C;MA6BnD,OA5BAoD,CAAA,CAAOE,OAAA,CAAQ,UAAAF,CAAA;QACX,IAAItD,CAAA,GAAQsD,CAAA,CAAMmB,EAAA;QACM,qBAAbrE,CAAA,KACPJ,CAAA,GAAQI,CAAA,CAASkD,CAAA,CAAMjD,IAAA;QAG3B,IAAMC,CAAA,GACW,YAAbP,CAAA,GACMuD,CAAA,CAAMqB,UAAA,CAAW,KACjBrB,CAAA,CAAMqB,UAAA,CAAWrB,CAAA,CAAMqB,UAAA,CAAWG,MAAA,GAAS;QAGlC,UAAV,QAALxE,CAAA,QAAK,IAALA,CAAA,CAAQ,OAA8B,kBAAfA,CAAA,YAAAA,CAAA,CAAQ,OAInCJ,CAAA,CAAO2E,IAAA,CAAK;UACRJ,EAAA,EAAInB,CAAA,CAAMmB,EAAA;UACVyD,KAAA,EAAAlI,CAAA;UACA0D,CAAA,EAAGpD,CAAA,CAAM,KAAKV,CAAA;UACd+D,CAAA,EAAGrD,CAAA,CAAM;UACT2F,KAAA,EAAOzF,CAAA,CAAS8C,CAAA;UAChB/B,OAAA,EAAS+B,CAAA,CAAM/B,OAAA;UACfqD,KAAA,EAAAtB,CAAA;UACA6E,UAAA,EAAAxI;QAAA,EAER;MAAA,IAEOO,CACX;IAAA,GAAG,CAACoD,CAAA,EAAQvD,CAAA,EAAUC,CAAA,EAASQ,CAAA,EAAUJ,CAAA,EAC7C;EAAA;ECxkBM8E,CAAA,GAAuD;IACzDkD,aAAA,EAAe;EAAA;EC0CNjD,CAAA,GAGZa,CAAA,KA9CsF;IACnFqC,MAAA,EAAQ,CAAC,QAAQ,QAAQ,UAAU,SAAS,UAAU;IACtD9H,aAAA,EAAe;IACfE,QAAA,EAAU;IACVE,aAAA,EAAe;IACfE,aAAA,EAAe;IACfQ,MAAA,EAAQ;MAAEiH,MAAA,EAAQ;IAAA;IAClBvH,SAAA,EAAW;IACXE,eAAA,EAAiB;IACjBE,iBAAA,EAAmB;IACnBI,OAAA,EAAS;IACTE,aAAA,EAAe;IACfE,eAAA,EAAiB;IACjB4G,UAAA,GAAY;IACZC,iBAAA,EAAmB;IACnBC,mBAAA,EAAqB;MAAE5E,IAAA,EAAM;IAAA;IAC7B6E,QAAA,GAAU;IACVC,eAAA,EAAiB;IACjBC,iBAAA,EAAmB;MAAE/E,IAAA,EAAM;IAAA;IAC3BhC,SAAA,EAAW;IACXE,eAAA,EAAiB;IACjBE,iBAAA,EAAmB;IACnBE,UAAA,EAAY;MAAE0B,IAAA,EAAM;IAAA;IACpBxB,gBAAA,EAAkB;IAClBE,sBAAA,EAAwB;IACxBE,wBAAA,EAA0B;IAC1BE,gBAAA,EAAkB;MAAEkB,IAAA,EAAM;MAAegF,SAAA,EAAW,CAAC,CAAC,UAAU;IAAA;IAChEC,WAAA,GAAa;IACbC,WAAA,GAAa;IACbC,OAAA,EAAS,CAAE;IACXC,SAAA,EAAW;IACXC,UAAA,EAAY,CAAE;IACdC,QAAA,EAAU,CAAE;IACZtG,aAAA,GAAe;IACfE,qBAAA,EAAuB;IACvB0E,WAAA,ECjCuB,SAAAA,CAAH9H,CAAA;MAAA,IACpBC,CAAA,GAAKD,CAAA,CAALiF,KAAA;MAAK,OAEL1C,CAAA,CAACN,CAAA,EAAY;QACT,4BAAwBhC,CAAA,CAAMS,IAAA,CAAKoE,EAAA;QACnCA,EAAA,EAAI7E,CAAA,CAAMS,IAAA,CAAKoE,EAAA;QACf2E,UAAA,GAAY;QACZnD,KAAA,EAAOrG,CAAA,CAAMqG;MAAA,EACf;IAAA;ID0BF6B,YAAA,EEjBW9H,CAAA,CAhBU,UAAHL,CAAA;MAEsB,IADxCC,CAAA,GAAKD,CAAA,CAALkI,KAAA;MAEA,OACI3F,CAAA,CAACN,CAAA,EAAY;QACT6C,EAAA,EACIrC,CAAA;UAAAiH,QAAA,GAAM,OACCnH,CAAA;YAAAmH,QAAA,EAASzJ,CAAA,CAAMS,IAAA,CAAKqD;UAAA,IAAgB,SAAAxB,CAAA;YAAAmH,QAAA,EAASzJ,CAAA,CAAMS,IAAA,CAAKsD;UAAA;QAAA;QAGnEyF,UAAA,GAAY;QACZnD,KAAA,EAAOrG,CAAA,CAAMgF,KAAA,CAAMqB;MAAA,EAG/B;IAAA;IFoBIqD,OAAA,GAAS;IACTC,SAAA,GAAW;IACXC,IAAA,EAAM;IACNC,aAAA,GAAe;EAAA,GAOM;IACrBC,cAAA,EDxCiB,SAAAA,CAAH/J,CAAA;MAEmB,IADjCC,CAAA,GAAKD,CAAA,CAALkI,KAAA;QAEAvE,CAAA,GAA0ChD,CAAA;QAAlCP,CAAA,GAAOuD,CAAA,CAAPqG,OAAA;QAAiB3J,CAAA,GAAYsD,CAAA,CAApBsG,MAAA;QAEX1J,CAAA,GAAgBsC,CAAA,CAMnB;UACCkB,CAAA,EAAG9D,CAAA,CAAM8D,CAAA;UACTC,CAAA,EAAG/D,CAAA,CAAM+D,CAAA;UACTkG,MAAA,EAAQjK,CAAA,CAAM4G,IAAA,GAAO;UACrBP,KAAA,EAAOrG,CAAA,CAAMqG,KAAA;UACbQ,WAAA,EAAa7G,CAAA,CAAM6G,WAAA;UACnBmD,MAAA,EAAQ5J,CAAA;UACR8J,SAAA,GAAY/J;QAAA;MAGhB,OACImC,CAAA,CAACQ,CAAA,CAASqH,MAAA,EAAM;QACZ,eAAsB,WAAAnK,CAAA,CAAMgF,KAAA,CAAMH,EAAA,SAAM7E,CAAA,CAAMS,IAAA,CAAKqD,CAAA;QACnDsG,EAAA,EAAI9J,CAAA,CAAcwD,CAAA;QAClBuG,EAAA,EAAI/J,CAAA,CAAcyD,CAAA;QAClBzD,CAAA,EAAG0C,CAAA,CAAG1C,CAAA,CAAc2J,MAAA,EAAQ,UAAAlK,CAAA;UAAC,OAAI0E,IAAA,CAAK6F,GAAA,CAAIvK,CAAA,EAAG;QAAA;QAC7CwK,IAAA,EAAMjK,CAAA,CAAc+F,KAAA;QACpBmE,WAAA,EAAalK,CAAA,CAAcuG,WAAA;QAC3B4D,MAAA,EAAQzK,CAAA,CAAMiH,WAAA;QACdyD,KAAA,EAAOpF;MAAA,EAGnB;IAAA;ICQIyE,OAAA,GAAS;IACTY,YAAA,EAAc;EAAA;EG1BLnF,CAAA,GAAO,SAAAoF,CAAH7K,CAAA;IAemB,IAdhCC,CAAA,GAAKD,CAAA,CAALiF,KAAA;MACAtB,CAAA,GAAa3D,CAAA,CAAbmH,aAAA;MACA/G,CAAA,GAAKJ,CAAA,CAAL8K,KAAA;MACAzK,CAAA,GAAaL,CAAA,CAAbkD,aAAA;MACA3C,CAAA,GAAYP,CAAA,CAAZuH,YAAA;MACA9G,CAAA,GAAWT,CAAA,CAAXwH,WAAA;MACAzG,CAAA,GAAYf,CAAA,CAAZyH,YAAA;MACAxG,CAAA,GAAWjB,CAAA,CAAX0H,WAAA;MACAvG,CAAA,GAASnB,CAAA,CAAT2H,SAAA;MACAtG,CAAA,GAAOrB,CAAA,CAAP4H,OAAA;MACArG,CAAA,GAAavB,CAAA,CAAb6H,aAAA;MACApG,CAAA,GAAiBzB,CAAA,CAAjBoH,iBAAA;MACAzF,CAAA,GAAW3B,CAAA,CAAX8H,WAAA;MACAnC,CAAA,GAAO3F,CAAA,CAAP2J,OAAA;MAEM3F,CAAA,GAAWR,CAAA,CAAwC;QACrDyB,KAAA,EAAAhF,CAAA;QACAiD,aAAA,EAAA7C,CAAA;QACAkH,YAAA,EAAAhH,CAAA;QACAiH,WAAA,EAAA/G,CAAA;QACAgH,YAAA,EAAA1G,CAAA;QACA2G,WAAA,EAAAzG,CAAA;QACA0G,SAAA,EAAAxG,CAAA;QACAyG,OAAA,EAAAvG,CAAA;QACAwG,aAAA,EAAAtG,CAAA;QACA6F,iBAAA,EAAA3F,CAAA;QACAqG,WAAA,EAAAnG;MAAA;MAGJkE,CAAA,GAA0ClF,CAAA;MAAlCkB,CAAA,GAAOgE,CAAA,CAAPmE,OAAA;MAAiBjG,CAAA,GAAY8B,CAAA,CAApBoE,MAAA;MAEXjE,CAAA,GAAWrC,CAAA,CAAc1D,CAAA,CAAM+E,UAAA,KAAe;MAE9CyB,CAAA,GAAe5F,CAAA,CAAgBmF,CAAA;MAC/BjE,CAAA,GAAgBc,CAAA,CAInB;QACCyD,KAAA,EAAOrG,CAAA,CAAMqG,KAAA;QACb1E,OAAA,EAAS3B,CAAA,CAAM2B,OAAA;QACfR,SAAA,EAAWnB,CAAA,CAAMmB,SAAA;QACjB6I,MAAA,EAAQlG,CAAA;QACRoG,SAAA,GAAYtI;MAAA;IAGhB,OACIY,CAAA,CAAAE,CAAA;MAAA+G,QAAA,EACI,CAAAnH,CAAA,CAACQ,CAAA,CAASgI,IAAA,EAAI;QACV,eAAqB,UAAA9K,CAAA,CAAM6E,EAAA;QAC3B0F,IAAA,EAAK;QACL7J,CAAA,EAAG8F,CAAA;QACHiE,MAAA,EAAQ3I,CAAA,CAAcuE,KAAA;QACtBmE,WAAA,EAAa1I,CAAA,CAAcX,SAAA;QAC3B4J,aAAA,EAAc;QACdC,aAAA,EAAelJ,CAAA,CAAcH,OAAA;QAC7B+I,KAAA,EAAO;UAAElC,aAAA,EAAe;QAAA;MAAA,IAE3BpI,CAAA,KAAkBsF,CAAA,IACfpD,CAAA;QACI,eAAqB,UAAAtC,CAAA,CAAM6E,EAAA,GAAiB;QAC5C0F,IAAA,EAAK;QACLE,MAAA,EAAO;QACPO,aAAA,EAAe;QACfR,WAAA,EAAarK,CAAA;QACbO,CAAA,EAAGqF,CAAA;QACHgF,aAAA,EAAc;QACdzD,YAAA,EAAcvD,CAAA,CAASuD,YAAA;QACvBC,WAAA,EAAaxD,CAAA,CAASwD,WAAA;QACtBC,YAAA,EAAczD,CAAA,CAASyD,YAAA;QACvBC,WAAA,EAAa1D,CAAA,CAAS0D,WAAA;QACtBC,SAAA,EAAW3D,CAAA,CAAS2D,SAAA;QACpBC,OAAA,EAAS5D,CAAA,CAAS4D,OAAA;QAClBC,aAAA,EAAe7D,CAAA,CAAS6D;MAAA;IAAA,EAK5C;EAAA;EC5FanC,CAAA,GAAc,SAAAwF,CAAHlL,CAAA;IAMkB,IALtCC,CAAA,GAAMD,CAAA,CAAN4E,MAAA;MACAjB,CAAA,GAAQ3D,CAAA,CAARsI,QAAA;MACAlI,CAAA,GAAQJ,CAAA,CAARqI,QAAA;MACAhI,CAAA,GAAOL,CAAA,CAAPuE,OAAA;MACAhE,CAAA,GAAKP,CAAA,CAALsG,KAAA;MAEM7F,CAAA,GAAQsD,CAAA;MACdlD,CAAA,GAA0CF,CAAA;MAAlCI,CAAA,GAAOF,CAAA,CAAPmJ,OAAA;MAAiB/I,CAAA,GAAYJ,CAAA,CAApBoJ,MAAA;MAEX9I,CAAA,GAASuC,CAAA,CAAuC;QAClDkB,MAAA,EAAA3E,CAAA;QACAqI,QAAA,EAAA3E,CAAA;QACA0E,QAAA,EAAAjI,CAAA;QACAmE,OAAA,EAAAlE,CAAA;QACAiG,KAAA,EAAA/F;MAAA;MAGEc,CAAA,GAAU8B,CAAA,CAKZhC,CAAA,CAAOgE,MAAA,EACPhE,CAAA,CAAO0D,GAAA,CAAI,UAAA7E,CAAA;QAAK,OAAK;UACjB+D,CAAA,EAAG/D,CAAA,CAAM+D,CAAA;UACTC,CAAA,EAAGhE,CAAA,CAAMgE,CAAA;UACTpC,OAAA,EAAS5B,CAAA,CAAM4B,OAAA;UACfqI,MAAA,EAAQhJ,CAAA;UACRkJ,SAAA,GAAYpJ;QAAA,CACd;MAAA;IAGN,OACIwB,CAAA,CAAAI,CAAA;MAAA+G,QAAA,EACKrI,CAAA,CAAQwD,GAAA,CAAI,UAAC7E,CAAA,EAAeC,CAAA;QACzB,IAAM0D,CAAA,GAAQxC,CAAA,CAAOlB,CAAA;QAErB,OACIsC,CAAA,CAACc,CAAA,EAAI;UACD,0BAAsBjD,CAAA,GAAY,MAAAuD,CAAA,CAAMsB,KAAA,CAAMH,EAAA;UAE9Cf,CAAA,EAAG/D,CAAA,CAAc+D,CAAA;UACjBC,CAAA,EAAGhE,CAAA,CAAcgE,CAAA;UACjBwE,UAAA,EAAY7E,CAAA,CAAM6E,UAAA;UAClB2C,gBAAA,EAAiB;UACjBvJ,OAAA,EAAS5B,CAAA,CAAc4B,OAAA;UACvB+I,KAAA,EAAKtE,CAAA,KACE5F,CAAA,CAAM2K,MAAA,CAAOC,IAAA,EAAI;YACpBb,IAAA,EAAM7G,CAAA,CAAM2C;UAAA;UACdoD,QAAA,EAED/F,CAAA,CAAM4E;QAAA,GAXF5E,CAAA,CAAMmB,EAAA;MAAA;IAAA,EAiBnC;EAAA;EC2EaiB,CAAA,GAAO1F,CAAA,CAtHF,UAAHL,CAAA;IAgBqB,IAfhCC,CAAA,GAAMD,CAAA,CAAN+E,MAAA;MACA1E,CAAA,GAAKL,CAAA,CAALM,KAAA;MACAC,CAAA,GAAMP,CAAA,CAANQ,MAAA;MACAC,CAAA,GAAMT,CAAA,CAANsL,MAAA;MACA3K,CAAA,GAAiBX,CAAA,CAAjBqH,iBAAA;MACAxG,CAAA,GAAiBb,CAAA,CAAjBoH,iBAAA;MACArG,CAAA,GAAYf,CAAA,CAAZuH,YAAA;MACAtG,CAAA,GAAWjB,CAAA,CAAXwH,WAAA;MACArG,CAAA,GAAYnB,CAAA,CAAZyH,YAAA;MACApG,CAAA,GAAWrB,CAAA,CAAX0H,WAAA;MACAnG,CAAA,GAASvB,CAAA,CAAT2H,SAAA;MACAlG,CAAA,GAAOzB,CAAA,CAAP4H,OAAA;MACAjG,CAAA,GAAa3B,CAAA,CAAb6H,aAAA;MACAlC,CAAA,GAAO3F,CAAA,CAAPuL,OAAA;MACAvH,CAAA,GAAKhE,CAAA,CAALwL,KAAA;MAEA3F,CAAA,GAAuC9D,CAAA;MAA/BF,CAAA,GAAagE,CAAA,CAAb4F,aAAA;MAAe1H,CAAA,GAAW8B,CAAA,CAAXmC,WAAA;MAEjBhC,CAAA,GAAmBrC,CAAA,CACrB,UAAC3D,CAAA,EAAqCC,CAAA;QAAsB,IAAA0D,CAAA;QACxD9B,CAAA,CACIzB,CAAA,CAAcuF,CAAA,EAAS;UAAEuC,KAAA,EAAAlI;QAAA,IACzB,CAACA,CAAA,CAAM+D,CAAA,GAAItD,CAAA,CAAOiL,IAAA,EAAa,SAAT/H,CAAA,GAAE3D,CAAA,CAAMgE,CAAA,IAACL,CAAA,GAAI,IAAIlD,CAAA,CAAOkL,GAAA,GAC9C,QAEJhL,CAAA,CAAkB,CAACX,CAAA,CAAM8E,EAAA,IACzBjE,CAAA,CAAkB,CAACb,CAAA,CAAMiF,KAAA,CAAMH,EAAA,YAC/B/D,CAAA,IAAAA,CAAA,CAAef,CAAA,EAAOC,CAAA,CACzB;MAAA,GACD,CACI4B,CAAA,EACA8D,CAAA,EACAlF,CAAA,CAAOiL,IAAA,EACPjL,CAAA,CAAOkL,GAAA,EACPhL,CAAA,EACAE,CAAA,EACAE,CAAA;MAIF0F,CAAA,GAAkB9C,CAAA,CACpB,UAAC3D,CAAA,EAAqCC,CAAA;QAAsB,IAAA0D,CAAA;QACxD9B,CAAA,CACIzB,CAAA,CAAcuF,CAAA,EAAS;UAAEuC,KAAA,EAAAlI;QAAA,IACzB,CAACA,CAAA,CAAM+D,CAAA,GAAItD,CAAA,CAAOiL,IAAA,EAAa,SAAT/H,CAAA,GAAE3D,CAAA,CAAMgE,CAAA,IAACL,CAAA,GAAI,IAAIlD,CAAA,CAAOkL,GAAA,GAC9C,QAEJhL,CAAA,CAAkB,CAACX,CAAA,CAAM8E,EAAA,IACzBjE,CAAA,CAAkB,CAACb,CAAA,CAAMiF,KAAA,CAAMH,EAAA,YAC/B7D,CAAA,IAAAA,CAAA,CAAcjB,CAAA,EAAOC,CAAA,CACxB;MAAA,GACD,CACI4B,CAAA,EACA8D,CAAA,EACAlF,CAAA,CAAOiL,IAAA,EACPjL,CAAA,CAAOkL,GAAA,EACPhL,CAAA,EACAE,CAAA,EACAI,CAAA;MAIFgB,CAAA,GAAmB0B,CAAA,CACrB,UAAC3D,CAAA,EAAqCC,CAAA;QAClC8D,CAAA,IACApD,CAAA,CAAkB,KAClBE,CAAA,CAAkB,aAClBM,CAAA,IAAAA,CAAA,CAAenB,CAAA,EAAOC,CAAA,CACzB;MAAA,GACD,CAAC8D,CAAA,EAAa5C,CAAA,EAAcR,CAAA,EAAmBE,CAAA;MAG7CuD,CAAA,GAAkBT,CAAA,CACpB,UAAC3D,CAAA,EAAqCC,CAAA;QAAA,QAClCoB,CAAA,IAAAA,CAAA,CAAcrB,CAAA,EAAOC,CAAA,CACzB;MAAA,GACA,CAACoB,CAAA;MAGCc,CAAA,GAAgBwB,CAAA,CAClB,UAAC3D,CAAA,EAAqCC,CAAA;QAAA,QAClCsB,CAAA,IAAAA,CAAA,CAAYvB,CAAA,EAAOC,CAAA,CACvB;MAAA,GACA,CAACsB,CAAA;MAGC4C,CAAA,GAAcR,CAAA,CAChB,UAAC3D,CAAA,EAAqCC,CAAA;QAAA,QAClCwB,CAAA,IAAAA,CAAA,CAAUzB,CAAA,EAAOC,CAAA,CACrB;MAAA,GACA,CAACwB,CAAA;MAGCY,CAAA,GAAoBsB,CAAA,CACtB,UAAC3D,CAAA,EAAqCC,CAAA;QAAA,QAClC0B,CAAA,IAAAA,CAAA,CAAgB3B,CAAA,EAAOC,CAAA,CAC3B;MAAA,GACA,CAAC0B,CAAA;IAGL,OACIY,CAAA,CAACe,CAAA,EAAQ;MACLsI,KAAA,EAAO3L,CAAA;MACPK,KAAA,EAAOD,CAAA;MACPG,MAAA,EAAQD,CAAA;MACRgH,YAAA,EAAcvB,CAAA;MACdwB,WAAA,EAAaf,CAAA;MACbgB,YAAA,EAAcxF,CAAA;MACdyF,WAAA,EAAatD,CAAA;MACbuD,SAAA,EAAWxF,CAAA;MACXyF,OAAA,EAASzD,CAAA;MACT0D,aAAA,EAAexF,CAAA;MACfmJ,KAAA,EAAOxH;IAAA,EAGnB;EAAA;EAAAiC,CAAA;EC1HMG,CAAA,GAAY,SAAAyF,CAAH7L,CAAA;IAkFT,IAjFF2D,CAAA,GAAI3D,CAAA,CAAJU,IAAA;MACAL,CAAA,GAAKL,CAAA,CAALM,KAAA;MACAC,CAAA,GAAMP,CAAA,CAANQ,MAAA;MACQG,CAAA,GAAaX,CAAA,CAArBsL,MAAA;MAAMzK,CAAA,GAAAb,CAAA,CACN0I,MAAA;MAAA3H,CAAA,QAAM,MAAAF,CAAA,GAAG2E,CAAA,CAAoBkD,MAAA,GAAM7H,CAAA;MAAAQ,CAAA,GAAArB,CAAA,CACnCY,aAAA;MAAAW,CAAA,QAAa,MAAAF,CAAA,GAAGmE,CAAA,CAAoB5E,aAAA,GAAaS,CAAA;MAAAsE,CAAA,GAAA3F,CAAA,CACjDc,QAAA;MAAAkD,CAAA,QAAQ,MAAA2B,CAAA,GAAGH,CAAA,CAAoB1E,QAAA,GAAQ6E,CAAA;MAAAE,CAAA,GAAA7F,CAAA,CACvCgB,aAAA;MAAAa,CAAA,QAAa,MAAAgE,CAAA,GAAGL,CAAA,CAAoBxE,aAAA,GAAa6E,CAAA;MAAA9B,CAAA,GAAA/D,CAAA,CACjDkB,aAAA;MAAA8E,CAAA,QAAa,MAAAjC,CAAA,GAAGyB,CAAA,CAAoBtE,aAAA,GAAa6C,CAAA;MAAA0C,CAAA,GAAAzG,CAAA,CACjD0B,MAAA;MAAAK,CAAA,QAAM,MAAA0E,CAAA,GAAGjB,CAAA,CAAoB9D,MAAA,GAAM+E,CAAA;MAAAxE,CAAA,GAAAjC,CAAA,CACnCoB,SAAA;MAAAgD,CAAA,QAAS,MAAAnC,CAAA,GAAGuD,CAAA,CAAoBpE,SAAA,GAASa,CAAA;MAAAE,CAAA,GAAAnC,CAAA,CACzCsB,eAAA;MAAA6C,CAAA,QAAe,MAAAhC,CAAA,GAAGqD,CAAA,CAAoBlE,eAAA,GAAea,CAAA;MAAAE,CAAA,GAAArC,CAAA,CACrDwB,iBAAA;MAAAmB,CAAA,QAAiB,MAAAN,CAAA,GAAGmD,CAAA,CAAoBhE,iBAAA,GAAiBa,CAAA;MAAAQ,CAAA,GAAA7C,CAAA,CACzD4B,OAAA;MAAAmB,CAAA,QAAO,MAAAF,CAAA,GAAG2C,CAAA,CAAoB5D,OAAA,GAAOiB,CAAA;MAAAI,CAAA,GAAAjD,CAAA,CACrC8B,aAAA;MAAAqB,CAAA,QAAa,MAAAF,CAAA,GAAGuC,CAAA,CAAoB1D,aAAA,GAAamB,CAAA;MAAAI,CAAA,GAAArD,CAAA,CACjDgC,eAAA;MAAAsB,CAAA,QAAe,MAAAD,CAAA,GAAGmC,CAAA,CAAoBxD,eAAA,GAAeqB,CAAA;MAAAgD,CAAA,GAAArG,CAAA,CACrD4I,UAAA;MAAArF,CAAA,QAAU,MAAA8C,CAAA,GAAGb,CAAA,CAAoBoD,UAAA,GAAUvC,CAAA;MAAAvG,CAAA,GAAAE,CAAA,CAI3C6I,iBAAA;MAAArF,CAAA,QAAiB,MAAA1D,CAAA,GAAG0F,CAAA,CAAoBqD,iBAAA,GAAiB/I,CAAA;MAAA2D,CAAA,GAAAzD,CAAA,CACzD8I,mBAAA;MAAApF,CAAA,QAAmB,MAAAD,CAAA,GAAG+B,CAAA,CAAoBsD,mBAAA,GAAmBrF,CAAA;MAAA8B,CAAA,GAAAvF,CAAA,CAI7D+I,QAAA;MAAA9C,CAAA,QAAQ,MAAAV,CAAA,GAAGC,CAAA,CAAoBuD,QAAA,GAAQxD,CAAA;MAAAa,CAAA,GAAApG,CAAA,CAIvCgJ,eAAA;MAAAzC,CAAA,QAAe,MAAAH,CAAA,GAAGZ,CAAA,CAAoBwD,eAAA,GAAe5C,CAAA;MAAAI,CAAA,GAAAxG,CAAA,CACrDiJ,iBAAA;MAAAvC,EAAA,QAAiB,MAAAF,CAAA,GAAGhB,CAAA,CAAoByD,iBAAA,GAAiBzC,CAAA;MAAAG,EAAA,GAAA3G,CAAA,CAIzD+J,cAAA;MAAAhD,EAAA,QAAc,MAAAJ,EAAA,GAAGnB,CAAA,CAAoBuE,cAAA,GAAcpD,EAAA;MAAAmF,EAAA,GAAA9L,CAAA,CAInDkC,SAAA;MAAA6J,EAAA,QAAS,MAAAD,EAAA,GAAGtG,CAAA,CAAoBtD,SAAA,GAAS4J,EAAA;MAAAE,EAAA,GAAAhM,CAAA,CACzCoC,eAAA;MAAA6J,EAAA,QAAe,MAAAD,EAAA,GAAGxG,CAAA,CAAoBpD,eAAA,GAAe4J,EAAA;MAAAE,EAAA,GAAAlM,CAAA,CACrDsC,iBAAA;MAAA6J,EAAA,QAAiB,MAAAD,EAAA,GAAG1G,CAAA,CAAoBlD,iBAAA,GAAiB4J,EAAA;MAAAE,EAAA,GAAApM,CAAA,CACzDwC,UAAA;MAAA6J,EAAA,QAAU,MAAAD,EAAA,GAAG5G,CAAA,CAAoBhD,UAAA,GAAU4J,EAAA;MAAAE,EAAA,GAAAtM,CAAA,CAI3C0C,gBAAA;MAAA6J,EAAA,QAAgB,MAAAD,EAAA,GAAG9G,CAAA,CAAoB9C,gBAAA,GAAgB4J,EAAA;MAAAE,EAAA,GAAAxM,CAAA,CACvD4C,sBAAA;MAAA6J,EAAA,QAAsB,MAAAD,EAAA,GAAGhH,CAAA,CAAoB5C,sBAAA,GAAsB4J,EAAA;MAAAE,EAAA,GAAA1M,CAAA,CACnE8C,wBAAA;MAAA6J,EAAA,QAAwB,MAAAD,EAAA,GAAGlH,CAAA,CAAoB1C,wBAAA,GAAwB4J,EAAA;MAAAE,EAAA,GAAA5M,CAAA,CACvEgD,gBAAA;MAAA6J,EAAA,QAAgB,MAAAD,EAAA,GAAGpH,CAAA,CAAoBxC,gBAAA,GAAgB4J,EAAA;MAAAE,EAAA,GAAA9M,CAAA,CAIvDmJ,WAAA;MAAA4D,EAAA,QAAW,MAAAD,EAAA,GAAGtH,CAAA,CAAoB2D,WAAA,GAAW2D,EAAA;MAAAE,EAAA,GAAAhN,CAAA,CAC7CoJ,WAAA;MAAA6D,EAAA,QAAW,MAAAD,EAAA,GAAGxH,CAAA,CAAoB4D,WAAA,GAAW4D,EAAA;MAAAE,EAAA,GAAAlN,CAAA,CAC7CqJ,OAAA;MAAA8D,EAAA,QAAO,MAAAD,EAAA,GAAG1H,CAAA,CAAoB6D,OAAA,GAAO6D,EAAA;MACrCE,EAAA,GAASpN,CAAA,CAATsJ,SAAA;MAAS+D,EAAA,GAAArN,CAAA,CACTuJ,UAAA;MAAA+D,EAAA,QAAU,MAAAD,EAAA,GAAG7H,CAAA,CAAoB+D,UAAA,GAAU8D,EAAA;MAAAE,EAAA,GAAAvN,CAAA,CAC3CwJ,QAAA;MAAAgE,EAAA,QAAQ,MAAAD,EAAA,GAAG/H,CAAA,CAAoBgE,QAAA,GAAQ+D,EAAA;MAAAE,EAAA,GAAAzN,CAAA,CACvCkD,aAAA;MAAAwK,EAAA,QAAa,MAAAD,EAAA,GAAGjI,CAAA,CAAoBtC,aAAA,GAAauK,EAAA;MAAAE,EAAA,GAAA3N,CAAA,CACjDoD,qBAAA;MAAAwK,EAAA,QAAqB,MAAAD,EAAA,GAAGnI,CAAA,CAAoBpC,qBAAA,GAAqBuK,EAAA;MACjEE,EAAA,GAAY7N,CAAA,CAAZuH,YAAA;MACAuG,EAAA,GAAW9N,CAAA,CAAXwH,WAAA;MACAuG,EAAA,GAAY/N,CAAA,CAAZyH,YAAA;MACAuG,EAAA,GAAWhO,CAAA,CAAX0H,WAAA;MACAuG,EAAA,GAASjO,CAAA,CAAT2H,SAAA;MACAuG,EAAA,GAAOlO,CAAA,CAAP4H,OAAA;MACAuG,EAAA,GAAanO,CAAA,CAAb6H,aAAA;MAAauG,EAAA,GAAApO,CAAA,CACb2J,OAAA;MAAA0E,EAAA,QAAO,MAAAD,EAAA,GAAG5I,CAAA,CAAoBmE,OAAA,GAAOyE,EAAA;MAAAE,EAAA,GAAAtO,CAAA,CACrC4J,SAAA;MAAA2E,EAAA,QAAS,MAAAD,EAAA,GAAG9I,CAAA,CAAoBoE,SAAA,GAAS0E,EAAA;MAAAE,EAAA,GAAAxO,CAAA,CACzC8H,WAAA;MAAA2G,EAAA,QAAW,MAAAD,EAAA,GAAGhJ,CAAA,CAAoBsC,WAAA,GAAW0G,EAAA;MAAAE,EAAA,GAAA1O,CAAA,CAI7CmI,YAAA;MAAAwG,EAAA,QAAY,MAAAD,EAAA,GAAGlJ,CAAA,CAAoB2C,YAAA,GAAYuG,EAAA;MAAAE,EAAA,GAAA5O,CAAA,CAI/C6J,IAAA;MAAAgF,EAAA,QAAI,MAAAD,EAAA,GAAGpJ,CAAA,CAAoBqE,IAAA,GAAI+E,EAAA;MAC/BE,EAAA,GAAY9O,CAAA,CAAZ+O,YAAA;MAIAC,EAAA,GAAqE/N,CAAA,CACjEZ,CAAA,EACAE,CAAA,EACAI,CAAA;MAHIsO,EAAA,GAAMD,EAAA,CAAN1D,MAAA;MAAQ4D,EAAA,GAAUF,EAAA,CAAVG,UAAA;MAAYC,EAAA,GAAWJ,EAAA,CAAXK,WAAA;MAAaC,EAAA,GAAUN,EAAA,CAAVO,UAAA;MAAYC,EAAA,GAAWR,EAAA,CAAXS,WAAA;MAMrDC,EAAA,GAUIxP,CAAA,CAA2B;QAC3BI,KAAA,EAAO4O,EAAA;QACP1O,MAAA,EAAQ4O,EAAA;QACR1O,IAAA,EAAAiD,CAAA;QACA/C,aAAA,EAAAW,CAAA;QACAT,QAAA,EAAAkD,CAAA;QACAhD,aAAA,EAAAa,CAAA;QACAX,aAAA,EAAA8E,CAAA;QACA5E,SAAA,EAAAgD,CAAA;QACA9C,eAAA,EAAA6C,CAAA;QACA3C,iBAAA,EAAAmB,CAAA;QACAjB,MAAA,EAAAK,CAAA;QACAH,OAAA,EAAAmB,CAAA;QACAjB,aAAA,EAAAqB,CAAA;QACAnB,eAAA,EAAAsB,CAAA;QACApB,SAAA,EAAA6J,EAAA;QACA3J,eAAA,EAAA6J,EAAA;QACA3J,iBAAA,EAAA6J,EAAA;QACA3J,UAAA,EAAA6J,EAAA;QACA3J,gBAAA,EAAA6J,EAAA;QACA3J,sBAAA,EAAA6J,EAAA;QACA3J,wBAAA,EAAA6J,EAAA;QACA3J,gBAAA,EAAA6J,EAAA;QACA3J,aAAA,EAAAwK,EAAA;QACAtK,qBAAA,EAAAwK;MAAA;MAjCA+B,EAAA,GAAMD,EAAA,CAAN9K,MAAA;MACAgL,EAAA,GAAMF,EAAA,CAAN3K,MAAA;MACA8K,EAAA,GAAMH,EAAA,CAANrK,MAAA;MACAyK,EAAA,GAAMJ,EAAA,CAANpK,MAAA;MACAyK,EAAA,GAAaL,EAAA,CAAbvI,aAAA;MACA6I,EAAA,GAAcN,EAAA,CAAd9I,cAAA;MACAqJ,EAAA,GAAcP,EAAA,CAAdxJ,cAAA;MACAgK,EAAA,GAAiBR,EAAA,CAAjBtI,iBAAA;MACA+I,EAAA,GAAiBT,EAAA,CAAjBrI,iBAAA;MA4BE+I,EAAA,GAA4C;QAC9CC,IAAA,EAAM;QACNC,IAAA,EAAM;QACNlF,MAAA,EAAQ;QACRmF,KAAA,EAAO;QACPxL,MAAA,EAAQ;QACRyL,IAAA,EAAM;MAAA;IAGNzP,CAAA,CAAOoF,QAAA,CAAS,YAChBiK,EAAA,CAAUC,IAAA,GACN9N,CAAA,CAACd,CAAA,EAAI;MAEDnB,KAAA,EAAO4O,EAAA;MACP1O,MAAA,EAAQ4O,EAAA;MACR/J,MAAA,EAAQ0H,EAAA,GAAc8C,EAAA,GAAS;MAC/BvK,MAAA,EAAQ2H,EAAA,GAAc6C,EAAA,GAAS;IAAA,GAJ3B,UASZ/O,CAAA,CAAOoF,QAAA,CAAS,YAChBiK,EAAA,CAAUE,IAAA,GACN/N,CAAA,CAACZ,CAAA,EAAI;MAED0D,MAAA,EAAQwK,EAAA;MACRvK,MAAA,EAAQwK,EAAA;MACRxP,KAAA,EAAO4O,EAAA;MACP1O,MAAA,EAAQ4O,EAAA;MACRzD,GAAA,EAAKwB,EAAA;MACLsD,KAAA,EAAOrD,EAAA;MACPsD,MAAA,EAAQpD,EAAA;MACR5B,IAAA,EAAM8B;IAAA,GARF,UAaZzM,CAAA,CAAOoF,QAAA,CAAS,aAChBiK,EAAA,CAAUG,KAAA,GACNhO,CAAA,CAAC9B,CAAA,EAAQ;MAAAiJ,QAAA,EACJiG,EAAA,CAAO9K,GAAA,CAAI,UAAA7E,CAAA;QAAK,OACbuC,CAAA,CAACkD,CAAA,EAAI;UAEDR,KAAA,EAAOjF,CAAA;UACPoH,iBAAA,EAAmB8I,EAAA;UACnB/I,aAAA,EAAe4I,EAAA;UACfjF,KAAA,EAAOgF,EAAA,CAAOrL,IAAA;UACdvB,aAAA,EAAewK,EAAA;UACfnG,YAAA,EAAcsG,EAAA;UACdrG,WAAA,EAAasG,EAAA;UACbrG,YAAA,EAAcsG,EAAA;UACdrG,WAAA,EAAasG,EAAA;UACbrG,SAAA,EAAWsG,EAAA;UACXrG,OAAA,EAASsG,EAAA;UACTrG,aAAA,EAAesG,EAAA;UACfrG,WAAA,EAAa2G,EAAA;UACb9E,OAAA,EAAS0E;QAAA,GAdJrO,CAAA,CAAM8E,EAAA;MAAA;IAAA,GAHT,WAwBlB4I,EAAA,IAAiBW,EAAA,IAAWtN,CAAA,CAAOoF,QAAA,CAAS,YAC5CiK,EAAA,CAAUI,IAAA,GACNjO,CAAA,CAACwD,CAAA,EAAI;MAEDhB,MAAA,EAAQ6K,EAAA;MACRtP,KAAA,EAAO4O,EAAA;MACP1O,MAAA,EAAQ4O,EAAA;MACR9D,MAAA,EAAQ2D,EAAA;MACR5H,iBAAA,EAAmB8I,EAAA;MACnB/I,iBAAA,EAAmB8I,EAAA;MACnB3I,YAAA,EAAcsG,EAAA;MACdrG,WAAA,EAAasG,EAAA;MACbrG,YAAA,EAAcsG,EAAA;MACdrG,WAAA,EAAasG,EAAA;MACbrG,SAAA,EAAWsG,EAAA;MACXrG,OAAA,EAASsG,EAAA;MACTrG,aAAA,EAAesG,EAAA;MACf5C,OAAA,EAASoD,EAAA;MACTnD,KAAA,EAAO+C;IAAA,GAfH,UAoBZxN,CAAA,CAAOoF,QAAA,CAAS,cAChBiK,EAAA,CAAUrL,MAAA,GAAS6K,EAAA,CAAO/K,GAAA,CAAI,UAAA7E,CAAA;MAAK,OAC/BI,CAAA,CAAc2G,EAAA,EAAgB;QAC1B4J,GAAA,EAAK3Q,CAAA,CAAM8E,EAAA;QACXoD,KAAA,EAAAlI;MAAA,EACF;IAAA,KAINe,CAAA,CAAOoF,QAAA,CAAS,cAChBiK,EAAA,CAAUhF,MAAA,GACN3I,CAAA,CAAChC,CAAA,EAAQ;MAAAiJ,QAAA,IACW,MAAfnG,CAAA,IACGhB,CAAA,CAACmD,CAAA,EAAW;QACRd,MAAA,EAAQ+K,EAAA;QACRrH,QAAA,EAAU/E,CAAA;QACV8E,QAAA,EAAS;QACT9D,OAAA,EAASf,CAAA;QACT8C,KAAA,EAAO5C;MAAA,KAGD,MAAbuC,CAAA,IACG1D,CAAA,CAACmD,CAAA,EAAW;QACRd,MAAA,EAAQ+K,EAAA;QACRrH,QAAA,EAAUrC,CAAA;QACVoC,QAAA,EAAS;QACT9D,OAAA,EAASgC,CAAA;QACTD,KAAA,EAAOI;MAAA;IAAA,GAhBL;IAuBtB,IAAMkK,EAAA,GAA4D3Q,CAAA,CAC9D;MAAA,OAAO;QACHoP,WAAA,EAAAD,EAAA;QACAD,UAAA,EAAAD,EAAA;QACA/H,aAAA,EAAA4I,EAAA;QACAhL,MAAA,EAAA6K,EAAA;QACAhL,MAAA,EAAA+K,EAAA;QACAtK,MAAA,EAAAwK,EAAA;QACAvK,MAAA,EAAAwK,EAAA;QACA5J,cAAA,EAAA+J,EAAA;QACArJ,cAAA,EAAAoJ,EAAA;QACA5I,iBAAA,EAAA8I,EAAA;QACA7I,iBAAA,EAAA8I;MAAA,CACF;IAAA,GACF,CACIH,EAAA,EACAC,EAAA,EACAE,EAAA,EACAD,EAAA,EACAd,EAAA,EACAF,EAAA,EACAa,EAAA,EACAH,EAAA,EACAD,EAAA,EACAE,EAAA,EACAC,EAAA;IAIR,OACIvN,CAAA,CAACpB,CAAA,EAAU;MACPb,KAAA,EAAOgP,EAAA;MACP9O,MAAA,EAAQgP,EAAA;MACRlE,MAAA,EAAQ2D,EAAA;MACRpF,IAAA,EAAMgF,EAAA;MACNgC,GAAA,EAAK/B,EAAA;MAAapF,QAAA,EAEjB3I,CAAA,CAAO8D,GAAA,CAAI,UAAC7E,CAAA,EAAOC,CAAA;QAAM,IAAA0D,CAAA;QACtB,OAAqB,qBAAV3D,CAAA,GACAuC,CAAA,CAAC9B,CAAA,EAAQ;UAAAiJ,QAAA,EAAUtJ,CAAA,CAAcJ,CAAA,EAAO4Q,EAAA;QAAA,GAAzB3Q,CAAA,IAGD,SAAzB0D,CAAA,GAAO,QAAAyM,EAAA,YAAAA,EAAA,CAAYpQ,CAAA,KAAM2D,CAAA,GAAI;MAAA;IAAA,EAI7C;EAAA;EAEa4C,CAAA,GAAOhG,CAAA,CAChB,UAAAP,CAAA,EAYIC,CAAA;IAAuB,IAAA0D,CAAA,GAAA3D,CAAA,CAPnBkD,aAAA;MAAA9C,CAAA,QAAa,MAAAuD,CAAA,GAAG6B,CAAA,CAAoBtC,aAAA,GAAaS,CAAA;MAAAtD,CAAA,GAAAL,CAAA,CACjDgK,OAAA;MAAAzJ,CAAA,QAAO,MAAAF,CAAA,GAAGmF,CAAA,CAAoBwE,OAAA,GAAO3J,CAAA;MAAAI,CAAA,GAAAT,CAAA,CACrC4K,YAAA;MAAAjK,CAAA,QAAY,MAAAF,CAAA,GAAG+E,CAAA,CAAoBoF,YAAA,GAAYnK,CAAA;MAC/CI,CAAA,GAAKb,CAAA,CAAL8Q,KAAA;MACA7P,CAAA,GAAajB,CAAA,CAAb8J,aAAA;MACG3I,CAAA,GAAUoC,CAAA,CAAAvD,CAAA,EAAAiG,CAAA;IAAA,OAIjB1D,CAAA,CAACxB,CAAA,EAAS;MAEFiJ,OAAA,EAAAzJ,CAAA;MACA2C,aAAA,EAAA9C,CAAA;MACAwK,YAAA,EAAAjK,CAAA;MACAmJ,aAAA,EAAA7I,CAAA;MACA6P,KAAA,EAAAjQ,CAAA;MAAK6I,QAAA,EAGTnH,CAAA,CAAC6D,CAAA,EAASC,CAAA;QACNnD,aAAA,EAAe9C;MAAA,GACXe,CAAA,EAAU;QACd4N,YAAA,EAAc9O;MAAA;IAAA,EAEV;EAAA;EAAAuG,CAAA;ECjVPE,EAAA,GAAiBnG,CAAA,CAC1B,UAAAP,CAAA,EAaIC,CAAA;IAAuB,IARnB0D,CAAA,GAAY3D,CAAA,CAAZ+Q,YAAA;MACA3Q,CAAA,GAAaJ,CAAA,CAAbgR,aAAA;MACA3Q,CAAA,GAAQL,CAAA,CAARiR,QAAA;MACA1Q,CAAA,GAAcP,CAAA,CAAdkR,cAAA;MACGzQ,CAAA,GAAK8C,CAAA,CAAAvD,CAAA,EAAAwG,CAAA;IAAA,OAMZjE,CAAA,CAAClB,CAAA,EAAiB;MACd0P,YAAA,EAAcpN,CAAA;MACdqN,aAAA,EAAe5Q,CAAA;MACf6Q,QAAA,EAAU5Q,CAAA;MACV6Q,cAAA,EAAgB3Q,CAAA;MAAemJ,QAAA,EAE9B,SAAAA,CAAA1J,CAAA;QAAA,IAAG2D,CAAA,GAAK3D,CAAA,CAALM,KAAA;UAAOF,CAAA,GAAMJ,CAAA,CAANQ,MAAA;QAAM,OACb+B,CAAA,CAACgE,CAAA,EAAIF,CAAA;UAAoB/F,KAAA,EAAOqD,CAAA;UAAOnD,MAAA,EAAQJ;QAAA,GAAYK,CAAA,EAAK;UAAEoQ,GAAA,EAAK5Q;QAAA,GAAO;MAAA;IAAA,EAElE;EAAA;ECoJf0G,EAAA,GAAc,SAAAwK,CACvBnR,CAAA;IAEA,OAAO,WAAWA,CACtB;EAAA;EAEa+G,EAAA,GAAsB,SAAAqK,CAI/BpR,CAAA;IAEA,OAAO,YAAYA,CACvB;EAAA;EClLM8L,EAAA,GAAoB,SAAAuF,CAAHrR,CAAA;IAAA,IAInB2D,CAAA,GAAI3D,CAAA,CAAJU,IAAA;MACAN,CAAA,GAAKJ,CAAA,CAALM,KAAA;MACAD,CAAA,GAAML,CAAA,CAANQ,MAAA;MACAD,CAAA,GAAKP,CAAA,CAALsR,KAAA;MACA7Q,CAAA,GAAOT,CAAA,CAAPuR,OAAA;MACA5Q,CAAA,GAAQX,CAAA,CAARc,QAAA;IAAQ,OASRb,CAAA,CACI;MAAA,OC5BqB,UAAHD,CAAA;QAwBrB,IAoBGC,CAAA;UACA0D,CAAA;UAzCJvD,CAAA,GAAIJ,CAAA,CAAJU,IAAA;UACAL,CAAA,GAAKL,CAAA,CAALM,KAAA;UACAC,CAAA,GAAMP,CAAA,CAANQ,MAAA;UACAC,CAAA,GAAKT,CAAA,CAALsR,KAAA;UACA3Q,CAAA,GAAOX,CAAA,CAAPuR,OAAA;UACA1Q,CAAA,GAAQb,CAAA,CAARc,QAAA;UAgBMC,CAAA,GAAS,IAAIyQ,GAAA;QAsBnBpR,CAAA,CAAKyD,OAAA,CAAQ,UAAA7D,CAAA;UACTA,CAAA,CAAMU,IAAA,CAAKmD,OAAA,CAAQ,UAAAzD,CAAA;YACVW,CAAA,CAAO0Q,GAAA,CAAIrR,CAAA,CAAM2D,CAAA,KAClBhD,CAAA,CAAO2Q,GAAA,CAAItR,CAAA,CAAM2D,CAAA,EAAG;cAChBe,EAAA,EAAI1E,CAAA,CAAM2D,CAAA;cACV4N,KAAA,EAAO;cACPC,MAAA,EAAQ,IAAIJ,GAAA;cACZzN,CAAA,EAAG;YAAA;YAIX,IAAM1D,CAAA,GAAQU,CAAA,CAAO8Q,GAAA,CAAIzR,CAAA,CAAM2D,CAAA;cAEzBxD,CAAA,GAAQF,CAAA,CAAMsR,KAAA,GAAQvR,CAAA,CAAM4D,CAAA;YAClC3D,CAAA,CAAMsR,KAAA,GAAQpR,CAAA,EAEdF,CAAA,CAAMuR,MAAA,CAAOF,GAAA,CAAI1R,CAAA,CAAM8E,EAAA,EAAI;cACvBgN,OAAA,EAAS9R,CAAA,CAAM8E,EAAA;cACfiN,KAAA,EAAO3R,CAAA,CAAM4D,CAAA;cACbqE,QAAA,EAAU;cACV7H,MAAA,EAAQ;cACRwR,YAAA,EAAc;YAAA,UAGH,MAAX/R,CAAA,IAAwBM,CAAA,GAAQN,CAAA,MAChCA,CAAA,GAASM,CAAA,SAEK,MAAdoD,CAAA,IAA2BtD,CAAA,CAAMuR,MAAA,CAAO/K,IAAA,GAAOlD,CAAA,MAC/CA,CAAA,GAAYtD,CAAA,CAAMuR,MAAA,CAAO/K,IAAA,CAEjC;UAAA,EACJ;QAAA;QAEA,IAAM5F,CAAA,GAASkD,CAAA,CACXC,CAAA,GAAyBC,MAAA,CAAOJ,KAAA,CAAMC,IAAA,CAAKnD,CAAA,CAAOkR,IAAA,KAAS3N,KAAA,CAAM,CAAC,GAAGjE,CAAA;UAGnEc,CAAA,GAAckB,CAAA,CAChBF,CAAA,GACKkC,MAAA,CAAO,CAAC,GAAGpE,CAAA,GACXqE,KAAA,CAAM,CAAC,GAAG/D,CAAA,GAASoD,CAAA,GAAahD,CAAA;QAGzCI,CAAA,CAAO8C,OAAA,CAAQ,UAAC7D,CAAA,EAAOC,CAAA;UACnBD,CAAA,CAAM+D,CAAA,GAAI9C,CAAA,CAAOhB,CAAA;UACjB,IAAM0D,CAAA,GAAcxC,CAAA,CAAYnB,CAAA,CAAM2R,KAAA,IAAS3R,CAAA,CAAM4R,MAAA,CAAO/K,IAAA,GAAOlG,CAAA;YAE/DP,CAAA,GAAS;UACC,aAAVK,CAAA,GACAL,CAAA,IAAUG,CAAA,GAASoD,CAAA,IAAe,IACjB,UAAVlD,CAAA,KACPL,CAAA,GAASG,CAAA,GAASoD,CAAA,GAGtBM,KAAA,CAAMC,IAAA,CAAKlE,CAAA,CAAM4R,MAAA,CAAOA,MAAA,IACnBpN,IAAA,CAAK,UAACxE,CAAA,EAAGC,CAAA;YAAC,OAAKA,CAAA,CAAE8R,KAAA,GAAQ/R,CAAA,CAAE+R,KAAM;UAAA,GACjClO,OAAA,CAAQ,UAAC5D,CAAA,EAAO0D,CAAA,EAAUtD,CAAA;YACvB,IAAME,CAAA,GAAiBF,CAAA,CAAI+E,MAAA,CAAO,UAACpF,CAAA,EAAIC,CAAA;gBAAG,OAAKA,CAAA,GAAM0D,CAAA;cAAA;cAC/ClD,CAAA,GAAcF,CAAA,CAAe2R,MAAA,CAAO,UAAClS,CAAA,EAAGC,CAAA;gBAAC,OAAKD,CAAA,GAAIC,CAAA,CAAE8R,KAAK;cAAA,GAAE;cAE3DlR,CAAA,GAAab,CAAA,CAAM4R,MAAA,CAAOC,GAAA,CAAI5R,CAAA,CAAM6R,OAAA;YAC1CjR,CAAA,CAAWwH,QAAA,GAAW1E,CAAA,EACtB9C,CAAA,CAAWL,MAAA,GAASW,CAAA,CAAYlB,CAAA,CAAM8R,KAAA,GACtClR,CAAA,CAAWmR,YAAA,GACP7Q,CAAA,CAAYV,CAAA,IAAeL,CAAA,GAASO,CAAA,IAAWJ,CAAA,CAAe4E,MAAA,GAAS,GAC/E;UAAA,EACR;QAAA;QAEA,IAAM9D,CAAA,GAAmBJ,CAAA,CAAOwD,IAAA,KAASC,IAAA,CAAKC,GAAA,CAAe,KAAX9D,CAAA,EAAgB;UAE5DU,CAAA,GAASnB,CAAA,CAAKyE,GAAA,CAAI,UAAA7E,CAAA;YACpB,IAAMC,CAAA,GAGF;cACA6E,EAAA,EAAI9E,CAAA,CAAM8E,EAAA;cACVpE,IAAA,EAAMV,CAAA;cACN+E,MAAA,EAAQ;cACRoN,UAAA,EAAY;YAAA;YA4BhB,OAzBAnS,CAAA,CAAMU,IAAA,CAAKmD,OAAA,CAAQ,UAACF,CAAA,EAAOvD,CAAA;cACvB,IAAMC,CAAA,GAAQU,CAAA,CAAO8Q,GAAA,CAAIlO,CAAA,CAAMI,CAAA;gBACzBxD,CAAA,GAAWF,CAAA,CAAMuR,MAAA,CAAOC,GAAA,CAAI7R,CAAA,CAAM8E,EAAA;gBAElCrE,CAAA,GAAIJ,CAAA,CAAM0D,CAAA;gBACRpD,CAAA,GAAyBJ,CAAA,CAAzByR,YAAA;gBAAcnR,CAAA,GAAWN,CAAA,CAAXC,MAAA;gBAChBS,CAAA,GAAIN,CAAA,GAAeE,CAAA,GAAS;gBAC5BM,CAAA,GAAKR,CAAA;gBACLY,CAAA,GAAKZ,CAAA,GAAeE,CAAA;cAE1BZ,CAAA,CAAc8E,MAAA,CAAOG,IAAA,CAAK;gBACtBnB,CAAA,EAAAtD,CAAA;gBACAuD,CAAA,EAAA/C,CAAA;gBACAT,MAAA,EAAAK,CAAA;gBACAH,IAAA,EAAI2F,CAAA,KAAO1C,CAAA;cAAA,IAEXvD,CAAA,GAAI,KACJH,CAAA,CAAckS,UAAA,CAAWjN,IAAA,CAAK;gBAAEnB,CAAA,EAAGtD,CAAA,GAAIY,CAAA;gBAAkB+Q,EAAA,EAAAjR,CAAA;gBAAIkR,EAAA,EAAA9Q;cAAA,IAEjEtB,CAAA,CAAckS,UAAA,CAAWjN,IAAA,CAAK;gBAAEnB,CAAA,EAAAtD,CAAA;gBAAG2R,EAAA,EAAAjR,CAAA;gBAAIkR,EAAA,EAAA9Q;cAAA,IACnCnB,CAAA,GAAIJ,CAAA,CAAMU,IAAA,CAAKyE,MAAA,GAAS,KACxBlF,CAAA,CAAckS,UAAA,CAAWjN,IAAA,CAAK;gBAAEnB,CAAA,EAAGtD,CAAA,GAAIY,CAAA;gBAAkB+Q,EAAA,EAAAjR,CAAA;gBAAIkR,EAAA,EAAA9Q;cAAA,EAErE;YAAA,IAEOtB,CACX;UAAA;QAEA,OAAO;UACH2E,MAAA,EAAArD,CAAA;UACA8D,MAAA,EAAApE,CAAA;UACAqR,WAAA,EAAAnR;QAAA,CAER;MAAA,CDrIc,CAAiC;QAAET,IAAA,EAAAiD,CAAA;QAAMrD,KAAA,EAAAF,CAAA;QAAOI,MAAA,EAAAH,CAAA;QAAQiR,KAAA,EAAA/Q,CAAA;QAAOgR,OAAA,EAAA9Q,CAAA;QAASK,QAAA,EAAAH;MAAA,EAAW;IAAA,GACzF,CAACgD,CAAA,EAAMvD,CAAA,EAAOC,CAAA,EAAQE,CAAA,EAAOE,CAAA,EAASE,CAAA,EACzC;EAAA;EAaCoL,EAAA,GAAsB,SAAAhM,CACxBC,CAAA;IAAkD,OAElDC,CAAA,CAAQ;MACJ,OAA2B,qBAAhBD,CAAA,GAAmCA,CAAA,GACvC;QAAA,OAAMA,CAAW;MAAA,CAC5B;IAAA,GAAG,CAACA,CAAA,EAAa;EAAA;EAuFRgM,EAAA,GAAc,SAAAuG,CAAHnS,CAAA;IA6ClB,IAzCFC,CAAA,GAAID,CAAA,CAAJM,IAAA;MACAH,CAAA,GAAKH,CAAA,CAALE,KAAA;MACAG,CAAA,GAAML,CAAA,CAANI,MAAA;MACAG,CAAA,GAAKP,CAAA,CAALkR,KAAA;MACAzQ,CAAA,GAAOT,CAAA,CAAPmR,OAAA;MACAxQ,CAAA,GAAQX,CAAA,CAARU,QAAA;MACAG,CAAA,GAAab,CAAA,CAAbQ,aAAA;MACAO,CAAA,GAAMf,CAAA,CAANsB,MAAA;MACAL,CAAA,GAAWjB,CAAA,CAAXoS,WAAA;MACAjR,CAAA,GAAiBnB,CAAA,CAAjBqS,iBAAA;MACAhR,CAAA,GAAmBrB,CAAA,CAAnBsS,mBAAA;MACA/Q,CAAA,GAAWvB,CAAA,CAAX0G,WAAA;MACAnB,CAAA,GAAiBvF,CAAA,CAAjBuS,iBAAA;MACA5Q,CAAA,GAAmB3B,CAAA,CAAnBwS,mBAAA;MACA3Q,CAAA,GAAW7B,CAAA,CAAX8G,WAAA;MACA9C,CAAA,GAAahE,CAAA,CAAbyS,aAAA;MACA1Q,CAAA,GAAmB/B,CAAA,CAAnB0S,mBAAA;MACA3O,CAAA,GAAqB/D,CAAA,CAArB2S,qBAAA;MACA1Q,CAAA,GAAajC,CAAA,CAAb8C,aAAA;MACAX,CAAA,GAAqBnC,CAAA,CAArBgD,qBAAA;MAuBAX,CAAA,GAA4CzC,CAAA,CAAmBuC,CAAA;MAAxDI,CAAA,GAAcF,CAAA;MAAEI,CAAA,GAAiBJ,CAAA;MAExCM,CAAA,GAII+I,EAAA,CAAqC;QACrCpL,IAAA,EAAAL,CAAA;QACAC,KAAA,EAAAC,CAAA;QACAC,MAAA,EAAAC,CAAA;QACA6Q,KAAA,EAAA3Q,CAAA;QACA4Q,OAAA,EAAA1Q,CAAA;QACAC,QAAA,EAAAC;MAAA;MATQkC,CAAA,GAASF,CAAA,CAAjB6B,MAAA;MACAzB,CAAA,GAAMJ,CAAA,CAANsC,MAAA;MACAhC,CAAA,GAAWN,CAAA,CAAXuP,WAAA;MAUEhP,CAAA,GArKe,UAACtD,CAAA;QAAoC,OAC1DC,CAAA,CACI;UAAA,OACI4B,CAAA,GACKkC,CAAA,CAAE,UAAA/D,CAAA;YAAC,OAAIA,CAAA,CAAE+D,CAAC;UAAA,GACVqO,EAAA,CAAG,UAAApS,CAAA;YAAC,OAAIA,CAAA,CAAEoS,EAAE;UAAA,GACZC,EAAA,CAAG,UAAArS,CAAA;YAAC,OAAIA,CAAA,CAAEqS,EAAA;UAAA,GACVzM,KAAA,CAAwB,aAAlB5F,CAAA,GAA6BgE,CAAA,GAAa6B,CAAA;QAAA,GACzD,CAAC7F,CAAA,EACJ;MAAA,CA4JqB,CAAiBiB,CAAA;MAEjCsC,CAAA,GAAWyC,CAAA,CAAqB7E,CAAA,EAAQ;MACxCrB,CAAA,GArJY,UAAHE,CAAA;QA0Bb,IAzBFC,CAAA,GAAWD,CAAA,CAAXwS,WAAA;UACApS,CAAA,GAAiBJ,CAAA,CAAjByS,iBAAA;UACApS,CAAA,GAAmBL,CAAA,CAAnB0S,mBAAA;UACAnS,CAAA,GAAWP,CAAA,CAAX8G,WAAA;UACArG,CAAA,GAAiBT,CAAA,CAAjB2S,iBAAA;UACAhS,CAAA,GAAmBX,CAAA,CAAnB4S,mBAAA;UACA/R,CAAA,GAAWb,CAAA,CAAXkH,WAAA;UACAnG,CAAA,GAAaf,CAAA,CAAb6S,aAAA;UACA5R,CAAA,GAAmBjB,CAAA,CAAnB8S,mBAAA;UACA3R,CAAA,GAAqBnB,CAAA,CAArB+S,qBAAA;UACA1R,CAAA,GAAarB,CAAA,CAAbkD,aAAA;UACA3B,CAAA,GAAcvB,CAAA,CAAdkG,cAAA;UAoBMzE,CAAA,GAAiBsK,EAAA,CAAmC9L,CAAA;UACpD0B,CAAA,GAAuBoK,EAAA,CAAmC3L,CAAA;UAC1DuF,CAAA,GAAyBoG,EAAA,CAAmC1L,CAAA;UAE5D2D,CAAA,GAAiB+H,EAAA,CAAmCxL,CAAA;UACpDsF,CAAA,GAAuBkG,EAAA,CAAmCtL,CAAA;UAC1DoB,CAAA,GAAyBkK,EAAA,CAAmCpL,CAAA;UAE5DqF,CAAA,GAAQjC,CAAA;UACRhC,CAAA,GAAiB0E,CAAA,CAAkB5F,CAAA,EAAamF,CAAA;UAEhD/D,CAAA,GAAmB8J,EAAA,CAAmChL,CAAA;UACtDqD,CAAA,GAAyB2H,EAAA,CAAmC9K,CAAA;UAC5DkB,CAAA,GAA2B4J,EAAA,CAAmC5K,CAAA;UAE9DgD,CAAA,GAAiBR,CAAA,CACnB,UAAC3D,CAAA;YAAY,OAAM;cACfwS,WAAA,EAAa/Q,CAAA,CAAezB,CAAA;cAC5B8G,WAAA,EAAa9C,CAAA,CAAehE,CAAA;cAC5BkH,WAAA,EAAanF,CAAA,CAAe/B,CAAA;cAC5B6S,aAAA,EAAe5Q,CAAA,CAAiBjC,CAAA;YAAA,CAClC;UAAA,GACF,CAACyB,CAAA,EAAgBuC,CAAA,EAAgBjC,CAAA,EAAgBE,CAAA;UAE/CI,CAAA,GAAiBsB,CAAA,CACnB,UAAC3D,CAAA;YAAY,OAAM;cACfwS,WAAA,EAAa7Q,CAAA,CAAqB3B,CAAA;cAClC8G,WAAA,EAAajB,CAAA,CAAqB7F,CAAA;cAClCkH,WAAA,EAAanF,CAAA,CAAe/B,CAAA;cAC5B6S,aAAA,EAAezO,CAAA,CAAuBpE,CAAA;YAAA,CACxC;UAAA,GACF,CAAC2B,CAAA,EAAsBkE,CAAA,EAAsB9D,CAAA,EAAgBqC,CAAA;UAE3D7B,CAAA,GAAmBoB,CAAA,CACrB,UAAC3D,CAAA;YAAY,OAAM;cACfwS,WAAA,EAAa7M,CAAA,CAAuB3F,CAAA;cACpC8G,WAAA,EAAajF,CAAA,CAAuB7B,CAAA;cACpCkH,WAAA,EAAanF,CAAA,CAAe/B,CAAA;cAC5B6S,aAAA,EAAe1Q,CAAA,CAAyBnC,CAAA;YAAA,CAC1C;UAAA,GACF,CAAC2F,CAAA,EAAwB9D,CAAA,EAAwBE,CAAA,EAAgBI,CAAA;QAGrE,OAAOwB,CAAA,CACH,UAAC3D,CAAA;UACG,OAAKqB,CAAA,IAA2C,MAA1BE,CAAA,CAAe4D,MAAA,GACjC5D,CAAA,CAAe4E,QAAA,CAASnG,CAAA,CAAM8E,EAAA,IAAYzC,CAAA,CAAerC,CAAA,IACtDuC,CAAA,CAAiBvC,CAAA,IAFkCmE,CAAA,CAAenE,CAAA,CAG7E;QAAA,GACA,CAACmE,CAAA,EAAgB9B,CAAA,EAAgBE,CAAA,EAAkBlB,CAAA,EAAeE,CAAA,EAE1E;MAAA,CAkE0B,CAAiC;QACnDiR,WAAA,EAAAnR,CAAA;QACAoR,iBAAA,EAAAlR,CAAA;QACAmR,mBAAA,EAAAjR,CAAA;QACAqF,WAAA,EAAAnF,CAAA;QACAgR,iBAAA,EAAAhN,CAAA;QACAiN,mBAAA,EAAA7Q,CAAA;QACAmF,WAAA,EAAAjF,CAAA;QACA4Q,aAAA,EAAAzO,CAAA;QACA0O,mBAAA,EAAA3Q,CAAA;QACA4Q,qBAAA,EAAA5O,CAAA;QACAjB,aAAA,EAAAb,CAAA;QACA6D,cAAA,EAAAvD;MAAA;IAmBJ,OAAO;MACHiC,MAAA,EAjBuD3E,CAAA,CACvD;QAAA,OACIgD,CAAA,CAAU4B,GAAA,CAAI,UAAA7E,CAAA;UACV,IAAMC,CAAA,GAAcoG,CAAA,KACbrG,CAAA,EAAK;YACRsG,KAAA,EAAO/C,CAAA,CAASvD,CAAA,CAAMU,IAAA;UAAA;UAG1B,OAAA2F,CAAA,CACO,IAAApG,CAAA,EACAH,CAAA,CAAcG,CAAA,EAEzB;QAAA,EAAE;MAAA,GACN,CAACgD,CAAA,EAAWM,CAAA,EAAUzD,CAAA;MAKtBuF,MAAA,EAAAlC,CAAA;MACAmP,WAAA,EAAAjP,CAAA;MACA2P,aAAA,EAAA1P,CAAA;MACA4C,cAAA,EAAAvD,CAAA;MACAyE,iBAAA,EAAAvE;IAAA,CAER;EAAA;EAEaoJ,EAAA,GAA2B,SAAAgH,CAAHjT,CAAA;IAqB/B,IAjBFK,CAAA,GAAKL,CAAA,CAALiF,KAAA;MACA1E,CAAA,GAAaP,CAAA,CAAbkD,aAAA;MACAzC,CAAA,GAAYT,CAAA,CAAZuH,YAAA;MACA5G,CAAA,GAAWX,CAAA,CAAXwH,WAAA;MACA3G,CAAA,GAAYb,CAAA,CAAZyH,YAAA;MACA1G,CAAA,GAAOf,CAAA,CAAP4H,OAAA;MACA3G,CAAA,GAAiBjB,CAAA,CAAjBoH,iBAAA;MACAjG,CAAA,GAAOnB,CAAA,CAAPuL,OAAA;MAWAlK,CAAA,GAA8CU,CAAA;MAAtCR,CAAA,GAAoBF,CAAA,CAApB0G,oBAAA;MAAsBtG,CAAA,GAAWJ,CAAA,CAAX2G,WAAA;MAExBrG,CAAA,GAAmBgC,CAAA,CACrB,UAAC3D,CAAA;QACGuB,CAAA,CAAqBnB,CAAA,CAAce,CAAA,EAAS;UAAE8D,KAAA,EAAA5E;QAAA,IAAUL,CAAA,GACxDiB,CAAA,CAAkB,CAACZ,CAAA,CAAMyE,EAAA,YACzBrE,CAAA,IAAAA,CAAA,CAAeJ,CAAA,EAAOL,CAAA,CAC1B;MAAA,GACA,CAACK,CAAA,EAAOI,CAAA,EAAcc,CAAA,EAAsBN,CAAA,EAAmBE,CAAA;MAG7DwE,CAAA,GAAkBhC,CAAA,CACpB,UAAC3D,CAAA;QACGuB,CAAA,CAAqBnB,CAAA,CAAce,CAAA,EAAS;UAAE8D,KAAA,EAAA5E;QAAA,IAAUL,CAAA,WACxDW,CAAA,IAAAA,CAAA,CAAcN,CAAA,EAAOL,CAAA,CACxB;MAAA,GACD,CAACK,CAAA,EAAOM,CAAA,EAAaY,CAAA,EAAsBJ,CAAA;MAGzC6C,CAAA,GAAmBL,CAAA,CACrB,UAAC3D,CAAA;QACGyB,CAAA,IACAR,CAAA,CAAkB,aAClBJ,CAAA,IAAAA,CAAA,CAAeR,CAAA,EAAOL,CAAA,CACzB;MAAA,GACD,CAACK,CAAA,EAAOQ,CAAA,EAAcY,CAAA,EAAaR,CAAA;MAGjC4E,CAAA,GAAclC,CAAA,CAChB,UAAC3D,CAAA;QAAA,QACGe,CAAA,IAAAA,CAAA,CAAUV,CAAA,EAAOL,CAAA,CACrB;MAAA,GACA,CAACK,CAAA,EAAOU,CAAA;IAGZ,OAAOd,CAAA,CACH;MAAA,OAAO;QACHsH,YAAA,EAAchH,CAAA,GAAgBoB,CAAA,QAAmB;QACjD6F,WAAA,EAAajH,CAAA,GAAgBoF,CAAA,QAAkB;QAC/C8B,YAAA,EAAclH,CAAA,GAAgByD,CAAA,QAAmB;QACjD4D,OAAA,EAASrH,CAAA,GAAgBsF,CAAA,QAAc;MAAA,CAC1C;IAAA,GACD,CAACtF,CAAA,EAAeoB,CAAA,EAAkBgE,CAAA,EAAiB3B,CAAA,EAAkB6B,CAAA,EAE7E;EAAA;EAEaqG,EAAA,GAA0B,SAAAgH,CAAHlT,CAAA;IAeU,IAX1C2D,CAAA,GAAM3D,CAAA,CAAN4E,MAAA;MACAxE,CAAA,GAAQJ,CAAA,CAARqI,QAAA;MACAhI,CAAA,GAAOL,CAAA,CAAPuE,OAAA;MACAhE,CAAA,GAAKP,CAAA,CAALsG,KAAA;MACA7F,CAAA,GAAQT,CAAA,CAARsI,QAAA;MAQM3H,CAAA,GAAQoD,CAAA;MACRlD,CAAA,GAAW4F,CAAA,CAAkBlG,CAAA,EAAOI,CAAA;IAE1C,OAAOV,CAAA,CAAQ;MACX,IAAID,CAAA,EACAC,CAAA;MASJ,OARiB,YAAbG,CAAA,IACAJ,CAAA,GAAa,OACbC,CAAA,IAA2B,IAAXI,CAAA,KAEhBL,CAAA,GAAa,SACbC,CAAA,GAAgBI,CAAA,GAGbsD,CAAA,CAAOkB,GAAA,CAAI,UAAAlB,CAAA;QACd,IAAItD,CAAA,GAAQsD,CAAA,CAAMmB,EAAA;QACM,qBAAbrE,CAAA,KACPJ,CAAA,GAAQI,CAAA,CAASkD,CAAA,CAAMjD,IAAA;QAG3B,IAAMH,CAAA,GACW,YAAbH,CAAA,GAAuBuD,CAAA,CAAMoB,MAAA,CAAO,KAAKpB,CAAA,CAAMoB,MAAA,CAAOpB,CAAA,CAAMoB,MAAA,CAAOI,MAAA,GAAS;QAEhF,OAAO;UACHL,EAAA,EAAInB,CAAA,CAAMmB,EAAA;UACVyD,KAAA,EAAAlI,CAAA;UACA0D,CAAA,EAAGxD,CAAA,CAAMwD,CAAA,GAAI9D,CAAA;UACb+D,CAAA,EAAGzD,CAAA,CAAMyD,CAAA;UACTsC,KAAA,EAAOzF,CAAA,CAAS8C,CAAA;UAChB/B,OAAA,EAAS+B,CAAA,CAAM6O,WAAA;UACfvN,KAAA,EAAAtB,CAAA;UACA6E,UAAA,EAAAxI;QAAA,CAER;MAAA,EACJ;IAAA,GAAG,CAACS,CAAA,EAAUkD,CAAA,EAAQvD,CAAA,EAAUC,CAAA,EAASQ,CAAA,EAC7C;EAAA;EE1VasL,EAAA,GAAO,SAAAgH,CAAHnT,CAAA;IAWmB,IAVhCC,CAAA,GAAKD,CAAA,CAALiF,KAAA;MACAtB,CAAA,GAAa3D,CAAA,CAAbgT,aAAA;MACA5S,CAAA,GAASJ,CAAA,CAAToT,SAAA;MACA/S,CAAA,GAAaL,CAAA,CAAbkD,aAAA;MACA3C,CAAA,GAAYP,CAAA,CAAZuH,YAAA;MACA9G,CAAA,GAAWT,CAAA,CAAXwH,WAAA;MACAzG,CAAA,GAAYf,CAAA,CAAZyH,YAAA;MACAxG,CAAA,GAAOjB,CAAA,CAAP4H,OAAA;MACAzG,CAAA,GAAiBnB,CAAA,CAAjBoH,iBAAA;MACA/F,CAAA,GAAOrB,CAAA,CAAPuL,OAAA;MAEMhK,CAAA,GAAW0K,EAAA,CAA4C;QACzDhH,KAAA,EAAAhF,CAAA;QACAiD,aAAA,EAAA7C,CAAA;QACAkH,YAAA,EAAAhH,CAAA;QACAiH,WAAA,EAAA/G,CAAA;QACAgH,YAAA,EAAA1G,CAAA;QACA6G,OAAA,EAAA3G,CAAA;QACAmG,iBAAA,EAAAjG,CAAA;QACAoK,OAAA,EAAAlK;MAAA;MAGJI,CAAA,GAA0Cd,CAAA;MAAlCgB,CAAA,GAAOF,CAAA,CAAPuI,OAAA;MAAiBrE,CAAA,GAAYlE,CAAA,CAApBwI,MAAA;MAEXjG,CAAA,GAAenD,CAAA,CAAgB8C,CAAA,CAAc1D,CAAA,CAAMkS,UAAA,KAAe;MAClEtM,CAAA,GAAgBhD,CAAA,CAKnB;QACCyD,KAAA,EAAOrG,CAAA,CAAMqG,KAAA;QACbkM,WAAA,EAAavS,CAAA,CAAMuS,WAAA;QACnB9H,MAAA,EAAQzK,CAAA,CAAMiH,WAAA;QACd+D,aAAA,EAAehL,CAAA,CAAM4S,aAAA;QACrB5I,MAAA,EAAQtE,CAAA;QACRwE,SAAA,GAAYxI;MAAA;IAGhB,OACIY,CAAA,CAACQ,CAAA,CAASgI,IAAA,EAAI;MACV,eAAqB,UAAA9K,CAAA,CAAM6E,EAAA;MAC3BnE,CAAA,EAAGqD,CAAA;MACHwG,IAAA,EAAMvK,CAAA,CAAMuK,IAAA,GAAOvK,CAAA,CAAMuK,IAAA,GAAO3E,CAAA,CAAcS,KAAA;MAC9CkM,WAAA,EAAa3M,CAAA,CAAc2M,WAAA;MAC3B9H,MAAA,EAAQ7E,CAAA,CAAc6E,MAAA;MACtBD,WAAA,EAAaxK,CAAA,CAAM6G,WAAA;MACnBmE,aAAA,EAAepF,CAAA,CAAcoF,aAAA;MAC7BN,KAAA,EAAO;QAAE0I,YAAA,EAAcjT;MAAA;MACvBmH,YAAA,EAAchG,CAAA,CAASgG,YAAA;MACvBC,WAAA,EAAajG,CAAA,CAASiG,WAAA;MACtBC,YAAA,EAAclG,CAAA,CAASkG,YAAA;MACvBG,OAAA,EAASrG,CAAA,CAASqG;IAAA,EAG9B;EAAA;EC3DawE,EAAA,GAAc,SAAAkH,CAAHtT,CAAA;IASkB,IALtCC,CAAA,GAAQD,CAAA,CAARsI,QAAA;MACA3E,CAAA,GAAM3D,CAAA,CAAN4E,MAAA;MACAxE,CAAA,GAAQJ,CAAA,CAARqI,QAAA;MACAhI,CAAA,GAAOL,CAAA,CAAPuE,OAAA;MACAhE,CAAA,GAAKP,CAAA,CAALsG,KAAA;MAEM7F,CAAA,GAAQsD,CAAA;MACdlD,CAAA,GAA0CF,CAAA;MAAlCI,CAAA,GAAOF,CAAA,CAAPmJ,OAAA;MAAiB/I,CAAA,GAAYJ,CAAA,CAApBoJ,MAAA;MAEX9I,CAAA,GAAS+K,EAAA,CAA2C;QACtD5D,QAAA,EAAArI,CAAA;QACA2E,MAAA,EAAAjB,CAAA;QACA0E,QAAA,EAAAjI,CAAA;QACAmE,OAAA,EAAAlE,CAAA;QACAiG,KAAA,EAAA/F;MAAA;MAGEc,CAAA,GAAU8B,CAAA,CAKZhC,CAAA,CAAOgE,MAAA,EACPhE,CAAA,CAAO0D,GAAA,CAAI,UAAA7E,CAAA;QAAK,OAAK;UACjB+D,CAAA,EAAG/D,CAAA,CAAM+D,CAAA;UACTC,CAAA,EAAGhE,CAAA,CAAMgE,CAAA;UACTpC,OAAA,EAAS5B,CAAA,CAAM4B,OAAA;UACfqI,MAAA,EAAQhJ,CAAA;UACRkJ,SAAA,GAAYpJ;QAAA,CACd;MAAA;IAGN,OACIwB,CAAA,CAAAI,CAAA;MAAA+G,QAAA,EACKrI,CAAA,CAAQwD,GAAA,CAAI,UAAC7E,CAAA,EAAeC,CAAA;QACzB,IAAM0D,CAAA,GAAQxC,CAAA,CAAOlB,CAAA;QAErB,OACIsC,CAAA,CAACc,CAAA,EAAI;UACD,0BAAsBjD,CAAA,GAAY,MAAAuD,CAAA,CAAMsB,KAAA,CAAMH,EAAA;UAE9Cf,CAAA,EAAG/D,CAAA,CAAc+D,CAAA;UACjBC,CAAA,EAAGhE,CAAA,CAAcgE,CAAA;UACjBwE,UAAA,EAAY7E,CAAA,CAAM6E,UAAA;UAClB2C,gBAAA,EAAiB;UACjBvJ,OAAA,EAAS5B,CAAA,CAAc4B,OAAA;UACvB+I,KAAA,EAAKtE,CAAA,KACE5F,CAAA,CAAM2K,MAAA,CAAOC,IAAA,EAAI;YACpBb,IAAA,EAAM7G,CAAA,CAAM2C;UAAA;UACdoD,QAAA,EAED/F,CAAA,CAAM4E;QAAA,GAXF5E,CAAA,CAAMmB,EAAA;MAAA;IAAA,EAiBnC;EAAA;ECpCauH,EAAA,GAIRhG,CAAA,KArCD;IACAiL,KAAA,EAAO;IACP5I,MAAA,EAAQ,CAAC,QAAQ,QAAQ,UAAU;IACnC9H,aAAA,EAAe;IACf2Q,OAAA,EAAS;IACTzQ,QAAA,EAAU;IACVY,MAAA,EAAQ;MAAEiH,MAAA,EAAQ;IAAA;IAClByK,SAAA,EAAW;IACXZ,WAAA,EAAa;IACbC,iBAAA,EAAmB;IACnBC,mBAAA,EAAqB;IACrB5L,WAAA,EAAa;IACb6L,iBAAA,EAAmB;IACnBC,mBAAA,EAAqB;IACrB1L,WAAA,EAAa;MAAEhD,IAAA,EAAM;MAASgF,SAAA,EAAW,CAAC,CAAC,UAAU;IAAA;IACrD2J,aAAA,EAAe;IACfC,mBAAA,EAAqB;IACrBC,qBAAA,EAAuB;IACvBnK,UAAA,GAAY;IACZC,iBAAA,EAAmB;IACnBC,mBAAA,EAAqB;MAAE5E,IAAA,EAAM;MAASgF,SAAA,EAAW,CAAC,CAAC,UAAU;IAAA;IAC7DH,QAAA,GAAU;IACVC,eAAA,EAAiB;IACjBC,iBAAA,EAAmB;MAAE/E,IAAA,EAAM;MAASgF,SAAA,EAAW,CAAC,CAAC,UAAU;IAAA;IAC3DC,WAAA,GAAa;IACbE,OAAA,EAAS,CAAE;IACXE,UAAA,EAAY,CAAE;IACdrG,aAAA,GAAe;IACfE,qBAAA,EAAuB;IACvBmI,OAAA,EChCuB,SAAAA,CAAHvL,CAAA;MAAA,IAIpBC,CAAA,GAAKD,CAAA,CAALiF,KAAA;MAAK,OAEL1C,CAAA,CAACN,CAAA,EAAY;QAAC6C,EAAA,EAAI7E,CAAA,CAAM6E,EAAA;QAAI2E,UAAA,GAAY;QAAMnD,KAAA,EAAOrG,CAAA,CAAMqG;MAAA,EAAS;IAAA;ID2BpEuD,IAAA,EAAM;EAAA,GAQe;IACrB0J,IAAA,EAAM;IACN/I,IAAA,EAAM;IACNR,OAAA,GAAS;IACTY,YAAA,EAAc;EAAA;EAAA0B,EAAA;EExBZC,EAAA,GAAgB,SAAAiH,CAAHxT,CAAA;IA4Db,IA3DF2D,CAAA,GAAI3D,CAAA,CAAJU,IAAA;MAAIL,CAAA,GAAAL,CAAA,CACJsR,KAAA;MAAA/Q,CAAA,QAAK,MAAAF,CAAA,GAAGgM,EAAA,CAAwBiF,KAAA,GAAKjR,CAAA;MACrCM,CAAA,GAAKX,CAAA,CAALM,KAAA;MACAO,CAAA,GAAMb,CAAA,CAANQ,MAAA;MACQO,CAAA,GAAaf,CAAA,CAArBsL,MAAA;MAAMjK,CAAA,GAAArB,CAAA,CACN0I,MAAA;MAAA/C,CAAA,QAAM,MAAAtE,CAAA,GAAGgL,EAAA,CAAwB3D,MAAA,GAAMrH,CAAA;MAAA2C,CAAA,GAAAhE,CAAA,CAGvCY,aAAA;MAAAiF,CAAA,QAAa,MAAA7B,CAAA,GAAGqI,EAAA,CAAwBzL,aAAA,GAAaoD,CAAA;MAAAnC,CAAA,GAAA7B,CAAA,CACrDuR,OAAA;MAAAxN,CAAA,QAAO,MAAAlC,CAAA,GAAGwK,EAAA,CAAwBkF,OAAA,GAAO1P,CAAA;MAAAmE,CAAA,GAAAhG,CAAA,CACzCc,QAAA;MAAA2F,CAAA,QAAQ,MAAAT,CAAA,GAAGqG,EAAA,CAAwBvL,QAAA,GAAQkF,CAAA;MAAAjE,CAAA,GAAA/B,CAAA,CAC3C0B,MAAA;MAAAO,CAAA,QAAM,MAAAF,CAAA,GAAGsK,EAAA,CAAwB3K,MAAA,GAAMK,CAAA;MAAAqC,CAAA,GAAApE,CAAA,CAGvCoT,SAAA;MAAAjR,CAAA,QAAS,MAAAiC,CAAA,GAAGiI,EAAA,CAAwB+G,SAAA,GAAShP,CAAA;MAAAD,CAAA,GAAAnE,CAAA,CAC7CwS,WAAA;MAAAnQ,CAAA,QAAW,MAAA8B,CAAA,GAAGkI,EAAA,CAAwBmG,WAAA,GAAWrO,CAAA;MAAAxB,CAAA,GAAA3C,CAAA,CACjDyS,iBAAA;MAAA5P,CAAA,QAAiB,MAAAF,CAAA,GAAG0J,EAAA,CAAwBoG,iBAAA,GAAiB9P,CAAA;MAAAI,CAAA,GAAA/C,CAAA,CAC7D0S,mBAAA;MAAAzP,CAAA,QAAmB,MAAAF,CAAA,GAAGsJ,EAAA,CAAwBqG,mBAAA,GAAmB3P,CAAA;MAAAI,CAAA,GAAAnD,CAAA,CACjEuT,IAAA;MAAAlQ,CAAA,QAAI,MAAAF,CAAA,GAAGkJ,EAAA,CAAwBkH,IAAA,GAAIpQ,CAAA;MAAAG,CAAA,GAAAtD,CAAA,CACnCwK,IAAA;MAAAnE,CAAA,QAAI,MAAA/C,CAAA,GAAG+I,EAAA,CAAwB7B,IAAA,GAAIlH,CAAA;MAAAC,CAAA,GAAAvD,CAAA,CACnC8G,WAAA;MAAAhH,CAAA,QAAW,MAAAyD,CAAA,GAAG8I,EAAA,CAAwBvF,WAAA,GAAWvD,CAAA;MAAArD,CAAA,GAAAF,CAAA,CACjD2S,iBAAA;MAAAnP,CAAA,QAAiB,MAAAtD,CAAA,GAAGmM,EAAA,CAAwBsG,iBAAA,GAAiBzS,CAAA;MAAAuD,CAAA,GAAAzD,CAAA,CAC7D4S,mBAAA;MAAAlP,CAAA,QAAmB,MAAAD,CAAA,GAAG4I,EAAA,CAAwBuG,mBAAA,GAAmBnP,CAAA;MAAA8B,CAAA,GAAAvF,CAAA,CACjEkH,WAAA;MAAA1B,CAAA,QAAW,MAAAD,CAAA,GAAG8G,EAAA,CAAwBnF,WAAA,GAAW3B,CAAA;MAAAE,CAAA,GAAAzF,CAAA,CAGjD6S,aAAA;MAAAnN,CAAA,QAAa,MAAAD,CAAA,GAAG4G,EAAA,CAAwBwG,aAAA,GAAapN,CAAA;MAAAM,CAAA,GAAA/F,CAAA,CACrD8S,mBAAA;MAAA7M,CAAA,QAAmB,MAAAF,CAAA,GAAGsG,EAAA,CAAwByG,mBAAA,GAAmB/M,CAAA;MAAAK,CAAA,GAAApG,CAAA,CACjE+S,qBAAA;MAAAxM,CAAA,QAAqB,MAAAH,CAAA,GAAGiG,EAAA,CAAwB0G,qBAAA,GAAqB3M,CAAA;MAAAI,CAAA,GAAAxG,CAAA,CACrE4I,UAAA;MAAAlC,EAAA,QAAU,MAAAF,CAAA,GAAG6F,EAAA,CAAwBzD,UAAA,GAAUpC,CAAA;MAAAG,EAAA,GAAA3G,CAAA,CAG/C6I,iBAAA;MAAA9B,EAAA,QAAiB,MAAAJ,EAAA,GAAG0F,EAAA,CAAwBxD,iBAAA,GAAiBlC,EAAA;MAAAmF,EAAA,GAAA9L,CAAA,CAC7D8I,mBAAA;MAAAiD,EAAA,QAAmB,MAAAD,EAAA,GAAGO,EAAA,CAAwBvD,mBAAA,GAAmBgD,EAAA;MAAAG,EAAA,GAAAjM,CAAA,CAGjE+I,QAAA;MAAAmD,EAAA,QAAQ,MAAAD,EAAA,GAAGI,EAAA,CAAwBtD,QAAA,GAAQkD,EAAA;MAAAK,EAAA,GAAAtM,CAAA,CAG3CgJ,eAAA;MAAAuD,EAAA,QAAe,MAAAD,EAAA,GAAGD,EAAA,CAAwBrD,eAAA,GAAesD,EAAA;MAAAE,EAAA,GAAAxM,CAAA,CACzDiJ,iBAAA;MAAAwD,EAAA,QAAiB,MAAAD,EAAA,GAAGH,EAAA,CAAwBpD,iBAAA,GAAiBuD,EAAA;MAAAE,EAAA,GAAA1M,CAAA,CAG7DmJ,WAAA;MAAAwD,EAAA,QAAW,MAAAD,EAAA,GAAGL,EAAA,CAAwBlD,WAAA,GAAWuD,EAAA;MAAAE,EAAA,GAAA5M,CAAA,CACjDqJ,OAAA;MAAAwD,EAAA,QAAO,MAAAD,EAAA,GAAGP,EAAA,CAAwBhD,OAAA,GAAOuD,EAAA;MAAAE,EAAA,GAAA9M,CAAA,CACzCuJ,UAAA;MAAAwD,EAAA,QAAU,MAAAD,EAAA,GAAGT,EAAA,CAAwB9C,UAAA,GAAUuD,EAAA;MAAAE,EAAA,GAAAhN,CAAA,CAC/CkD,aAAA;MAAA+J,EAAA,QAAa,MAAAD,EAAA,GAAGX,EAAA,CAAwBnJ,aAAA,GAAa8J,EAAA;MAAAE,EAAA,GAAAlN,CAAA,CACrDoD,qBAAA;MAAA+J,EAAA,QAAqB,MAAAD,EAAA,GAAGb,EAAA,CAAwBjJ,qBAAA,GAAqB8J,EAAA;MACrEE,EAAA,GAAYpN,CAAA,CAAZuH,YAAA;MACA8F,EAAA,GAAWrN,CAAA,CAAXwH,WAAA;MACA8F,EAAA,GAAYtN,CAAA,CAAZyH,YAAA;MACA8F,EAAA,GAAOvN,CAAA,CAAP4H,OAAA;MAAO4F,EAAA,GAAAxN,CAAA,CACPuL,OAAA;MAAAkC,EAAA,QAAO,MAAAD,EAAA,GAAGnB,EAAA,CAAwBd,OAAA,GAAOiC,EAAA;MAAAE,EAAA,GAAA1N,CAAA,CAGzC6J,IAAA;MAAA8D,EAAA,QAAI,MAAAD,EAAA,GAAGrB,EAAA,CAAwBxC,IAAA,GAAI6D,EAAA;MACnCE,EAAA,GAAY5N,CAAA,CAAZ+O,YAAA;MAIAlB,EAAA,GAAqE5M,CAAA,CACjEN,CAAA,EACAE,CAAA,EACAE,CAAA;MAHI+M,EAAA,GAAMD,EAAA,CAANvC,MAAA;MAAQyC,EAAA,GAAUF,EAAA,CAAVsB,UAAA;MAAYnB,EAAA,GAAWH,EAAA,CAAXwB,WAAA;MAAapB,EAAA,GAAUJ,EAAA,CAAV0B,UAAA;MAAYrB,EAAA,GAAWL,EAAA,CAAX4B,WAAA;MAMrDtB,EAAA,GAA0EnC,EAAA,CAGxE;QACEtL,IAAA,EAAAiD,CAAA;QACArD,KAAA,EAAOyN,EAAA;QACPvN,MAAA,EAAQwN,EAAA;QACRsD,KAAA,EAAA/Q,CAAA;QACAgR,OAAA,EAAAxN,CAAA;QACAjD,QAAA,EAAA2F,CAAA;QACA7F,aAAA,EAAAiF,CAAA;QACAnE,MAAA,EAAAO,CAAA;QACAuQ,WAAA,EAAAnQ,CAAA;QACAoQ,iBAAA,EAAA5P,CAAA;QACA6P,mBAAA,EAAAzP,CAAA;QACA6D,WAAA,EAAAhH,CAAA;QACA6S,iBAAA,EAAAnP,CAAA;QACAoP,mBAAA,EAAAlP,CAAA;QACAwD,WAAA,EAAA1B,CAAA;QACAqN,aAAA,EAAAnN,CAAA;QACAoN,mBAAA,EAAA7M,CAAA;QACA8M,qBAAA,EAAAxM,CAAA;QACArD,aAAA,EAAA+J,EAAA;QACA7J,qBAAA,EAAA+J;MAAA;MAvBIiB,EAAA,GAAMD,EAAA,CAANvJ,MAAA;MAAQyJ,EAAA,GAAMF,EAAA,CAAN9I,MAAA;MAAQiJ,EAAA,GAAWH,EAAA,CAAXmE,WAAA;MAAa/D,EAAA,GAAaJ,EAAA,CAAb6E,aAAA;MAAexE,EAAA,GAAiBL,EAAA,CAAjB/G,iBAAA;MA0B9CqH,EAAA,GAAYxO,CAAA,CACd;QAAA,OAAMsB,CAAA,CAAS8B,CAAA,EAAM+K,EAAA,EAAQ/H,CAAA,EAAM;UAAEoN,SAAA,EAAW;QAAA,EAAS;MAAA,GACzD,CAACpQ,CAAA,EAAM+K,EAAA,EAAQ/H,CAAA;MAGbqI,EAAA,GAAgD;QAClD2B,IAAA,EAAM;QACNC,IAAA,EAAM;QACNlF,MAAA,EAAQ;QACRsI,KAAA,EAAO;MAAA;IAGP/N,CAAA,CAAOQ,QAAA,CAAS,WAAWwG,EAAA,KAC3B+B,EAAA,CAAU2B,IAAA,GAAO9N,CAAA,CAACd,CAAA,EAAI;MAAYnB,KAAA,EAAOyN,EAAA;MAAYvN,MAAA,EAAQwN,EAAA;MAAa3I,MAAA,EAAQgJ;IAAA,GAAvD,UAG3B1I,CAAA,CAAOQ,QAAA,CAAS,YAChBuI,EAAA,CAAU4B,IAAA,GACN/N,CAAA,CAACZ,CAAA,EAAI;MAED0D,MAAA,EAAQgJ,EAAA;MACR/I,MAAA,EAAQgJ,EAAA;MACRhO,KAAA,EAAOyN,EAAA;MACPvN,MAAA,EAAQwN,EAAA;MACRrC,GAAA,EAAKkB,EAAA;MACL6D,MAAA,EAAQ3D;IAAA,GANJ,UAWZpH,CAAA,CAAOQ,QAAA,CAAS,aAChBuI,EAAA,CAAUgF,KAAA,GACNnR,CAAA,CAAC9B,CAAA,EAAQ;MAAAiJ,QAAA,EACJ0E,EAAA,CAAOvJ,GAAA,CAAI,UAAA7E,CAAA;QAAK,OACbuC,CAAA,CAAC4J,EAAA,EAAI;UAED6G,aAAA,EAAezE,EAAA;UACftJ,KAAA,EAAOjF,CAAA;UACPoT,SAAA,EAAWjR,CAAA;UACXe,aAAA,EAAe+J,EAAA;UACf7F,iBAAA,EAAmBoH,EAAA;UACnBjH,YAAA,EAAc6F,EAAA;UACd5F,WAAA,EAAa6F,EAAA;UACb5F,YAAA,EAAc6F,EAAA;UACd1F,OAAA,EAAS2F,EAAA;UACThC,OAAA,EAASkC;QAAA,GAVJzN,CAAA,CAAM8E,EAAA;MAAA;IAAA,GAHT,WAoBlBa,CAAA,CAAOQ,QAAA,CAAS,cAChBuI,EAAA,CAAUtD,MAAA,GACN3I,CAAA,CAAChC,CAAA,EAAQ;MAAAiJ,QAAA,IACW,MAAfhD,EAAA,IACGnE,CAAA,CAAC6J,EAAA,EAAW;QACR9D,QAAA,EAAU5B,EAAA;QACV9B,MAAA,EAAQwJ,EAAA;QACR/F,QAAA,EAAS;QACT9D,OAAA,EAASwC,EAAA;QACTT,KAAA,EAAOyF;MAAA,KAGD,MAAbG,EAAA,IACG3J,CAAA,CAAC6J,EAAA,EAAW;QACR9D,QAAA,EAAU4D,EAAA;QACVtH,MAAA,EAAQwJ,EAAA;QACR/F,QAAA,EAAS;QACT9D,OAAA,EAASgI,EAAA;QACTjG,KAAA,EAAOmG;MAAA;IAAA,GAhBL;IAuBtB,IAAMkC,EAAA,GAAgE1O,CAAA,CAClE;MAAA,OAAO;QACHkP,UAAA,EAAApB,EAAA;QACAsB,WAAA,EAAArB,EAAA;QACAuB,UAAA,EAAAtB,EAAA;QACAwB,WAAA,EAAAvB,EAAA;QACAtJ,MAAA,EAAAwJ,EAAA;QACA/I,MAAA,EAAAgJ,EAAA;QACA2E,aAAA,EAAAzE;MAAA,CACH;IAAA,GACD,CAACR,EAAA,EAAYC,EAAA,EAAaC,EAAA,EAAYC,EAAA,EAAaE,EAAA,EAAQC,EAAA,EAAQE,EAAA;IAGvE,OACIhM,CAAA,CAACpB,CAAA,EAAU;MACPoS,IAAA,EAAM9E,EAAA;MACNnO,KAAA,EAAO2N,EAAA;MACPzN,MAAA,EAAQ0N,EAAA;MACR5C,MAAA,EAAQwC,EAAA;MACRjE,IAAA,EAAM8D,EAAA;MACNkD,GAAA,EAAKjD,EAAA;MAAalE,QAAA,EAEjB/D,CAAA,CAAOd,GAAA,CAAI,UAAC7E,CAAA,EAAOC,CAAA;QAAM,IAAA0D,CAAA;QACtB,OAAqB,qBAAV3D,CAAA,GACAuC,CAAA,CAAC9B,CAAA,EAAQ;UAAAiJ,QAAA,EAAUtJ,CAAA,CAAcJ,CAAA,EAAO2O,EAAA;QAAA,GAAzB1O,CAAA,IAGD,SAAzB0D,CAAA,GAAO,QAAA+K,EAAA,YAAAA,EAAA,CAAY1O,CAAA,KAAM2D,CAAA,GAAI;MAAA;IAAA,EAI7C;EAAA;EAEa6I,EAAA,GAAWjM,CAAA,CACpB,UAAAP,CAAA,EAYIC,CAAA;IAAuB,IAAA0D,CAAA,GAAA3D,CAAA,CAPnBkD,aAAA;MAAA9C,CAAA,QAAa,MAAAuD,CAAA,GAAG0I,EAAA,CAAwBnJ,aAAA,GAAaS,CAAA;MAAAtD,CAAA,GAAAL,CAAA,CACrDgK,OAAA;MAAAzJ,CAAA,QAAO,MAAAF,CAAA,GAAGgM,EAAA,CAAwBrC,OAAA,GAAO3J,CAAA;MAAAI,CAAA,GAAAT,CAAA,CACzC4K,YAAA;MAAAjK,CAAA,QAAY,MAAAF,CAAA,GAAG4L,EAAA,CAAwBzB,YAAA,GAAYnK,CAAA;MACnDI,CAAA,GAAKb,CAAA,CAAL8Q,KAAA;MACA7P,CAAA,GAAajB,CAAA,CAAb8J,aAAA;MACG3I,CAAA,GAAKoC,CAAA,CAAAvD,CAAA,EAAAsM,EAAA;IAAA,OAIZ/J,CAAA,CAACxB,CAAA,EAAS;MAEFiJ,OAAA,EAAAzJ,CAAA;MACA2C,aAAA,EAAA9C,CAAA;MACAwK,YAAA,EAAAjK,CAAA;MACAmJ,aAAA,EAAA7I,CAAA;MACA6P,KAAA,EAAAjQ,CAAA;MAAK6I,QAAA,EAGTnH,CAAA,CAACgK,EAAA,EAAalG,CAAA;QACVnD,aAAA,EAAe9C;MAAA,GACXe,CAAA,EAAK;QACT4N,YAAA,EAAc9O;MAAA;IAAA,EAEV;EAAA;EAAAwM,EAAA;EC7PPC,EAAA,GAAqBnM,CAAA,CAC9B,UAAAP,CAAA,EAWIC,CAAA;IAAuB,IANnB0D,CAAA,GAAY3D,CAAA,CAAZ+Q,YAAA;MACA3Q,CAAA,GAAaJ,CAAA,CAAbgR,aAAA;MACA3Q,CAAA,GAAQL,CAAA,CAARiR,QAAA;MACA1Q,CAAA,GAAcP,CAAA,CAAdkR,cAAA;MACGzQ,CAAA,GAAK8C,CAAA,CAAAvD,CAAA,EAAAyM,EAAA;IAAA,OAIZlK,CAAA,CAAClB,CAAA,EAAiB;MACd0P,YAAA,EAAcpN,CAAA;MACdqN,aAAA,EAAe5Q,CAAA;MACf6Q,QAAA,EAAU5Q,CAAA;MACV6Q,cAAA,EAAgB3Q,CAAA;MAAemJ,QAAA,EAE9B,SAAAA,CAAA1J,CAAA;QAAA,IAAG2D,CAAA,GAAK3D,CAAA,CAALM,KAAA;UAAOF,CAAA,GAAMJ,CAAA,CAANQ,MAAA;QAAM,OACb+B,CAAA,CAACiK,EAAA,EAAQnG,CAAA;UAAoB/F,KAAA,EAAOqD,CAAA;UAAOnD,MAAA,EAAQJ;QAAA,GAAYK,CAAA,EAAK;UAAEoQ,GAAA,EAAK5Q;QAAA,GAAO;MAAA;IAAA,EAEtE;EAAA;AAAA,SAAAuM,EAAA,IAAAmH,QAAA,EAAApN,CAAA,IAAAqN,IAAA,EAAAlH,EAAA,IAAAmH,kBAAA,EAAAnN,EAAA,IAAAoN,cAAA,EAAAzH,EAAA,IAAA0H,uBAAA,EAAAvO,CAAA,IAAAwO,mBAAA,EAAArN,EAAA,IAAAwK,WAAA,EAAApK,EAAA,IAAAqK,mBAAA,EAAApF,EAAA,IAAAuG,WAAA,EAAAtG,EAAA,IAAAgH,wBAAA,EAAA/G,EAAA,IAAAgH,uBAAA,EAAAhT,CAAA,IAAAC,OAAA,EAAAsD,CAAA,IAAAwE,oBAAA,EAAAzE,CAAA,IAAA8D,oBAAA,EAAA5D,CAAA,IAAA0E,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}