{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\RealTimeLogs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport './RealTimeLogs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimeLogs = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [error, setError] = useState('');\n  const [autoScroll, setAutoScroll] = useState(true);\n  const [filterLevel, setFilterLevel] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const logsEndRef = useRef(null);\n  const token = localStorage.getItem('token');\n  const scrollToBottom = () => {\n    if (autoScroll && logsEndRef.current) {\n      logsEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [logs]);\n  useEffect(() => {\n    let interval;\n    let isMounted = true;\n    const fetchLatestLogs = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/data/logs?limit=50', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!isMounted) return;\n        const data = await response.json();\n        if (!response.ok) throw new Error(data.error || 'Failed to fetch logs');\n        setLogs(data.errors || []);\n        setIsConnected(true);\n        setError('');\n      } catch (err) {\n        if (isMounted) {\n          setError(err.message);\n          setIsConnected(false);\n        }\n      }\n    };\n\n    // Initial fetch\n    fetchLatestLogs();\n\n    // Set up polling every 2 seconds\n    interval = setInterval(fetchLatestLogs, 2000);\n    return () => {\n      isMounted = false;\n      if (interval) clearInterval(interval);\n    };\n  }, [token]);\n  const parseLogEntry = logEntry => {\n    const timestampMatch = logEntry.match(/\\[(.*?)\\]/);\n    const fileMatch = logEntry.match(/\\[(.*?)\\]/g);\n    if (timestampMatch && fileMatch && fileMatch.length > 1) {\n      return {\n        timestamp: timestampMatch[1],\n        fileName: fileMatch[1].replace(/[\\[\\]]/g, ''),\n        message: logEntry.replace(/\\[.*?\\]\\s*\\[.*?\\]\\s*/, ''),\n        fullMessage: logEntry,\n        level: logEntry.toLowerCase().includes('error') ? 'error' : logEntry.toLowerCase().includes('warning') ? 'warning' : 'info'\n      };\n    }\n    return {\n      timestamp: new Date().toISOString(),\n      fileName: 'unknown',\n      message: logEntry,\n      fullMessage: logEntry,\n      level: 'info'\n    };\n  };\n  const filteredLogs = logs.map(parseLogEntry).filter(log => {\n    // Filter by level\n    if (filterLevel !== 'all' && log.level !== filterLevel) {\n      return false;\n    }\n\n    // Filter by search term\n    if (searchTerm && !log.message.toLowerCase().includes(searchTerm.toLowerCase())) {\n      return false;\n    }\n    return true;\n  });\n  const getLevelIcon = level => {\n    switch (level) {\n      case 'error':\n        return '🔴';\n      case 'warning':\n        return '🟡';\n      case 'info':\n        return '🔵';\n      default:\n        return '⚪';\n    }\n  };\n  const getLevelClass = level => {\n    switch (level) {\n      case 'error':\n        return 'log-error';\n      case 'warning':\n        return 'log-warning';\n      case 'info':\n        return 'log-info';\n      default:\n        return 'log-info';\n    }\n  };\n  const clearLogs = () => {\n    setLogs([]);\n  };\n  const exportLogs = () => {\n    const csvContent = ['Timestamp,File,Level,Message', ...filteredLogs.map(log => `\"${log.timestamp}\",\"${log.fileName}\",\"${log.level}\",\"${log.message.replace(/\"/g, '\"\"')}\"`)].join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `realtime_logs_${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"realtime-logs\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Real-Time Logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-indicator ${isConnected ? 'connected' : 'disconnected'}`,\n            children: isConnected ? '🟢' : '🔴'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-text\",\n            children: isConnected ? 'Connected' : 'Disconnected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: filterLevel,\n            onChange: e => setFilterLevel(e.target.value),\n            className: \"filter-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Levels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"error\",\n              children: \"Errors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"warning\",\n              children: \"Warnings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"info\",\n              children: \"Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search logs...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `auto-scroll-btn ${autoScroll ? 'active' : ''}`,\n            onClick: () => setAutoScroll(!autoScroll),\n            title: autoScroll ? 'Auto-scroll enabled' : 'Auto-scroll disabled',\n            children: [autoScroll ? '📌' : '📌', autoScroll ? 'Auto-scroll ON' : 'Auto-scroll OFF']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"export-btn\",\n            onClick: exportLogs,\n            children: \"\\uD83D\\uDCE5 Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-btn\",\n            onClick: clearLogs,\n            children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-container\",\n      children: filteredLogs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-logs\",\n        children: logs.length === 0 ? 'No logs available.' : 'No logs match the current filters.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logs-list\",\n        children: [filteredLogs.map((log, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `log-entry ${getLevelClass(log.level)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"log-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"log-level-icon\",\n              children: getLevelIcon(log.level)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"log-timestamp\",\n              children: new Date(log.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"log-file\",\n              children: log.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"log-level-badge\",\n              children: log.level.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"log-message\",\n            children: log.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this)]\n        }, `${log.timestamp}-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: logsEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logs-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Showing \", filteredLogs.length, \" of \", logs.length, \" logs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Last updated: \", new Date().toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(RealTimeLogs, \"oJtmsTgkCYyc26h6kk3lSMzr+pc=\");\n_c = RealTimeLogs;\nexport default RealTimeLogs;\nvar _c;\n$RefreshReg$(_c, \"RealTimeLogs\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","RealTimeLogs","_s","logs","setLogs","isConnected","setIsConnected","error","setError","autoScroll","setAutoScroll","filterLevel","setFilterLevel","searchTerm","setSearchTerm","logsEndRef","token","localStorage","getItem","scrollToBottom","current","scrollIntoView","behavior","interval","isMounted","fetchLatestLogs","response","fetch","headers","data","json","ok","Error","errors","err","message","setInterval","clearInterval","parseLogEntry","logEntry","timestampMatch","match","fileMatch","length","timestamp","fileName","replace","fullMessage","level","toLowerCase","includes","Date","toISOString","filteredLogs","map","filter","log","getLevelIcon","getLevelClass","clearLogs","exportLogs","csvContent","join","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","split","click","revokeObjectURL","className","children","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","title","idx","toLocaleString","toUpperCase","ref","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/RealTimeLogs.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport './RealTimeLogs.css';\r\n\r\nconst RealTimeLogs = () => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [autoScroll, setAutoScroll] = useState(true);\r\n  const [filterLevel, setFilterLevel] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const logsEndRef = useRef(null);\r\n  const token = localStorage.getItem('token');\r\n\r\n  const scrollToBottom = () => {\r\n    if (autoScroll && logsEndRef.current) {\r\n      logsEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [logs]);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    let isMounted = true;\r\n\r\n    const fetchLatestLogs = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/data/logs?limit=50', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        \r\n        if (!isMounted) return;\r\n        \r\n        const data = await response.json();\r\n        if (!response.ok) throw new Error(data.error || 'Failed to fetch logs');\r\n        \r\n        setLogs(data.errors || []);\r\n        setIsConnected(true);\r\n        setError('');\r\n      } catch (err) {\r\n        if (isMounted) {\r\n          setError(err.message);\r\n          setIsConnected(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Initial fetch\r\n    fetchLatestLogs();\r\n\r\n    // Set up polling every 2 seconds\r\n    interval = setInterval(fetchLatestLogs, 2000);\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [token]);\r\n\r\n  const parseLogEntry = (logEntry) => {\r\n    const timestampMatch = logEntry.match(/\\[(.*?)\\]/);\r\n    const fileMatch = logEntry.match(/\\[(.*?)\\]/g);\r\n    \r\n    if (timestampMatch && fileMatch && fileMatch.length > 1) {\r\n      return {\r\n        timestamp: timestampMatch[1],\r\n        fileName: fileMatch[1].replace(/[\\[\\]]/g, ''),\r\n        message: logEntry.replace(/\\[.*?\\]\\s*\\[.*?\\]\\s*/, ''),\r\n        fullMessage: logEntry,\r\n        level: logEntry.toLowerCase().includes('error') ? 'error' : \r\n               logEntry.toLowerCase().includes('warning') ? 'warning' : 'info'\r\n      };\r\n    }\r\n    \r\n    return {\r\n      timestamp: new Date().toISOString(),\r\n      fileName: 'unknown',\r\n      message: logEntry,\r\n      fullMessage: logEntry,\r\n      level: 'info'\r\n    };\r\n  };\r\n\r\n  const filteredLogs = logs\r\n    .map(parseLogEntry)\r\n    .filter(log => {\r\n      // Filter by level\r\n      if (filterLevel !== 'all' && log.level !== filterLevel) {\r\n        return false;\r\n      }\r\n      \r\n      // Filter by search term\r\n      if (searchTerm && !log.message.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    });\r\n\r\n  const getLevelIcon = (level) => {\r\n    switch (level) {\r\n      case 'error': return '🔴';\r\n      case 'warning': return '🟡';\r\n      case 'info': return '🔵';\r\n      default: return '⚪';\r\n    }\r\n  };\r\n\r\n  const getLevelClass = (level) => {\r\n    switch (level) {\r\n      case 'error': return 'log-error';\r\n      case 'warning': return 'log-warning';\r\n      case 'info': return 'log-info';\r\n      default: return 'log-info';\r\n    }\r\n  };\r\n\r\n  const clearLogs = () => {\r\n    setLogs([]);\r\n  };\r\n\r\n  const exportLogs = () => {\r\n    const csvContent = [\r\n      'Timestamp,File,Level,Message',\r\n      ...filteredLogs.map(log => \r\n        `\"${log.timestamp}\",\"${log.fileName}\",\"${log.level}\",\"${log.message.replace(/\"/g, '\"\"')}\"`\r\n      )\r\n    ].join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `realtime_logs_${new Date().toISOString().split('T')[0]}.csv`;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"realtime-logs\">\r\n      <div className=\"logs-header\">\r\n        <div className=\"header-left\">\r\n          <h2>Real-Time Logs</h2>\r\n          <div className=\"connection-status\">\r\n            <span className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}>\r\n              {isConnected ? '🟢' : '🔴'}\r\n            </span>\r\n            <span className=\"status-text\">\r\n              {isConnected ? 'Connected' : 'Disconnected'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"header-controls\">\r\n          <div className=\"filter-controls\">\r\n            <select \r\n              value={filterLevel} \r\n              onChange={(e) => setFilterLevel(e.target.value)}\r\n              className=\"filter-select\"\r\n            >\r\n              <option value=\"all\">All Levels</option>\r\n              <option value=\"error\">Errors</option>\r\n              <option value=\"warning\">Warnings</option>\r\n              <option value=\"info\">Info</option>\r\n            </select>\r\n            \r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search logs...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"search-input\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"action-controls\">\r\n            <button \r\n              className={`auto-scroll-btn ${autoScroll ? 'active' : ''}`}\r\n              onClick={() => setAutoScroll(!autoScroll)}\r\n              title={autoScroll ? 'Auto-scroll enabled' : 'Auto-scroll disabled'}\r\n            >\r\n              {autoScroll ? '📌' : '📌'}\r\n              {autoScroll ? 'Auto-scroll ON' : 'Auto-scroll OFF'}\r\n            </button>\r\n            \r\n            <button className=\"export-btn\" onClick={exportLogs}>\r\n              📥 Export\r\n            </button>\r\n            \r\n            <button className=\"clear-btn\" onClick={clearLogs}>\r\n              🗑️ Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <span>⚠️ {error}</span>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"logs-container\">\r\n        {filteredLogs.length === 0 ? (\r\n          <div className=\"no-logs\">\r\n            {logs.length === 0 ? 'No logs available.' : 'No logs match the current filters.'}\r\n          </div>\r\n        ) : (\r\n          <div className=\"logs-list\">\r\n            {filteredLogs.map((log, idx) => (\r\n              <div key={`${log.timestamp}-${idx}`} className={`log-entry ${getLevelClass(log.level)}`}>\r\n                <div className=\"log-header\">\r\n                  <span className=\"log-level-icon\">{getLevelIcon(log.level)}</span>\r\n                  <span className=\"log-timestamp\">{new Date(log.timestamp).toLocaleString()}</span>\r\n                  <span className=\"log-file\">{log.fileName}</span>\r\n                  <span className=\"log-level-badge\">{log.level.toUpperCase()}</span>\r\n                </div>\r\n                <div className=\"log-message\">{log.message}</div>\r\n              </div>\r\n            ))}\r\n            <div ref={logsEndRef} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"logs-footer\">\r\n        <div className=\"logs-info\">\r\n          <span>Showing {filteredLogs.length} of {logs.length} logs</span>\r\n          <span>Last updated: {new Date().toLocaleTimeString()}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RealTimeLogs; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}