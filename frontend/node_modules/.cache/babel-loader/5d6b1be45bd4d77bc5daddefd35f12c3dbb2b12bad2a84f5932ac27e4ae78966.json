{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\EngineerCharts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, LineChart, Line, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area, ScatterChart, Scatter, ZAxis, ComposedChart, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar, RadialBarChart, RadialBar } from 'recharts';\nimport './EngineerCharts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EngineerCharts = ({\n  data,\n  filters\n}) => {\n  _s();\n  const [activeChart, setActiveChart] = useState('stages');\n  const [timeRange, setTimeRange] = useState('7d');\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    if (data && data.length > 0) {\n      processChartData();\n    }\n  }, [data, filters, timeRange]);\n  const processChartData = () => {\n    const processed = {};\n\n    // 1. Stage-wise Analysis\n    processed.stages = processStageData();\n\n    // 2. Area Trends\n    processed.areaTrends = processAreaTrends();\n\n    // 3. Internal Timing Analysis\n    processed.internalTiming = processInternalTiming();\n\n    // 4. Utilization Analysis\n    processed.utilization = processUtilizationData();\n\n    // 5. Interface Timing Analysis\n    processed.interfaceTiming = processInterfaceTiming();\n\n    // 6. Congestion Analysis\n    processed.congestion = processCongestionData();\n\n    // 7. Performance Metrics\n    processed.performance = processPerformanceMetrics();\n\n    // 8. Runtime Analysis\n    processed.runtime = processRuntimeData();\n    setChartData(processed);\n  };\n  const processStageData = () => {\n    const stageStats = {};\n    data.forEach(row => {\n      const stage = row.stage || 'Unknown';\n      const status = row.run_status || 'unknown';\n      if (!stageStats[stage]) {\n        stageStats[stage] = {\n          stage,\n          total: 0,\n          pass: 0,\n          fail: 0,\n          continue_with_error: 0,\n          avg_area: 0,\n          avg_utilization: 0,\n          avg_runtime: 0,\n          total_area: 0,\n          total_utilization: 0,\n          total_runtime: 0\n        };\n      }\n      stageStats[stage].total++;\n      stageStats[stage][status]++;\n\n      // Accumulate metrics for averaging\n      const area = parseFloat(row.area_um2) || 0;\n      const utilization = parseFloat(row.utilization) || 0;\n      const runtime = parseInt(row.runtime_seconds) || 0;\n      stageStats[stage].total_area += area;\n      stageStats[stage].total_utilization += utilization;\n      stageStats[stage].total_runtime += runtime;\n    });\n\n    // Calculate averages\n    Object.values(stageStats).forEach(stage => {\n      stage.avg_area = stage.total > 0 ? stage.total_area / stage.total : 0;\n      stage.avg_utilization = stage.total > 0 ? stage.total_utilization / stage.total : 0;\n      stage.avg_runtime = stage.total > 0 ? stage.total_runtime / stage.total : 0;\n    });\n    return Object.values(stageStats);\n  };\n  const processAreaTrends = () => {\n    const areaData = data.filter(row => row.area_um2 && row.run_end_time).map(row => ({\n      date: new Date(row.run_end_time).toLocaleDateString(),\n      area: parseFloat(row.area_um2),\n      status: row.run_status,\n      stage: row.stage,\n      utilization: parseFloat(row.utilization) || 0\n    })).sort((a, b) => new Date(a.date) - new Date(b.date));\n    return areaData;\n  };\n  const processInternalTiming = () => {\n    const timingData = data.filter(row => row.internal_timing).map(row => ({\n      block: row.block_name,\n      internal_timing: row.internal_timing,\n      status: row.run_status,\n      stage: row.stage,\n      area: parseFloat(row.area_um2) || 0\n    }));\n    return timingData;\n  };\n  const processUtilizationData = () => {\n    const utilizationData = data.filter(row => row.utilization).map(row => ({\n      block: row.block_name,\n      utilization: parseFloat(row.utilization),\n      area: parseFloat(row.area_um2) || 0,\n      status: row.run_status,\n      stage: row.stage,\n      runtime: parseInt(row.runtime_seconds) || 0\n    }));\n    return utilizationData;\n  };\n  const processInterfaceTiming = () => {\n    const interfaceData = data.filter(row => row.interface_timing).map(row => ({\n      block: row.block_name,\n      interface_timing: row.interface_timing,\n      status: row.run_status,\n      stage: row.stage,\n      area: parseFloat(row.area_um2) || 0\n    }));\n    return interfaceData;\n  };\n  const processCongestionData = () => {\n    const congestionData = data.filter(row => row.congestion_drc_metrics).map(row => ({\n      block: row.block_name,\n      congestion: row.congestion_drc_metrics,\n      status: row.run_status,\n      stage: row.stage,\n      area: parseFloat(row.area_um2) || 0,\n      utilization: parseFloat(row.utilization) || 0\n    }));\n    return congestionData;\n  };\n  const processPerformanceMetrics = () => {\n    const performanceData = data.map(row => ({\n      block: row.block_name,\n      area: parseFloat(row.area_um2) || 0,\n      utilization: parseFloat(row.utilization) || 0,\n      runtime: parseInt(row.runtime_seconds) || 0,\n      status: row.run_status,\n      stage: row.stage\n    }));\n    return performanceData;\n  };\n  const processRuntimeData = () => {\n    const runtimeData = data.filter(row => row.runtime_seconds && row.run_end_time).map(row => ({\n      date: new Date(row.run_end_time).toLocaleDateString(),\n      runtime: parseInt(row.runtime_seconds),\n      status: row.run_status,\n      stage: row.stage,\n      area: parseFloat(row.area_um2) || 0\n    })).sort((a, b) => new Date(a.date) - new Date(b.date));\n    return runtimeData;\n  };\n  const renderStageAnalysis = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Stage-wise Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Stage Status Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.stages,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"pass\",\n              stackId: \"a\",\n              fill: \"#16a34a\",\n              name: \"Pass\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"fail\",\n              stackId: \"a\",\n              fill: \"#dc2626\",\n              name: \"Fail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"continue_with_error\",\n              stackId: \"a\",\n              fill: \"#f59e0b\",\n              name: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Average Area by Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.stages,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"avg_area\",\n              fill: \"#6366f1\",\n              name: \"Avg Area (um\\xB2)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Average Utilization by Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.stages,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"avg_utilization\",\n              fill: \"#10b981\",\n              name: \"Avg Utilization (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Average Runtime by Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.stages,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"avg_runtime\",\n              fill: \"#f59e0b\",\n              name: \"Avg Runtime (sec)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n  const renderAreaTrends = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Area Trends Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Area Trends Over Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: chartData.areaTrends,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"area\",\n              stroke: \"#6366f1\",\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Area vs Utilization Scatter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"area\",\n              name: \"Area (um\\xB2)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              dataKey: \"utilization\",\n              name: \"Utilization (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: chartData.areaTrends,\n              fill: \"#6366f1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n  const renderInternalTiming = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Internal Timing Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Internal Timing by Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.internalTiming,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"internal_timing\",\n              fill: \"#8b5cf6\",\n              name: \"Internal Timing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n  const renderUtilization = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Utilization Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Utilization Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.utilization,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"utilization\",\n              fill: \"#10b981\",\n              name: \"Utilization (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Utilization vs Runtime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"utilization\",\n              name: \"Utilization (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              dataKey: \"runtime\",\n              name: \"Runtime (sec)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: chartData.utilization,\n              fill: \"#10b981\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n  const renderInterfaceTiming = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Interface Timing Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Interface Timing by Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.interfaceTiming,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"interface_timing\",\n              fill: \"#06b6d4\",\n              name: \"Interface Timing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n  const renderCongestion = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Congestion Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Congestion Metrics by Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: chartData.congestion,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"congestion\",\n              fill: \"#ef4444\",\n              name: \"Congestion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Congestion vs Utilization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"utilization\",\n              name: \"Utilization (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              dataKey: \"congestion\",\n              name: \"Congestion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: chartData.congestion,\n              fill: \"#ef4444\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 5\n  }, this);\n  const renderPerformance = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Performance Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Area vs Runtime Performance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"area\",\n              name: \"Area (um\\xB2)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              dataKey: \"runtime\",\n              name: \"Runtime (sec)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ZAxis, {\n              dataKey: \"utilization\",\n              range: [100, 400]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: chartData.performance,\n              fill: \"#6366f1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Runtime Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: chartData.runtime,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"runtime\",\n              stroke: \"#f59e0b\",\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 5\n  }, this);\n  const renderChartContent = () => {\n    switch (activeChart) {\n      case 'stages':\n        return renderStageAnalysis();\n      case 'area':\n        return renderAreaTrends();\n      case 'internal-timing':\n        return renderInternalTiming();\n      case 'utilization':\n        return renderUtilization();\n      case 'interface-timing':\n        return renderInterfaceTiming();\n      case 'congestion':\n        return renderCongestion();\n      case 'performance':\n        return renderPerformance();\n      default:\n        return renderStageAnalysis();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"engineer-charts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Engineer Analytics Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'stages' ? 'active' : '',\n            onClick: () => setActiveChart('stages'),\n            children: \"Stages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'area' ? 'active' : '',\n            onClick: () => setActiveChart('area'),\n            children: \"Area Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'internal-timing' ? 'active' : '',\n            onClick: () => setActiveChart('internal-timing'),\n            children: \"Internal Timing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'utilization' ? 'active' : '',\n            onClick: () => setActiveChart('utilization'),\n            children: \"Utilization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'interface-timing' ? 'active' : '',\n            onClick: () => setActiveChart('interface-timing'),\n            children: \"Interface Timing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'congestion' ? 'active' : '',\n            onClick: () => setActiveChart('congestion'),\n            children: \"Congestion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeChart === 'performance' ? 'active' : '',\n            onClick: () => setActiveChart('performance'),\n            children: \"Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-content\",\n      children: renderChartContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 455,\n    columnNumber: 5\n  }, this);\n};\n_s(EngineerCharts, \"kK8w0gFJJRnpmZt2RCspPqeRQwA=\");\n_c = EngineerCharts;\nexport default EngineerCharts;\nvar _c;\n$RefreshReg$(_c, \"EngineerCharts\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","LineChart","Line","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","AreaChart","Area","ScatterChart","Scatter","ZAxis","ComposedChart","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","RadialBarChart","RadialBar","jsxDEV","_jsxDEV","EngineerCharts","data","filters","_s","activeChart","setActiveChart","timeRange","setTimeRange","chartData","setChartData","length","processChartData","processed","stages","processStageData","areaTrends","processAreaTrends","internalTiming","processInternalTiming","utilization","processUtilizationData","interfaceTiming","processInterfaceTiming","congestion","processCongestionData","performance","processPerformanceMetrics","runtime","processRuntimeData","stageStats","forEach","row","stage","status","run_status","total","pass","fail","continue_with_error","avg_area","avg_utilization","avg_runtime","total_area","total_utilization","total_runtime","area","parseFloat","area_um2","parseInt","runtime_seconds","Object","values","areaData","filter","run_end_time","map","date","Date","toLocaleDateString","sort","a","b","timingData","internal_timing","block","block_name","utilizationData","interfaceData","interface_timing","congestionData","congestion_drc_metrics","performanceData","runtimeData","renderStageAnalysis","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","stackId","fill","name","renderAreaTrends","type","stroke","strokeWidth","renderInternalTiming","renderUtilization","renderInterfaceTiming","renderCongestion","renderPerformance","range","renderChartContent","onClick","_c","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/EngineerCharts.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  BarChart, Bar, LineChart, Line, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, \r\n  Tooltip, Legend, ResponsiveContainer, AreaChart, Area, ScatterChart, Scatter, \r\n  ZAxis, ComposedChart, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, \r\n  Radar, RadialBarChart, RadialBar\r\n} from 'recharts';\r\nimport './EngineerCharts.css';\r\n\r\nconst EngineerCharts = ({ data, filters }) => {\r\n  const [activeChart, setActiveChart] = useState('stages');\r\n  const [timeRange, setTimeRange] = useState('7d');\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (data && data.length > 0) {\r\n      processChartData();\r\n    }\r\n  }, [data, filters, timeRange]);\r\n\r\n  const processChartData = () => {\r\n    const processed = {};\r\n\r\n    // 1. Stage-wise Analysis\r\n    processed.stages = processStageData();\r\n    \r\n    // 2. Area Trends\r\n    processed.areaTrends = processAreaTrends();\r\n    \r\n    // 3. Internal Timing Analysis\r\n    processed.internalTiming = processInternalTiming();\r\n    \r\n    // 4. Utilization Analysis\r\n    processed.utilization = processUtilizationData();\r\n    \r\n    // 5. Interface Timing Analysis\r\n    processed.interfaceTiming = processInterfaceTiming();\r\n    \r\n    // 6. Congestion Analysis\r\n    processed.congestion = processCongestionData();\r\n    \r\n    // 7. Performance Metrics\r\n    processed.performance = processPerformanceMetrics();\r\n    \r\n    // 8. Runtime Analysis\r\n    processed.runtime = processRuntimeData();\r\n\r\n    setChartData(processed);\r\n  };\r\n\r\n  const processStageData = () => {\r\n    const stageStats = {};\r\n    \r\n    data.forEach(row => {\r\n      const stage = row.stage || 'Unknown';\r\n      const status = row.run_status || 'unknown';\r\n      \r\n      if (!stageStats[stage]) {\r\n        stageStats[stage] = {\r\n          stage,\r\n          total: 0,\r\n          pass: 0,\r\n          fail: 0,\r\n          continue_with_error: 0,\r\n          avg_area: 0,\r\n          avg_utilization: 0,\r\n          avg_runtime: 0,\r\n          total_area: 0,\r\n          total_utilization: 0,\r\n          total_runtime: 0\r\n        };\r\n      }\r\n      \r\n      stageStats[stage].total++;\r\n      stageStats[stage][status]++;\r\n      \r\n      // Accumulate metrics for averaging\r\n      const area = parseFloat(row.area_um2) || 0;\r\n      const utilization = parseFloat(row.utilization) || 0;\r\n      const runtime = parseInt(row.runtime_seconds) || 0;\r\n      \r\n      stageStats[stage].total_area += area;\r\n      stageStats[stage].total_utilization += utilization;\r\n      stageStats[stage].total_runtime += runtime;\r\n    });\r\n\r\n    // Calculate averages\r\n    Object.values(stageStats).forEach(stage => {\r\n      stage.avg_area = stage.total > 0 ? stage.total_area / stage.total : 0;\r\n      stage.avg_utilization = stage.total > 0 ? stage.total_utilization / stage.total : 0;\r\n      stage.avg_runtime = stage.total > 0 ? stage.total_runtime / stage.total : 0;\r\n    });\r\n\r\n    return Object.values(stageStats);\r\n  };\r\n\r\n  const processAreaTrends = () => {\r\n    const areaData = data\r\n      .filter(row => row.area_um2 && row.run_end_time)\r\n      .map(row => ({\r\n        date: new Date(row.run_end_time).toLocaleDateString(),\r\n        area: parseFloat(row.area_um2),\r\n        status: row.run_status,\r\n        stage: row.stage,\r\n        utilization: parseFloat(row.utilization) || 0\r\n      }))\r\n      .sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n    return areaData;\r\n  };\r\n\r\n  const processInternalTiming = () => {\r\n    const timingData = data\r\n      .filter(row => row.internal_timing)\r\n      .map(row => ({\r\n        block: row.block_name,\r\n        internal_timing: row.internal_timing,\r\n        status: row.run_status,\r\n        stage: row.stage,\r\n        area: parseFloat(row.area_um2) || 0\r\n      }));\r\n\r\n    return timingData;\r\n  };\r\n\r\n  const processUtilizationData = () => {\r\n    const utilizationData = data\r\n      .filter(row => row.utilization)\r\n      .map(row => ({\r\n        block: row.block_name,\r\n        utilization: parseFloat(row.utilization),\r\n        area: parseFloat(row.area_um2) || 0,\r\n        status: row.run_status,\r\n        stage: row.stage,\r\n        runtime: parseInt(row.runtime_seconds) || 0\r\n      }));\r\n\r\n    return utilizationData;\r\n  };\r\n\r\n  const processInterfaceTiming = () => {\r\n    const interfaceData = data\r\n      .filter(row => row.interface_timing)\r\n      .map(row => ({\r\n        block: row.block_name,\r\n        interface_timing: row.interface_timing,\r\n        status: row.run_status,\r\n        stage: row.stage,\r\n        area: parseFloat(row.area_um2) || 0\r\n      }));\r\n\r\n    return interfaceData;\r\n  };\r\n\r\n  const processCongestionData = () => {\r\n    const congestionData = data\r\n      .filter(row => row.congestion_drc_metrics)\r\n      .map(row => ({\r\n        block: row.block_name,\r\n        congestion: row.congestion_drc_metrics,\r\n        status: row.run_status,\r\n        stage: row.stage,\r\n        area: parseFloat(row.area_um2) || 0,\r\n        utilization: parseFloat(row.utilization) || 0\r\n      }));\r\n\r\n    return congestionData;\r\n  };\r\n\r\n  const processPerformanceMetrics = () => {\r\n    const performanceData = data.map(row => ({\r\n      block: row.block_name,\r\n      area: parseFloat(row.area_um2) || 0,\r\n      utilization: parseFloat(row.utilization) || 0,\r\n      runtime: parseInt(row.runtime_seconds) || 0,\r\n      status: row.run_status,\r\n      stage: row.stage\r\n    }));\r\n\r\n    return performanceData;\r\n  };\r\n\r\n  const processRuntimeData = () => {\r\n    const runtimeData = data\r\n      .filter(row => row.runtime_seconds && row.run_end_time)\r\n      .map(row => ({\r\n        date: new Date(row.run_end_time).toLocaleDateString(),\r\n        runtime: parseInt(row.runtime_seconds),\r\n        status: row.run_status,\r\n        stage: row.stage,\r\n        area: parseFloat(row.area_um2) || 0\r\n      }))\r\n      .sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n    return runtimeData;\r\n  };\r\n\r\n  const renderStageAnalysis = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Stage-wise Analysis</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Stage Status Distribution</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.stages}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"stage\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"pass\" stackId=\"a\" fill=\"#16a34a\" name=\"Pass\" />\r\n              <Bar dataKey=\"fail\" stackId=\"a\" fill=\"#dc2626\" name=\"Fail\" />\r\n              <Bar dataKey=\"continue_with_error\" stackId=\"a\" fill=\"#f59e0b\" name=\"Error\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Average Area by Stage</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.stages}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"stage\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"avg_area\" fill=\"#6366f1\" name=\"Avg Area (um²)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Average Utilization by Stage</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.stages}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"stage\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"avg_utilization\" fill=\"#10b981\" name=\"Avg Utilization (%)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Average Runtime by Stage</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.stages}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"stage\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"avg_runtime\" fill=\"#f59e0b\" name=\"Avg Runtime (sec)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderAreaTrends = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Area Trends Analysis</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Area Trends Over Time</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={chartData.areaTrends}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"date\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Line type=\"monotone\" dataKey=\"area\" stroke=\"#6366f1\" strokeWidth={2} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Area vs Utilization Scatter</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"area\" name=\"Area (um²)\" />\r\n              <YAxis dataKey=\"utilization\" name=\"Utilization (%)\" />\r\n              <Tooltip />\r\n              <Scatter data={chartData.areaTrends} fill=\"#6366f1\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderInternalTiming = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Internal Timing Analysis</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Internal Timing by Block</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.internalTiming}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"block\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"internal_timing\" fill=\"#8b5cf6\" name=\"Internal Timing\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderUtilization = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Utilization Analysis</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Utilization Distribution</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.utilization}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"block\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"utilization\" fill=\"#10b981\" name=\"Utilization (%)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Utilization vs Runtime</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"utilization\" name=\"Utilization (%)\" />\r\n              <YAxis dataKey=\"runtime\" name=\"Runtime (sec)\" />\r\n              <Tooltip />\r\n              <Scatter data={chartData.utilization} fill=\"#10b981\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderInterfaceTiming = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Interface Timing Analysis</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Interface Timing by Block</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.interfaceTiming}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"block\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"interface_timing\" fill=\"#06b6d4\" name=\"Interface Timing\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderCongestion = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Congestion Analysis</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Congestion Metrics by Block</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={chartData.congestion}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"block\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"congestion\" fill=\"#ef4444\" name=\"Congestion\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Congestion vs Utilization</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"utilization\" name=\"Utilization (%)\" />\r\n              <YAxis dataKey=\"congestion\" name=\"Congestion\" />\r\n              <Tooltip />\r\n              <Scatter data={chartData.congestion} fill=\"#ef4444\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderPerformance = () => (\r\n    <div className=\"chart-section\">\r\n      <h3>Performance Metrics</h3>\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <h4>Area vs Runtime Performance</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <ScatterChart>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"area\" name=\"Area (um²)\" />\r\n              <YAxis dataKey=\"runtime\" name=\"Runtime (sec)\" />\r\n              <ZAxis dataKey=\"utilization\" range={[100, 400]} />\r\n              <Tooltip />\r\n              <Scatter data={chartData.performance} fill=\"#6366f1\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        <div className=\"chart-card\">\r\n          <h4>Runtime Trends</h4>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={chartData.runtime}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"date\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Line type=\"monotone\" dataKey=\"runtime\" stroke=\"#f59e0b\" strokeWidth={2} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderChartContent = () => {\r\n    switch (activeChart) {\r\n      case 'stages':\r\n        return renderStageAnalysis();\r\n      case 'area':\r\n        return renderAreaTrends();\r\n      case 'internal-timing':\r\n        return renderInternalTiming();\r\n      case 'utilization':\r\n        return renderUtilization();\r\n      case 'interface-timing':\r\n        return renderInterfaceTiming();\r\n      case 'congestion':\r\n        return renderCongestion();\r\n      case 'performance':\r\n        return renderPerformance();\r\n      default:\r\n        return renderStageAnalysis();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"engineer-charts\">\r\n      <div className=\"charts-header\">\r\n        <h2>Engineer Analytics Dashboard</h2>\r\n        <div className=\"chart-controls\">\r\n          <div className=\"chart-tabs\">\r\n            <button \r\n              className={activeChart === 'stages' ? 'active' : ''}\r\n              onClick={() => setActiveChart('stages')}\r\n            >\r\n              Stages\r\n            </button>\r\n            <button \r\n              className={activeChart === 'area' ? 'active' : ''}\r\n              onClick={() => setActiveChart('area')}\r\n            >\r\n              Area Trends\r\n            </button>\r\n            <button \r\n              className={activeChart === 'internal-timing' ? 'active' : ''}\r\n              onClick={() => setActiveChart('internal-timing')}\r\n            >\r\n              Internal Timing\r\n            </button>\r\n            <button \r\n              className={activeChart === 'utilization' ? 'active' : ''}\r\n              onClick={() => setActiveChart('utilization')}\r\n            >\r\n              Utilization\r\n            </button>\r\n            <button \r\n              className={activeChart === 'interface-timing' ? 'active' : ''}\r\n              onClick={() => setActiveChart('interface-timing')}\r\n            >\r\n              Interface Timing\r\n            </button>\r\n            <button \r\n              className={activeChart === 'congestion' ? 'active' : ''}\r\n              onClick={() => setActiveChart('congestion')}\r\n            >\r\n              Congestion\r\n            </button>\r\n            <button \r\n              className={activeChart === 'performance' ? 'active' : ''}\r\n              onClick={() => setActiveChart('performance')}\r\n            >\r\n              Performance\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"charts-content\">\r\n        {renderChartContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EngineerCharts; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}