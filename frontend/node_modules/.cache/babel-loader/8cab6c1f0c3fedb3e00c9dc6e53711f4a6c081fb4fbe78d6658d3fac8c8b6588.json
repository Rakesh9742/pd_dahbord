{"ast":null,"code":"import { animated as n, to as t, useTransition as e, useSpring as r } from \"@react-spring/web\";\nimport { useTheme as i } from \"@nivo/theming\";\nimport { Text as a, setCanvasFont as o, drawCanvasText as u } from \"@nivo/text\";\nimport { jsx as s, jsxs as l } from \"react/jsx-runtime\";\nimport { useMemo as d, createElement as c, useCallback as f } from \"react\";\nimport { radiansToDegrees as g, positionFromAngle as p, degreesToRadians as h, midAngle as v, useMotionConfig as R, usePropertyAccessor as A, textPropsByEngine as x, getDistance as m, getAngle as y } from \"@nivo/core\";\nimport { useInheritedColor as M } from \"@nivo/colors\";\nimport { line as k, arc as C } from \"d3-shape\";\nfunction b() {\n  return b = Object.assign ? Object.assign.bind() : function (n) {\n    for (var t = 1; t < arguments.length; t++) {\n      var e = arguments[t];\n      for (var r in e) ({}).hasOwnProperty.call(e, r) && (n[r] = e[r]);\n    }\n    return n;\n  }, b.apply(null, arguments);\n}\nvar L = {\n    pointerEvents: \"none\"\n  },\n  P = function (t) {\n    var e = t.label,\n      r = t.style,\n      o = i();\n    return s(n.g, {\n      transform: r.transform,\n      opacity: r.progress,\n      style: L,\n      children: s(a, {\n        textAnchor: \"middle\",\n        dominantBaseline: \"central\",\n        style: b({}, o.labels.text, {\n          fill: r.textColor\n        }),\n        children: e\n      })\n    });\n  },\n  O = function (n) {\n    var t = n % (2 * Math.PI);\n    return t < 0 && (t += 2 * Math.PI), t;\n  },\n  E = function (n, t) {\n    return n.filter(function (n) {\n      return Math.abs(g(n.arc.endAngle - n.arc.startAngle)) >= t;\n    });\n  },\n  I = function (n, t, e, r, i) {\n    return [\"A\", n, n, 0, t, e, r, i].join(\" \");\n  },\n  T = [\"startAngle\", \"middleAngle\", \"endAngle\", \"innerRadius\", \"centerRadius\", \"outerRadius\", \"pushIn\", \"pushOut\"],\n  W = {\n    startAngle: {\n      enter: function (n) {\n        return b({}, n, {\n          endAngle: n.startAngle\n        });\n      },\n      update: function (n) {\n        return n;\n      },\n      leave: function (n) {\n        return b({}, n, {\n          startAngle: n.endAngle\n        });\n      }\n    },\n    middleAngle: {\n      enter: function (n) {\n        var t = n.startAngle + (n.endAngle - n.startAngle) / 2;\n        return b({}, n, {\n          startAngle: t,\n          endAngle: t\n        });\n      },\n      update: function (n) {\n        return n;\n      },\n      leave: function (n) {\n        var t = n.startAngle + (n.endAngle - n.startAngle) / 2;\n        return b({}, n, {\n          startAngle: t,\n          endAngle: t\n        });\n      }\n    },\n    endAngle: {\n      enter: function (n) {\n        return b({}, n, {\n          startAngle: n.endAngle\n        });\n      },\n      update: function (n) {\n        return n;\n      },\n      leave: function (n) {\n        return b({}, n, {\n          endAngle: n.startAngle\n        });\n      }\n    },\n    innerRadius: {\n      enter: function (n) {\n        return b({}, n, {\n          outerRadius: n.innerRadius\n        });\n      },\n      update: function (n) {\n        return n;\n      },\n      leave: function (n) {\n        return b({}, n, {\n          innerRadius: n.outerRadius\n        });\n      }\n    },\n    centerRadius: {\n      enter: function (n) {\n        var t = n.innerRadius + (n.outerRadius - n.innerRadius) / 2;\n        return b({}, n, {\n          innerRadius: t,\n          outerRadius: t\n        });\n      },\n      update: function (n) {\n        return n;\n      },\n      leave: function (n) {\n        var t = n.innerRadius + (n.outerRadius - n.innerRadius) / 2;\n        return b({}, n, {\n          innerRadius: t,\n          outerRadius: t\n        });\n      }\n    },\n    outerRadius: {\n      enter: function (n) {\n        return b({}, n, {\n          innerRadius: n.outerRadius\n        });\n      },\n      update: function (n) {\n        return n;\n      },\n      leave: function (n) {\n        return b({}, n, {\n          outerRadius: n.innerRadius\n        });\n      }\n    },\n    pushIn: {\n      enter: function (n) {\n        return b({}, n, {\n          innerRadius: n.innerRadius - n.outerRadius + n.innerRadius,\n          outerRadius: n.innerRadius\n        });\n      },\n      update: function (n) {\n        return n;\n      },\n      leave: function (n) {\n        return b({}, n, {\n          innerRadius: n.outerRadius,\n          outerRadius: n.outerRadius + n.outerRadius - n.innerRadius\n        });\n      }\n    },\n    pushOut: {\n      enter: function (n) {\n        return b({}, n, {\n          innerRadius: n.outerRadius,\n          outerRadius: n.outerRadius + n.outerRadius - n.innerRadius\n        });\n      },\n      update: function (n) {\n        return n;\n      },\n      leave: function (n) {\n        return b({}, n, {\n          innerRadius: n.innerRadius - n.outerRadius + n.innerRadius,\n          outerRadius: n.innerRadius\n        });\n      }\n    }\n  },\n  j = function (n, t) {\n    return d(function () {\n      var e = W[n];\n      return {\n        enter: function (n) {\n          return b({\n            progress: 0\n          }, e.enter(n.arc), t ? t.enter(n) : {});\n        },\n        update: function (n) {\n          return b({\n            progress: 1\n          }, e.update(n.arc), t ? t.update(n) : {});\n        },\n        leave: function (n) {\n          return b({\n            progress: 0\n          }, e.leave(n.arc), t ? t.leave(n) : {});\n        }\n      };\n    }, [n, t]);\n  },\n  w = function (n, t) {\n    var e = v(n) - Math.PI / 2,\n      r = n.innerRadius + (n.outerRadius - n.innerRadius) * t;\n    return p(e, r);\n  },\n  B = function (n) {\n    return function (e, r, i, a) {\n      return t([e, r, i, a], function (t, e, r, i) {\n        var a = w({\n          startAngle: t,\n          endAngle: e,\n          innerRadius: r,\n          outerRadius: i\n        }, n);\n        return \"translate(\" + a.x + \",\" + a.y + \")\";\n      });\n    };\n  },\n  S = function (n, t, r, i) {\n    void 0 === t && (t = .5), void 0 === r && (r = \"innerRadius\");\n    var a = R(),\n      o = a.animate,\n      u = a.config,\n      s = j(r, i);\n    return {\n      transition: e(n, {\n        keys: function (n) {\n          return n.id;\n        },\n        initial: s.update,\n        from: s.enter,\n        enter: s.update,\n        update: s.update,\n        leave: s.leave,\n        config: u,\n        immediate: !o\n      }),\n      interpolate: B(t)\n    };\n  },\n  G = function (n) {\n    var t = n.data,\n      e = n.offset,\n      r = void 0 === e ? .5 : e,\n      i = n.skipAngle,\n      a = void 0 === i ? 0 : i,\n      o = n.computeExtraProps,\n      u = void 0 === o ? function () {\n        return {};\n      } : o;\n    return d(function () {\n      return E(t, a).map(function (n) {\n        var t = w(n.arc, r);\n        return b({}, u(n), {\n          x: t.x,\n          y: t.y,\n          data: n\n        });\n      });\n    }, [t, r, a, u]);\n  },\n  q = function (n) {\n    var t = n.center,\n      e = n.data,\n      r = n.transitionMode,\n      a = n.label,\n      o = n.radiusOffset,\n      u = n.skipAngle,\n      l = n.skipRadius,\n      f = n.textColor,\n      p = n.component,\n      h = void 0 === p ? P : p,\n      v = A(a),\n      R = i(),\n      x = M(f, R),\n      m = d(function () {\n        return e.filter(function (n) {\n          var t = Math.abs(g(n.arc.endAngle - n.arc.startAngle)),\n            e = Math.abs(n.arc.outerRadius - n.arc.innerRadius);\n          return t >= u && e >= l;\n        });\n      }, [e, u, l]),\n      y = S(m, o, r),\n      k = y.transition,\n      C = y.interpolate,\n      b = h;\n    return s(\"g\", {\n      transform: \"translate(\" + t[0] + \",\" + t[1] + \")\",\n      children: k(function (n, t) {\n        return c(b, {\n          key: t.id,\n          datum: t,\n          label: v(t),\n          style: {\n            progress: n.progress,\n            transform: C(n.startAngle, n.endAngle, n.innerRadius, n.outerRadius),\n            textColor: x(t)\n          }\n        });\n      })\n    });\n  },\n  z = function (n, t, e) {\n    o(n, e.labels.text), n.textAlign = \"center\", n.textBaseline = \"middle\", t.forEach(function (t) {\n      u(n, b({}, e.labels.text, {\n        fill: t.textColor\n      }), String(t.label), t.x, t.y);\n    });\n  },\n  D = function (n) {\n    var t = n.data,\n      e = n.offset,\n      r = n.skipAngle,\n      a = n.label,\n      o = n.textColor,\n      u = A(a),\n      s = i(),\n      l = M(o, s),\n      d = f(function (n) {\n        return {\n          label: u(n),\n          textColor: l(n)\n        };\n      }, [u, l]);\n    return G({\n      data: t,\n      offset: e,\n      skipAngle: r,\n      computeExtraProps: d\n    });\n  },\n  F = P,\n  H = function (t) {\n    var e = t.label,\n      r = t.style,\n      o = i();\n    return l(n.g, {\n      opacity: r.opacity,\n      children: [s(n.path, {\n        fill: \"none\",\n        stroke: r.linkColor,\n        strokeWidth: r.thickness,\n        d: r.path\n      }), s(a, {\n        transform: r.textPosition,\n        textAnchor: r.textAnchor,\n        dominantBaseline: \"central\",\n        style: b({}, o.labels.text, {\n          fill: r.textColor\n        }),\n        children: e\n      })]\n    });\n  },\n  J = function (n) {\n    var t = O(n.startAngle + (n.endAngle - n.startAngle) / 2 - Math.PI / 2);\n    return t < Math.PI / 2 || t > 1.5 * Math.PI ? \"start\" : \"end\";\n  },\n  K = function (n, t, e, r) {\n    var i,\n      a,\n      o = O(n.startAngle + (n.endAngle - n.startAngle) / 2 - Math.PI / 2),\n      u = p(o, n.outerRadius + t),\n      s = p(o, n.outerRadius + t + e);\n    return o < Math.PI / 2 || o > 1.5 * Math.PI ? (i = \"after\", a = {\n      x: s.x + r,\n      y: s.y\n    }) : (i = \"before\", a = {\n      x: s.x - r,\n      y: s.y\n    }), {\n      side: i,\n      points: [u, s, a]\n    };\n  },\n  N = k().x(function (n) {\n    return n.x;\n  }).y(function (n) {\n    return n.y;\n  }),\n  Q = function (n, e, r, i, a, o, u) {\n    return t([n, e, r, i, a, o, u], function (n, t, e, r, i, a, o) {\n      var u = K({\n        startAngle: n,\n        endAngle: t,\n        innerRadius: e,\n        outerRadius: r\n      }, i, a, o).points;\n      return N(u);\n    });\n  },\n  U = function (n, e, r, i) {\n    return t([n, e, r, i], function (n, t, e, r) {\n      return J({\n        startAngle: n,\n        endAngle: t,\n        innerRadius: e,\n        outerRadius: r\n      });\n    });\n  },\n  V = function (n, e, r, i, a, o, u, s) {\n    return t([n, e, r, i, a, o, u, s], function (n, t, e, r, i, a, o, u) {\n      var s = K({\n          startAngle: n,\n          endAngle: t,\n          innerRadius: e,\n          outerRadius: r\n        }, i, a, o),\n        l = s.points,\n        d = s.side,\n        c = l[2];\n      return \"before\" === d ? c.x -= u : c.x += u, \"translate(\" + c.x + \",\" + c.y + \")\";\n    });\n  },\n  X = function (n) {\n    var t = n.data,\n      r = n.offset,\n      a = void 0 === r ? 0 : r,\n      o = n.diagonalLength,\n      u = n.straightLength,\n      s = n.skipAngle,\n      l = void 0 === s ? 0 : s,\n      c = n.textOffset,\n      f = n.linkColor,\n      g = n.textColor,\n      p = R(),\n      h = p.animate,\n      v = p.config,\n      A = i(),\n      x = M(f, A),\n      m = M(g, A),\n      y = function (n, t) {\n        return d(function () {\n          return E(n, t);\n        }, [n, t]);\n      }(t, l),\n      k = function (n) {\n        var t = n.offset,\n          e = n.diagonalLength,\n          r = n.straightLength,\n          i = n.textOffset,\n          a = n.getLinkColor,\n          o = n.getTextColor;\n        return d(function () {\n          return {\n            enter: function (n) {\n              return {\n                startAngle: n.arc.startAngle,\n                endAngle: n.arc.endAngle,\n                innerRadius: n.arc.innerRadius,\n                outerRadius: n.arc.outerRadius,\n                offset: t,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset: i,\n                linkColor: a(n),\n                textColor: o(n),\n                opacity: 0\n              };\n            },\n            update: function (n) {\n              return {\n                startAngle: n.arc.startAngle,\n                endAngle: n.arc.endAngle,\n                innerRadius: n.arc.innerRadius,\n                outerRadius: n.arc.outerRadius,\n                offset: t,\n                diagonalLength: e,\n                straightLength: r,\n                textOffset: i,\n                linkColor: a(n),\n                textColor: o(n),\n                opacity: 1\n              };\n            },\n            leave: function (n) {\n              return {\n                startAngle: n.arc.startAngle,\n                endAngle: n.arc.endAngle,\n                innerRadius: n.arc.innerRadius,\n                outerRadius: n.arc.outerRadius,\n                offset: t,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset: i,\n                linkColor: a(n),\n                textColor: o(n),\n                opacity: 0\n              };\n            }\n          };\n        }, [e, r, i, a, o, t]);\n      }({\n        offset: a,\n        diagonalLength: o,\n        straightLength: u,\n        textOffset: c,\n        getLinkColor: x,\n        getTextColor: m\n      });\n    return {\n      transition: e(y, {\n        keys: function (n) {\n          return n.id;\n        },\n        initial: k.update,\n        from: k.enter,\n        enter: k.update,\n        update: k.update,\n        leave: k.leave,\n        config: v,\n        immediate: !h\n      }),\n      interpolateLink: Q,\n      interpolateTextAnchor: U,\n      interpolateTextPosition: V\n    };\n  },\n  Y = function (n) {\n    var t = n.center,\n      e = n.data,\n      r = n.label,\n      i = n.skipAngle,\n      a = n.offset,\n      o = n.diagonalLength,\n      u = n.straightLength,\n      l = n.strokeWidth,\n      d = n.textOffset,\n      f = n.textColor,\n      g = n.linkColor,\n      p = n.component,\n      h = void 0 === p ? H : p,\n      v = A(r),\n      R = X({\n        data: e,\n        skipAngle: i,\n        offset: a,\n        diagonalLength: o,\n        straightLength: u,\n        textOffset: d,\n        linkColor: g,\n        textColor: f\n      }),\n      x = R.transition,\n      m = R.interpolateLink,\n      y = R.interpolateTextAnchor,\n      M = R.interpolateTextPosition,\n      k = h;\n    return s(\"g\", {\n      transform: \"translate(\" + t[0] + \",\" + t[1] + \")\",\n      children: x(function (n, t) {\n        return c(k, {\n          key: t.id,\n          datum: t,\n          label: v(t),\n          style: b({}, n, {\n            thickness: l,\n            path: m(n.startAngle, n.endAngle, n.innerRadius, n.outerRadius, n.offset, n.diagonalLength, n.straightLength),\n            textAnchor: y(n.startAngle, n.endAngle, n.innerRadius, n.outerRadius),\n            textPosition: M(n.startAngle, n.endAngle, n.innerRadius, n.outerRadius, n.offset, n.diagonalLength, n.straightLength, n.textOffset)\n          })\n        });\n      })\n    });\n  },\n  Z = function (n, t, e, r) {\n    n.textBaseline = \"middle\", o(n, e.labels.text), t.forEach(function (t) {\n      n.textAlign = x.canvas.align[t.textAnchor], u(n, b({}, e.labels.text, {\n        fill: t.textColor\n      }), String(t.label), t.x, t.y), n.beginPath(), n.strokeStyle = t.linkColor, n.lineWidth = r, t.points.forEach(function (t, e) {\n        0 === e ? n.moveTo(t.x, t.y) : n.lineTo(t.x, t.y);\n      }), n.stroke();\n    });\n  },\n  $ = function (n) {\n    var t = n.data,\n      e = n.skipAngle,\n      r = void 0 === e ? 0 : e,\n      i = n.offset,\n      a = void 0 === i ? .5 : i,\n      o = n.diagonalLength,\n      u = n.straightLength,\n      s = n.computeExtraProps,\n      l = void 0 === s ? function () {\n        return {};\n      } : s,\n      c = d(function () {\n        return t.filter(function (n) {\n          return Math.abs(g(n.arc.endAngle - n.arc.startAngle)) >= r;\n        }).map(function (n) {\n          return b({}, K(n.arc, a, o, u), {\n            data: n\n          });\n        });\n      }, [t, r, a, o, u]);\n    return d(function () {\n      return c.map(function (n) {\n        return b({}, l(n), n);\n      });\n    }, [c, l]);\n  },\n  _ = function (n) {\n    var t = n.data,\n      e = n.skipAngle,\n      r = n.offset,\n      a = n.diagonalLength,\n      o = n.straightLength,\n      u = n.textOffset,\n      s = void 0 === u ? 0 : u,\n      l = n.label,\n      d = n.linkColor,\n      c = n.textColor,\n      g = A(l),\n      p = i(),\n      h = M(d, p),\n      v = M(c, p),\n      R = f(function (n) {\n        var t,\n          e = {\n            x: n.points[2].x,\n            y: n.points[2].y\n          };\n        return \"before\" === n.side ? (e.x -= s, t = \"end\") : (e.x += s, t = \"start\"), b({}, e, {\n          label: g(n.data),\n          linkColor: h(n.data),\n          textAnchor: t,\n          textColor: v(n.data)\n        });\n      }, [g, h, v, s]);\n    return $({\n      data: t,\n      skipAngle: e,\n      offset: r,\n      diagonalLength: a,\n      straightLength: o,\n      computeExtraProps: R\n    });\n  },\n  nn = H,\n  tn = [\"animated\"],\n  en = function (e) {\n    var r = e.animated,\n      i = function (n, t) {\n        if (null == n) return {};\n        var e = {};\n        for (var r in n) if ({}.hasOwnProperty.call(n, r)) {\n          if (-1 !== t.indexOf(r)) continue;\n          e[r] = n[r];\n        }\n        return e;\n      }(e, tn);\n    return s(n.path, b({\n      d: t([r.radius, r.startAngle, r.endAngle], function (n, t, e) {\n        return function (n, t, e) {\n          var r = Math.min(t, e),\n            i = Math.max(t, e),\n            a = p(h(i), n),\n            o = p(h(r), n);\n          if (i - r >= 360) {\n            var u = p(h(r + 180), n);\n            return [\"M \" + a.x + \" \" + a.y, I(n, 1, 1, u.x, u.y), \"M \" + a.x + \" \" + a.y, I(n, 1, 0, u.x, u.y)].join(\" \");\n          }\n          var s = i - r <= 180 ? 0 : 1;\n          return [\"M \" + a.x + \" \" + a.y, I(n, s, 0, o.x, o.y)].join(\" \");\n        }(n, t, e);\n      })\n    }, i));\n  },\n  rn = function (t) {\n    var e = t.datum,\n      r = t.style,\n      i = t.onClick,\n      a = t.onMouseEnter,\n      o = t.onMouseMove,\n      u = t.onMouseLeave,\n      l = f(function (n) {\n        return null == i ? void 0 : i(e, n);\n      }, [i, e]),\n      d = f(function (n) {\n        return null == a ? void 0 : a(e, n);\n      }, [a, e]),\n      c = f(function (n) {\n        return null == o ? void 0 : o(e, n);\n      }, [o, e]),\n      g = f(function (n) {\n        return null == u ? void 0 : u(e, n);\n      }, [u, e]);\n    return s(n.path, {\n      d: r.path,\n      opacity: r.opacity,\n      fill: e.fill || r.color,\n      stroke: r.borderColor,\n      strokeWidth: r.borderWidth,\n      onClick: i ? l : void 0,\n      onMouseEnter: a ? d : void 0,\n      onMouseMove: o ? c : void 0,\n      onMouseLeave: u ? g : void 0,\n      \"data-testid\": \"arc.\" + e.id\n    });\n  },\n  an = function (n, e, r, i, a) {\n    return t([n, e, r, i], function (n, t, e, r) {\n      return a({\n        startAngle: n,\n        endAngle: t,\n        innerRadius: Math.max(0, e),\n        outerRadius: Math.max(0, r)\n      });\n    });\n  },\n  on = function (n, t, r) {\n    void 0 === t && (t = \"innerRadius\");\n    var i = R(),\n      a = i.animate,\n      o = i.config,\n      u = j(t, r);\n    return {\n      transition: e(n, {\n        keys: function (n) {\n          return n.id;\n        },\n        initial: u.update,\n        from: u.enter,\n        enter: u.update,\n        update: u.update,\n        leave: u.leave,\n        config: o,\n        immediate: !a\n      }),\n      interpolate: an\n    };\n  },\n  un = function (n) {\n    var t = n.center,\n      e = n.data,\n      r = n.arcGenerator,\n      a = n.borderWidth,\n      o = n.borderColor,\n      u = n.onClick,\n      l = n.onMouseEnter,\n      d = n.onMouseMove,\n      f = n.onMouseLeave,\n      g = n.transitionMode,\n      p = n.component,\n      h = void 0 === p ? rn : p,\n      v = i(),\n      R = M(o, v),\n      A = on(e, g, {\n        enter: function (n) {\n          return {\n            opacity: 0,\n            color: n.color,\n            borderColor: R(n)\n          };\n        },\n        update: function (n) {\n          return {\n            opacity: 1,\n            color: n.color,\n            borderColor: R(n)\n          };\n        },\n        leave: function (n) {\n          return {\n            opacity: 0,\n            color: n.color,\n            borderColor: R(n)\n          };\n        }\n      }),\n      x = A.transition,\n      m = A.interpolate,\n      y = h;\n    return s(\"g\", {\n      transform: \"translate(\" + t[0] + \",\" + t[1] + \")\",\n      children: x(function (n, t) {\n        return c(y, {\n          key: t.id,\n          datum: t,\n          style: b({}, n, {\n            borderWidth: a,\n            path: m(n.startAngle, n.endAngle, n.innerRadius, n.outerRadius, r)\n          }),\n          onClick: u,\n          onMouseEnter: l,\n          onMouseMove: d,\n          onMouseLeave: f\n        });\n      })\n    });\n  },\n  sn = function (n, t, e, r, i, a) {\n    void 0 === a && (a = !0);\n    var o = [],\n      u = p(h(r), e);\n    o.push([u.x, u.y]);\n    var s = p(h(i), e);\n    o.push([s.x, s.y]);\n    for (var l = Math.round(Math.min(r, i)); l <= Math.round(Math.max(r, i)); l++) if (l % 90 == 0) {\n      var d = p(h(l), e);\n      o.push([d.x, d.y]);\n    }\n    o = o.map(function (e) {\n      var r = e[0],\n        i = e[1];\n      return [n + r, t + i];\n    }), a && o.push([n, t]);\n    var c = o.map(function (n) {\n        return n[0];\n      }),\n      f = o.map(function (n) {\n        return n[1];\n      }),\n      g = Math.min.apply(Math, c),\n      v = Math.max.apply(Math, c),\n      R = Math.min.apply(Math, f);\n    return {\n      points: o,\n      x: g,\n      y: R,\n      width: v - g,\n      height: Math.max.apply(Math, f) - R\n    };\n  },\n  ln = function (n, t, e, r, i, a) {\n    var o = m(i, a, n, t);\n    return o < e && o > r;\n  },\n  dn = function (n, t, e, r, i, a, o) {\n    if (ln(n, t, e, r, a, o)) {\n      var u = y(a, o, n, t);\n      return i.find(function (n) {\n        var t = n.startAngle,\n          e = n.endAngle;\n        return u >= t && u < e;\n      });\n    }\n  },\n  cn = function (n, t) {\n    var e = R(),\n      i = e.animate,\n      a = e.config,\n      o = r({\n        startAngle: n.arc.startAngle,\n        endAngle: n.arc.endAngle,\n        innerRadius: n.arc.innerRadius,\n        outerRadius: n.arc.outerRadius,\n        config: a,\n        immediate: !i\n      });\n    return b({}, o, {\n      path: an(o.startAngle, o.endAngle, o.innerRadius, o.outerRadius, t)\n    });\n  },\n  fn = function (n) {\n    var t = void 0 === n ? {} : n,\n      e = t.cornerRadius,\n      r = void 0 === e ? 0 : e,\n      i = t.padAngle,\n      a = void 0 === i ? 0 : i;\n    return d(function () {\n      return C().innerRadius(function (n) {\n        return n.innerRadius;\n      }).outerRadius(function (n) {\n        return n.outerRadius;\n      }).cornerRadius(r).padAngle(a);\n    }, [r, a]);\n  };\nexport { F as ArcLabelComponent, q as ArcLabelsLayer, en as ArcLine, nn as ArcLinkLabelComponent, Y as ArcLinkLabelsLayer, rn as ArcShape, un as ArcsLayer, W as arcTransitionModeById, T as arcTransitionModes, sn as computeArcBoundingBox, w as computeArcCenter, K as computeArcLink, J as computeArcLinkTextAnchor, z as drawCanvasArcLabels, Z as drawCanvasArcLinkLabels, dn as findArcUnderCursor, an as interpolateArc, B as interpolateArcCenter, ln as isCursorInRing, cn as useAnimatedArc, G as useArcCenters, S as useArcCentersTransition, fn as useArcGenerator, D as useArcLabels, _ as useArcLinkLabels, X as useArcLinkLabelsTransition, $ as useArcLinks, j as useArcTransitionMode, on as useArcsTransition };","map":{"version":3,"names":["L","pointerEvents","P","ArcLabel","t","e","label","r","style","o","i","s","n","g","transform","opacity","progress","children","a","textAnchor","dominantBaseline","b","labels","text","fill","textColor","O","getNormalizedAngle","Math","PI","E","filterDataBySkipAngle","filter","abs","arc","endAngle","startAngle","I","svgEllipticalArcCommand","join","T","W","enter","update","leave","middleAngle","innerRadius","outerRadius","centerRadius","pushIn","pushOut","j","useArcTransitionMode","d","w","computeArcCenter","v","p","B","interpolateArcCenter","x","y","S","useArcCentersTransition","R","animate","u","config","transition","keys","id","initial","from","immediate","interpolate","G","useArcCenters","data","offset","skipAngle","computeExtraProps","map","q","ArcLabelsLayer","center","transitionMode","radiusOffset","l","skipRadius","f","component","h","A","M","m","k","C","c","key","datum","z","drawCanvasArcLabels","textAlign","textBaseline","forEach","String","D","useArcLabels","F","H","ArcLinkLabel","path","stroke","linkColor","strokeWidth","thickness","textPosition","J","computeArcLinkTextAnchor","K","computeArcLink","side","points","N","Q","interpolateLink","U","interpolateTextAnchor","V","interpolateTextPosition","X","useArcLinkLabelsTransition","diagonalLength","straightLength","textOffset","getLinkColor","getTextColor","Y","ArcLinkLabelsLayer","Z","drawCanvasArcLinkLabels","canvas","align","beginPath","strokeStyle","lineWidth","moveTo","lineTo","$","useArcLinks","_","useArcLinkLabels","nn","tn","en","ArcLine","animated","hasOwnProperty","call","indexOf","radius","min","max","rn","ArcShape","onClick","onMouseEnter","onMouseMove","onMouseLeave","color","borderColor","borderWidth","an","interpolateArc","on","useArcsTransition","un","ArcsLayer","arcGenerator","sn","computeArcBoundingBox","push","round","apply","width","height","ln","isCursorInRing","dn","findArcUnderCursor","find","cn","useAnimatedArc","fn","useArcGenerator","cornerRadius","padAngle","ArcLabelComponent","ArcLinkLabelComponent","arcTransitionModeById","arcTransitionModes"],"sources":["C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_labels\\ArcLabel.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\utils.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arcTransitionMode.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\centers.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_labels\\ArcLabelsLayer.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_labels\\canvas.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_labels\\useArcLabels.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_labels\\index.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\ArcLinkLabel.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\compute.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\useArcLinkLabelsTransition.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\ArcLinkLabelsLayer.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\canvas.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\useArcLinks.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\useArcLinkLabels.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\index.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\ArcLine.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\ArcShape.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\interpolateArc.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\useArcsTransition.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\ArcsLayer.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\boundingBox.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\interactivity.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\useAnimatedArc.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\arcs\\src\\useArcGenerator.ts"],"sourcesContent":["import { CSSProperties } from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/theming'\nimport { Text } from '@nivo/text'\nimport { DatumWithArcAndColor } from '../types'\n\nconst staticStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\nexport interface ArcLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        progress: SpringValue<number>\n        transform: Interpolation<string>\n        textColor: string\n    }\n}\n\nexport const ArcLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={style.transform} opacity={style.progress} style={staticStyle}>\n            <Text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </Text>\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees, positionFromAngle, degreesToRadians } from '@nivo/core'\nimport { DatumWithArc } from './types'\n\n/**\n * Make sure an angle (expressed in radians)\n * always falls in the range 0~2*PI.\n */\nexport const getNormalizedAngle = (angle: number) => {\n    let normalizedAngle = angle % (Math.PI * 2)\n    if (normalizedAngle < 0) {\n        normalizedAngle += Math.PI * 2\n    }\n\n    return normalizedAngle\n}\n\n/**\n * Filter out arcs with a length below `skipAngle`.\n */\nexport const filterDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) =>\n    data.filter(\n        datum => Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle\n    )\n\n/**\n * Memoized version of `filterDataBySkipAngle`.\n */\nexport const useFilteredDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) => useMemo(() => filterDataBySkipAngle(data, skipAngle), [data, skipAngle])\n\nexport const svgEllipticalArcCommand = (\n    radius: number,\n    largeArcFlag: 0 | 1,\n    sweepFlag: 0 | 1,\n    x: number,\n    y: number\n) =>\n    [\n        'A',\n        radius,\n        radius,\n        0, // x-axis-rotation\n        largeArcFlag,\n        sweepFlag,\n        x,\n        y,\n    ].join(' ')\n\nexport const generateSvgArc = (\n    radius: number,\n    originalStartAngle: number,\n    originalEndAngle: number\n): string => {\n    const startAngle = Math.min(originalStartAngle, originalEndAngle)\n    const endAngle = Math.max(originalStartAngle, originalEndAngle)\n\n    const start = positionFromAngle(degreesToRadians(endAngle), radius)\n    const end = positionFromAngle(degreesToRadians(startAngle), radius)\n\n    // we have a full circle, we cannot use a single elliptical arc\n    // to draw it, so we use 2 in that case.\n    if (endAngle - startAngle >= 360) {\n        const mid = positionFromAngle(degreesToRadians(startAngle + 180), radius)\n\n        return [\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 1, mid.x, mid.y),\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 0, mid.x, mid.y),\n        ].join(' ')\n    }\n\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1\n\n    return [\n        `M ${start.x} ${start.y}`,\n        svgEllipticalArcCommand(radius, largeArcFlag, 0, end.x, end.y),\n    ].join(' ')\n}\n","import { Arc, DatumWithArc } from './types'\nimport { useMemo } from 'react'\n\nexport interface ArcTransitionModeConfig {\n    enter: (arc: Arc) => Arc\n    update: (arc: Arc) => Arc\n    leave: (arc: Arc) => Arc\n}\n\nexport const arcTransitionModes = [\n    'startAngle',\n    'middleAngle',\n    'endAngle',\n    'innerRadius',\n    'centerRadius',\n    'outerRadius',\n    'pushIn',\n    'pushOut',\n] as const\nexport type ArcTransitionMode = (typeof arcTransitionModes)[number]\n\nexport const arcTransitionModeById: Record<ArcTransitionMode, ArcTransitionModeConfig> = {\n    startAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n    },\n    middleAngle: {\n        enter: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n    },\n    endAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n    },\n    innerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n    },\n    centerRadius: {\n        enter: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n    },\n    outerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n    pushIn: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n    },\n    pushOut: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n}\n\nexport interface TransitionExtra<\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, never>,\n> {\n    enter: (datum: Datum) => ExtraProps\n    update: (datum: Datum) => ExtraProps\n    leave: (datum: Datum) => ExtraProps\n}\n\nexport type ArcTransitionProps<ExtraProps extends Record<string, any> = Record<string, never>> =\n    Arc & {\n        progress: number\n    } & ExtraProps\n\nexport const useArcTransitionMode = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, never>,\n>(\n    mode: ArcTransitionMode,\n    extraTransition?: TransitionExtra<Datum, ExtraProps>\n) =>\n    useMemo(() => {\n        const transitionMode = arcTransitionModeById[mode]\n\n        return {\n            enter: (datum: Datum) =>\n                ({\n                    progress: 0,\n                    ...transitionMode.enter(datum.arc),\n                    ...(extraTransition ? extraTransition.enter(datum) : {}),\n                }) as ArcTransitionProps<ExtraProps>,\n            update: (datum: Datum) =>\n                ({\n                    progress: 1,\n                    ...transitionMode.update(datum.arc),\n                    ...(extraTransition ? extraTransition.update(datum) : {}),\n                }) as ArcTransitionProps<ExtraProps>,\n            leave: (datum: Datum) =>\n                ({\n                    progress: 0,\n                    ...transitionMode.leave(datum.arc),\n                    ...(extraTransition ? extraTransition.leave(datum) : {}),\n                }) as ArcTransitionProps<ExtraProps>,\n        }\n    }, [mode, extraTransition])\n","import { useMemo } from 'react'\nimport { useTransition, to, SpringValue, TransitionFn } from '@react-spring/web'\nimport { midAngle, positionFromAngle, useMotionConfig } from '@nivo/core'\nimport { Arc, DatumWithArc, Point } from './types'\nimport { filterDataBySkipAngle } from './utils'\nimport {\n    ArcTransitionMode,\n    ArcTransitionProps,\n    TransitionExtra,\n    useArcTransitionMode,\n} from './arcTransitionMode'\n\nexport const computeArcCenter = (arc: Arc, offset: number): Point => {\n    const angle = midAngle(arc) - Math.PI / 2\n    const radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset\n\n    return positionFromAngle(angle, radius)\n}\n\nexport const interpolateArcCenter =\n    (offset: number) =>\n    (\n        startAngleValue: SpringValue<number>,\n        endAngleValue: SpringValue<number>,\n        innerRadiusValue: SpringValue<number>,\n        outerRadiusValue: SpringValue<number>\n    ) =>\n        to(\n            [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n            (startAngle, endAngle, innerRadius, outerRadius) => {\n                const centroid = computeArcCenter(\n                    { startAngle, endAngle, innerRadius, outerRadius },\n                    offset\n                )\n\n                return `translate(${centroid.x},${centroid.y})`\n            }\n        )\n\nexport const useArcCentersTransition = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, never>,\n>(\n    data: Datum[],\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset = 0.5,\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<Datum, ArcTransitionProps<ExtraProps>>(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    }) as unknown as TransitionFn<Datum, ArcTransitionProps<ExtraProps>>\n\n    return {\n        transition,\n        interpolate: interpolateArcCenter(offset),\n    }\n}\n\nexport interface ArcCenter<Datum extends DatumWithArc> extends Point {\n    data: Datum\n}\n\n/**\n * Compute an array of arc centers from an array of data containing arcs.\n *\n * If you plan to animate those, you could use `useArcCentersTransition`\n * instead, you could use the returned array with react-spring `useTransition`,\n * but this would lead to cartesian transitions (x/y), while `useArcCentersTransition`\n * will generate proper transitions using radius/angle.\n */\nexport const useArcCenters = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, never>,\n>({\n    data,\n    offset = 0.5,\n    skipAngle = 0,\n    computeExtraProps = () => ({}) as ExtraProps,\n}: {\n    data: Datum[]\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset?: number\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // this can be used to append extra properties to the centers,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: Datum) => ExtraProps\n}): (ArcCenter<Datum> & ExtraProps)[] =>\n    useMemo(\n        () =>\n            filterDataBySkipAngle<Datum>(data, skipAngle)\n                // compute position and extra props for each eligible datum\n                .map(datum => {\n                    const position = computeArcCenter(datum.arc, offset)\n\n                    return {\n                        ...computeExtraProps(datum),\n                        x: position.x,\n                        y: position.y,\n                        data: datum,\n                    }\n                }),\n        [data, offset, skipAngle, computeExtraProps]\n    )\n","import { createElement, useMemo } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, radiansToDegrees } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useArcCentersTransition } from '../centers'\nimport { ArcTransitionMode } from '../arcTransitionMode'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabelsProps } from './props'\nimport { ArcLabel, ArcLabelProps } from './ArcLabel'\n\nexport type ArcLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: PropertyAccessor<Datum, string>\n    radiusOffset: ArcLabelsProps<Datum>['arcLabelsRadiusOffset']\n    skipAngle: ArcLabelsProps<Datum>['arcLabelsSkipAngle']\n    skipRadius: ArcLabelsProps<Datum>['arcLabelsSkipRadius']\n    textColor: ArcLabelsProps<Datum>['arcLabelsTextColor']\n    transitionMode: ArcTransitionMode\n    component?: ArcLabelsProps<Datum>['arcLabelsComponent']\n}\n\nexport const ArcLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    transitionMode,\n    label: labelAccessor,\n    radiusOffset,\n    skipAngle,\n    skipRadius,\n    textColor,\n    component = ArcLabel,\n}: ArcLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useMemo(\n        () =>\n            data.filter(datum => {\n                const angle = Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle))\n                const radius = Math.abs(datum.arc.outerRadius - datum.arc.innerRadius)\n\n                return angle >= skipAngle && radius >= skipRadius\n            }),\n        [data, skipAngle, skipRadius]\n    )\n\n    const { transition, interpolate } = useArcCentersTransition<Datum>(\n        filteredData,\n        radiusOffset,\n        transitionMode\n    )\n\n    const Label: ArcLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        progress: transitionProps.progress,\n                        transform: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textColor: getTextColor(datum),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { Theme } from '@nivo/theming'\nimport { setCanvasFont, drawCanvasText } from '@nivo/text'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabel } from './useArcLabels'\n\nexport const drawCanvasArcLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLabel<Datum>[],\n    theme: Theme\n) => {\n    setCanvasFont(ctx, theme.labels.text)\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n\n    labels.forEach(label => {\n        drawCanvasText(\n            ctx,\n            {\n                ...theme.labels.text,\n                fill: label.textColor,\n            },\n            String(label.label),\n            label.x,\n            label.y\n        )\n    })\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcCenters, ArcCenter } from '../centers'\n\nexport interface ArcLabel<Datum extends DatumWithArcAndColor> extends ArcCenter<Datum> {\n    label: string\n    textColor: string\n}\n\n/**\n * Compute arc labels, please note that the datum should\n * contain a color in order to be able to compute the label text color.\n *\n * Please see `useArcCenters` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset,\n    skipAngle,\n    label,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    skipAngle?: number\n    label: PropertyAccessor<Datum, string>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (datum: Datum) => {\n            return {\n                label: getLabel(datum),\n                textColor: getTextColor(datum),\n            }\n        },\n        [getLabel, getTextColor]\n    )\n\n    return useArcCenters<Datum, Omit<ArcLabel<Datum>, keyof ArcCenter<Datum>>>({\n        data,\n        offset,\n        skipAngle,\n        computeExtraProps,\n    })\n}\n","import { ArcLabel } from './ArcLabel'\n\nexport const ArcLabelComponent = ArcLabel\nexport * from './ArcLabelsLayer'\nexport * from './canvas'\nexport * from './props'\nexport * from './useArcLabels'\n","import { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/theming'\nimport { Text } from '@nivo/text'\nimport { DatumWithArcAndColor } from '../types'\n\nexport interface ArcLinkLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        path: Interpolation<string>\n        thickness: number\n        textPosition: Interpolation<string>\n        textAnchor: Interpolation<'start' | 'end'>\n        linkColor: SpringValue<string>\n        opacity: SpringValue<number>\n        textColor: SpringValue<string>\n    }\n}\n\nexport const ArcLinkLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLinkLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={style.opacity}>\n            <animated.path\n                fill=\"none\"\n                stroke={style.linkColor}\n                strokeWidth={style.thickness}\n                d={style.path}\n            />\n            <Text\n                transform={style.textPosition}\n                textAnchor={style.textAnchor}\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </Text>\n        </animated.g>\n    )\n}\n","import { positionFromAngle } from '@nivo/core'\nimport { Arc, Point } from '../types'\nimport { getNormalizedAngle } from '../utils'\nimport { ArcLink } from './types'\n\n/**\n * Compute text anchor for a given arc.\n *\n * `computeArcLink` already computes a `side`, but when using\n * `react-spring`, you cannot have a single interpolation\n * returning several output values, so we need to compute\n * them in separate interpolations.\n */\nexport const computeArcLinkTextAnchor = (arc: Arc): 'start' | 'end' => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        return 'start'\n    }\n\n    return 'end'\n}\n\n/**\n * Compute the link of a single arc, returning its points,\n * please note that points coordinates are relative to\n * the center of the arc.\n */\nexport const computeArcLink = (\n    arc: Arc,\n    offset: number,\n    diagonalLength: number,\n    straightLength: number\n): ArcLink => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n    const point0: Point = positionFromAngle(centerAngle, arc.outerRadius + offset)\n    const point1: Point = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength)\n\n    let side: ArcLink['side']\n    let point2: Point\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        side = 'after'\n        point2 = {\n            x: point1.x + straightLength,\n            y: point1.y,\n        }\n    } else {\n        side = 'before'\n        point2 = {\n            x: point1.x - straightLength,\n            y: point1.y,\n        }\n    }\n\n    return {\n        side,\n        points: [point0, point1, point2],\n    }\n}\n","import { useMemo } from 'react'\nimport { SpringValue, useTransition, to } from '@react-spring/web'\nimport { line } from 'd3-shape'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, Point } from '../types'\nimport { useFilteredDataBySkipAngle } from '../utils'\nimport { computeArcLink, computeArcLinkTextAnchor } from './compute'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\ntype AnimatedProps = {\n    startAngle: number\n    endAngle: number\n    innerRadius: number\n    outerRadius: number\n    offset: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    linkColor: string\n    textColor: string\n    opacity: number\n}\n\nconst useTransitionPhases = <Datum extends DatumWithArcAndColor>({\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset,\n    getLinkColor,\n    getTextColor,\n}: Pick<AnimatedProps, 'offset' | 'diagonalLength' | 'straightLength' | 'textOffset'> & {\n    getLinkColor: (datum: Datum) => string\n    getTextColor: (datum: Datum) => string\n}): Record<'enter' | 'update' | 'leave', (datum: Datum) => AnimatedProps> =>\n    useMemo(\n        () => ({\n            enter: (datum: Datum) => ({\n                startAngle: datum.arc.startAngle,\n                endAngle: datum.arc.endAngle,\n                innerRadius: datum.arc.innerRadius,\n                outerRadius: datum.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(datum),\n                textColor: getTextColor(datum),\n                opacity: 0,\n            }),\n            update: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength,\n                straightLength,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 1,\n            }),\n            leave: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 0,\n            }),\n        }),\n        [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor, offset]\n    )\n\nconst interpolateLink = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated\n        ) => {\n            const { points } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            return lineGenerator(points)\n        }\n    )\n\nconst interpolateTextAnchor = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return computeArcLinkTextAnchor({\n                startAngle,\n                endAngle,\n                innerRadius,\n                outerRadius,\n            })\n        }\n    )\n\n/**\n * Interpolating the text position involves almost the same computation\n * as `interpolateLink`, unfortunately `react-spring` does not support\n * multiple output values from a single interpolation.\n *\n * We should revise this if `react-spring` adds this feature at some point.\n */\nconst interpolateTextPosition = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>,\n    textOffsetValue: SpringValue<AnimatedProps['textOffset']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n            textOffsetValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated,\n            textOffset\n        ) => {\n            const { points, side } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            const position = points[2]\n            if (side === 'before') {\n                position.x -= textOffset\n            } else {\n                position.x += textOffset\n            }\n\n            return `translate(${position.x},${position.y})`\n        }\n    )\n\n/**\n * This hook can be used to animate a group of arc link labels,\n * if you just want to compute the labels, please use `useArcLinkLabels`.\n */\nexport const useArcLinkLabelsTransition = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset = 0,\n    diagonalLength,\n    straightLength,\n    skipAngle = 0,\n    textOffset,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    skipAngle?: number\n    textOffset: number\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useFilteredDataBySkipAngle<Datum>(data, skipAngle)\n    const transitionPhases = useTransitionPhases<Datum>({\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        getLinkColor,\n        getTextColor,\n    })\n\n    const transition = useTransition<Datum, AnimatedProps>(filteredData, {\n        keys: datum => datum.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    }\n}\n","import { createElement } from 'react'\nimport { usePropertyAccessor } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcLinkLabelsTransition } from './useArcLinkLabelsTransition'\nimport { ArcLinkLabelsProps } from './props'\nimport { ArcLinkLabel, ArcLinkLabelProps } from './ArcLinkLabel'\n\nexport type ArcLinkLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLinkLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLinkLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: ArcLinkLabelsProps<Datum>['arcLinkLabel']\n    skipAngle: ArcLinkLabelsProps<Datum>['arcLinkLabelsSkipAngle']\n    offset: ArcLinkLabelsProps<Datum>['arcLinkLabelsOffset']\n    diagonalLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsDiagonalLength']\n    straightLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsStraightLength']\n    strokeWidth: ArcLinkLabelsProps<Datum>['arcLinkLabelsThickness']\n    textOffset: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextOffset']\n    textColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextColor']\n    linkColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsColor']\n    component?: ArcLinkLabelComponent<Datum>\n}\n\nexport const ArcLinkLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    label: labelAccessor,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    strokeWidth,\n    textOffset,\n    textColor,\n    linkColor,\n    component = ArcLinkLabel,\n}: ArcLinkLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n\n    const { transition, interpolateLink, interpolateTextAnchor, interpolateTextPosition } =\n        useArcLinkLabelsTransition<Datum>({\n            data,\n            skipAngle,\n            offset,\n            diagonalLength,\n            straightLength,\n            textOffset,\n            linkColor,\n            textColor,\n        })\n\n    const Label: ArcLinkLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        thickness: strokeWidth,\n                        path: interpolateLink(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength\n                        ),\n                        textAnchor: interpolateTextAnchor(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textPosition: interpolateTextPosition(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength,\n                            transitionProps.textOffset\n                        ),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import {\n    // @ts-expect-error no types\n    textPropsByEngine,\n} from '@nivo/core'\nimport { Theme } from '@nivo/theming'\nimport { setCanvasFont, drawCanvasText } from '@nivo/text'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkLabel } from './types'\n\nexport const drawCanvasArcLinkLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLinkLabel<Datum>[],\n    theme: Theme,\n    strokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    setCanvasFont(ctx, theme.labels.text)\n\n    labels.forEach(label => {\n        ctx.textAlign = textPropsByEngine.canvas.align[label.textAnchor]\n        drawCanvasText(\n            ctx,\n            {\n                ...theme.labels.text,\n                fill: label.textColor,\n            },\n            String(label.label),\n            label.x,\n            label.y\n        )\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = strokeWidth\n        label.points.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        ctx.stroke()\n    })\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from '../types'\nimport { ArcLinkWithDatum } from './types'\nimport { computeArcLink } from './compute'\n\n/**\n * Compute links for an array of data containing arcs.\n *\n * This is typically used to create labels for arcs,\n * and it's used for the `useArcLinkLabels` hook.\n */\nexport const useArcLinks = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>,\n>({\n    data,\n    skipAngle = 0,\n    offset = 0.5,\n    diagonalLength,\n    straightLength,\n    computeExtraProps = () => ({}) as ExtraProps,\n}: {\n    data: Datum[]\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // offset from arc outer radius in pixels\n    offset?: number\n    // length of the diagonal segment of the link\n    diagonalLength: number\n    // length of the straight segment of the link\n    straightLength: number\n    // this can be used to append extra properties to the links,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: ArcLinkWithDatum<Datum>) => ExtraProps\n}): (ArcLinkWithDatum<Datum> & ExtraProps)[] => {\n    const links = useMemo(\n        () =>\n            data\n                // filter out arcs with a length below `skipAngle`\n                .filter(\n                    datum =>\n                        Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                        skipAngle\n                )\n                // compute the link for each eligible arc\n                .map(datum => ({\n                    ...computeArcLink(datum.arc, offset, diagonalLength, straightLength),\n                    data: datum,\n                })),\n        [data, skipAngle, offset, diagonalLength, straightLength]\n    )\n\n    // splitting memoization of links and extra props can be more efficient,\n    // this way if only `computeExtraProps` changes, we skip links computation.\n    return useMemo(\n        () =>\n            links.map(link => ({\n                ...computeExtraProps(link),\n                ...link,\n            })),\n        [links, computeExtraProps]\n    )\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkWithDatum, ArcLinkLabel } from './types'\nimport { useArcLinks } from './useArcLinks'\n\n/**\n * Compute arc link labels, please note that the datum should\n * contain a color in order to be able to compute the link/label text color.\n *\n * Please see `useArcLinks` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLinkLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset = 0,\n    label,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    skipAngle?: number\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    label: PropertyAccessor<Datum, string>\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (link: ArcLinkWithDatum<Datum>) => {\n            const position = {\n                x: link.points[2].x,\n                y: link.points[2].y,\n            }\n            let textAnchor: ArcLinkLabel<Datum>['textAnchor']\n            if (link.side === 'before') {\n                position.x -= textOffset\n                textAnchor = 'end'\n            } else {\n                position.x += textOffset\n                textAnchor = 'start'\n            }\n\n            return {\n                ...position,\n                label: getLabel(link.data),\n                linkColor: getLinkColor(link.data),\n                textAnchor,\n                textColor: getTextColor(link.data),\n            }\n        },\n        [getLabel, getLinkColor, getTextColor, textOffset]\n    )\n\n    return useArcLinks<Datum, Omit<ArcLinkLabel<Datum>, keyof ArcLinkWithDatum<Datum>>>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        computeExtraProps,\n    })\n}\n","import { ArcLinkLabel } from './ArcLinkLabel'\n\nexport const ArcLinkLabelComponent = ArcLinkLabel\nexport * from './ArcLinkLabelsLayer'\nexport * from './canvas'\nexport * from './compute'\nexport * from './props'\nexport * from './types'\nexport * from './useArcLinkLabels'\nexport * from './useArcLinkLabelsTransition'\nexport * from './useArcLinks'\n","import { animated, to, AnimatedProps } from '@react-spring/web'\nimport { ExtractProps } from '@nivo/core'\nimport { generateSvgArc } from './utils'\n\ntype ArcLineProps = {\n    animated: AnimatedProps<{\n        radius: number\n        startAngle: number\n        endAngle: number\n        opacity: number\n    }>\n} & ExtractProps<typeof animated.path>\n\nexport const ArcLine = ({ animated: animatedProps, ...rest }: ArcLineProps) => (\n    <animated.path\n        d={to(\n            [animatedProps.radius, animatedProps.startAngle, animatedProps.endAngle],\n            (radius, start, end) => generateSvgArc(radius, start, end)\n        )}\n        {...rest}\n    />\n)\n","import { useCallback, MouseEvent } from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from './types'\n\nexport type ArcMouseHandler<Datum extends DatumWithArcAndColor> = (\n    datum: Datum,\n    event: MouseEvent<SVGPathElement>\n) => void\n\nexport interface ArcShapeProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    style: {\n        opacity: SpringValue<number>\n        color: SpringValue<string>\n        borderWidth: number\n        borderColor: SpringValue<string>\n        path: Interpolation<string>\n    }\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n}\n\n/**\n * A simple arc component to be used typically with an `ArcsLayer`.\n *\n * Please note that the component accepts `SpringValue`s instead of\n * regular values to support animations.\n */\nexport const ArcShape = <Datum extends DatumWithArcAndColor>({\n    datum,\n    style,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: ArcShapeProps<Datum>) => {\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGPathElement>) => onClick?.(datum, event),\n        [onClick, datum]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGPathElement>) => onMouseEnter?.(datum, event),\n        [onMouseEnter, datum]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGPathElement>) => onMouseMove?.(datum, event),\n        [onMouseMove, datum]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGPathElement>) => onMouseLeave?.(datum, event),\n        [onMouseLeave, datum]\n    )\n\n    return (\n        <animated.path\n            d={style.path}\n            opacity={style.opacity}\n            fill={datum.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            onClick={onClick ? handleClick : undefined}\n            onMouseEnter={onMouseEnter ? handleMouseEnter : undefined}\n            onMouseMove={onMouseMove ? handleMouseMove : undefined}\n            onMouseLeave={onMouseLeave ? handleMouseLeave : undefined}\n            data-testid={`arc.${datum.id}`}\n        />\n    )\n}\n","import { to, SpringValue } from '@react-spring/web'\nimport { ArcGenerator } from './types'\n\n/**\n * Directly animating paths for arcs leads to sub-optimal results\n * as the interpolation is going to be linear while we deal with polar coordinates,\n * this interpolator is going to generate proper arc transitions.\n * It should be used with the `useAnimatedArc` or `useArcsTransition` hooks.\n */\nexport const interpolateArc = (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>,\n    arcGenerator: ArcGenerator\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return arcGenerator({\n                startAngle,\n                endAngle,\n                innerRadius: Math.max(0, innerRadius),\n                outerRadius: Math.max(0, outerRadius),\n            })\n        }\n    )\n","import { TransitionFn, useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { DatumWithArc } from './types'\nimport {\n    ArcTransitionMode,\n    useArcTransitionMode,\n    TransitionExtra,\n    ArcTransitionProps,\n} from './arcTransitionMode'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a group of arcs,\n * if you want to animate a single arc,\n * please have a look at the `useAnimatedArc` hook.\n */\nexport const useArcsTransition = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, never>,\n>(\n    data: Datum[],\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<Datum, ArcTransitionProps<ExtraProps>>(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    }) as unknown as TransitionFn<Datum, ArcTransitionProps<ExtraProps>>\n\n    return {\n        transition,\n        interpolate: interpolateArc,\n    }\n}\n","import { createElement } from 'react'\nimport { useTheme } from '@nivo/theming'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, ArcGenerator } from './types'\nimport { useArcsTransition } from './useArcsTransition'\nimport { ArcTransitionMode } from './arcTransitionMode'\nimport { ArcMouseHandler, ArcShape, ArcShapeProps } from './ArcShape'\n\nexport type ArcComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcShapeProps<Datum>\n) => JSX.Element\n\ninterface ArcsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    borderColor: InheritedColorConfig<Datum>\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n    transitionMode: ArcTransitionMode\n    component?: ArcComponent<Datum>\n}\n\nexport const ArcsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n    component = ArcShape,\n}: ArcsLayerProps<Datum>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<Datum>(borderColor, theme)\n\n    const { transition, interpolate } = useArcsTransition<\n        Datum,\n        {\n            opacity: number\n            color: string\n            borderColor: string\n        }\n    >(data, transitionMode, {\n        enter: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        update: datum => ({\n            opacity: 1,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        leave: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n    })\n\n    const Arc: ArcComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Arc, {\n                    key: datum.id,\n                    datum,\n                    style: {\n                        ...transitionProps,\n                        borderWidth,\n                        path: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            arcGenerator\n                        ),\n                    },\n                    onClick,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                })\n            })}\n        </g>\n    )\n}\n","import { positionFromAngle, degreesToRadians } from '@nivo/core'\n\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n */\nexport const computeArcBoundingBox = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    // in degrees\n    startAngle: number,\n    // in degrees\n    endAngle: number,\n    includeCenter = true\n) => {\n    let points: [number, number][] = []\n\n    const p0 = positionFromAngle(degreesToRadians(startAngle), radius)\n    points.push([p0.x, p0.y])\n\n    const p1 = positionFromAngle(degreesToRadians(endAngle), radius)\n    points.push([p1.x, p1.y])\n\n    for (\n        let angle = Math.round(Math.min(startAngle, endAngle));\n        angle <= Math.round(Math.max(startAngle, endAngle));\n        angle++\n    ) {\n        if (angle % 90 === 0) {\n            const p = positionFromAngle(degreesToRadians(angle), radius)\n            points.push([p.x, p.y])\n        }\n    }\n\n    points = points.map(([x, y]) => [centerX + x, centerY + y])\n    if (includeCenter) {\n        points.push([centerX, centerY])\n    }\n\n    const xs = points.map(([x]) => x)\n    const ys = points.map(([, y]) => y)\n\n    const x0 = Math.min(...xs)\n    const x1 = Math.max(...xs)\n\n    const y0 = Math.min(...ys)\n    const y1 = Math.max(...ys)\n\n    return {\n        points,\n        x: x0,\n        y: y0,\n        width: x1 - x0,\n        height: y1 - y0,\n    }\n}\n","import { getDistance, getAngle } from '@nivo/core'\nimport { Arc } from './types'\n\n/**\n * Check if cursor is in given ring.\n */\nexport const isCursorInRing = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    cursorX: number,\n    cursorY: number\n) => {\n    const distance = getDistance(cursorX, cursorY, centerX, centerY)\n\n    return distance < radius && distance > innerRadius\n}\n\n/**\n * Search for an arc being under cursor.\n */\nexport const findArcUnderCursor = <A extends Arc = Arc>(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    arcs: A[],\n    cursorX: number,\n    cursorY: number\n): A | undefined => {\n    if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) {\n        return undefined\n    }\n\n    const cursorAngle = getAngle(cursorX, cursorY, centerX, centerY)\n\n    return arcs.find(\n        ({ startAngle, endAngle }) => cursorAngle >= startAngle && cursorAngle < endAngle\n    )\n}\n","import { useSpring } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { Arc, ArcGenerator } from './types'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a single arc,\n * if you want to animate a group of arcs,\n * please have a look at the `useArcsTransition` hook.\n */\nexport const useAnimatedArc = (datumWithArc: { arc: Arc }, arcGenerator: ArcGenerator) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedValues = useSpring({\n        startAngle: datumWithArc.arc.startAngle,\n        endAngle: datumWithArc.arc.endAngle,\n        innerRadius: datumWithArc.arc.innerRadius,\n        outerRadius: datumWithArc.arc.outerRadius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        ...animatedValues,\n        path: interpolateArc(\n            animatedValues.startAngle,\n            animatedValues.endAngle,\n            animatedValues.innerRadius,\n            animatedValues.outerRadius,\n            arcGenerator\n        ),\n    }\n}\n","import { useMemo } from 'react'\nimport { arc as d3Arc } from 'd3-shape'\nimport { ArcGenerator, Arc } from './types'\n\n/**\n * Memoize a d3 arc generator.\n *\n * Please note that both inner/outer radius aren't static\n * and should come from the arc itself, while it requires\n * more props on the arcs, it provides more flexibility\n * because it's not limited to pie then but can also work\n * with charts such as sunbursts.\n */\nexport const useArcGenerator = ({\n    cornerRadius = 0,\n    padAngle = 0,\n}: {\n    cornerRadius?: number\n    padAngle?: number\n} = {}): ArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<Arc>()\n                .innerRadius(arc => arc.innerRadius)\n                .outerRadius(arc => arc.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle),\n        [cornerRadius, padAngle]\n    )\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}