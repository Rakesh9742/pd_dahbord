{"ast":null,"code":"import { useMemo as e, useRef as i, useEffect as t, useState as a, useCallback as n, createElement as r, forwardRef as o, Fragment as d } from \"react\";\nimport { usePropertyAccessor as l, useValueFormatter as s, degreesToRadians as c, radiansToDegrees as u, Container as f, useDimensions as v, bindDefs as g, SvgWrapper as h, ResponsiveWrapper as L, mergeRefs as b, getRelativeCursor as A } from \"@nivo/core\";\nimport { useArcGenerator as p, computeArcBoundingBox as R, ArcsLayer as k, ArcLinkLabelsLayer as m, ArcLabelsLayer as I, useArcLabels as O, useArcLinkLabels as C, drawCanvasArcLinkLabels as w, drawCanvasArcLabels as x, findArcUnderCursor as W } from \"@nivo/arcs\";\nimport { BoxLegendSvg as M, renderLegendToCanvas as y } from \"@nivo/legends\";\nimport { jsx as S, Fragment as T } from \"react/jsx-runtime\";\nimport { pie as D } from \"d3-shape\";\nimport { useOrdinalColorScale as V, useInheritedColor as B } from \"@nivo/colors\";\nimport { BasicTooltip as z, useTooltip as H } from \"@nivo/tooltip\";\nimport { useTheme as G } from \"@nivo/theming\";\nfunction E() {\n  return E = Object.assign ? Object.assign.bind() : function (e) {\n    for (var i = 1; i < arguments.length; i++) {\n      var t = arguments[i];\n      for (var a in t) ({}).hasOwnProperty.call(t, a) && (e[a] = t[a]);\n    }\n    return e;\n  }, E.apply(null, arguments);\n}\nfunction F(e, i) {\n  if (null == e) return {};\n  var t = {};\n  for (var a in e) if ({}.hasOwnProperty.call(e, a)) {\n    if (-1 !== i.indexOf(a)) continue;\n    t[a] = e[a];\n  }\n  return t;\n}\nvar X,\n  Y = function (e) {\n    var i = e.width,\n      t = e.height,\n      a = e.legends,\n      n = e.data,\n      r = e.toggleSerie;\n    return S(T, {\n      children: a.map(function (e, a) {\n        var o;\n        return S(M, E({}, e, {\n          containerWidth: i,\n          containerHeight: t,\n          data: null != (o = e.data) ? o : n,\n          toggleSerie: e.toggleSerie ? r : void 0\n        }), a);\n      })\n    });\n  },\n  P = {\n    id: \"id\",\n    value: \"value\",\n    sortByValue: !1,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n    layers: [\"arcs\", \"arcLinkLabels\", \"arcLabels\", \"legends\"],\n    startAngle: 0,\n    endAngle: 360,\n    fit: !0,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n    borderWidth: 0,\n    borderColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1]]\n    },\n    enableArcLabels: !0,\n    arcLabel: \"formattedValue\",\n    arcLabelsSkipAngle: 0,\n    arcLabelsSkipRadius: 0,\n    arcLabelsRadiusOffset: .5,\n    arcLabelsTextColor: {\n      theme: \"labels.text.fill\"\n    },\n    enableArcLinkLabels: !0,\n    arcLinkLabel: \"id\",\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: {\n      theme: \"labels.text.fill\"\n    },\n    arcLinkLabelsColor: {\n      theme: \"axis.ticks.line.stroke\"\n    },\n    colors: {\n      scheme: \"nivo\"\n    },\n    defs: [],\n    fill: [],\n    isInteractive: !0,\n    animate: !0,\n    motionConfig: \"gentle\",\n    transitionMode: \"innerRadius\",\n    tooltip: function (e) {\n      var i = e.datum;\n      return S(z, {\n        id: i.id,\n        value: i.formattedValue,\n        enableChip: !0,\n        color: i.color\n      });\n    },\n    legends: [],\n    role: \"img\",\n    pixelRatio: \"undefined\" != typeof window && null != (X = window.devicePixelRatio) ? X : 1\n  },\n  j = [\"points\"],\n  q = function (i) {\n    var t = i.data,\n      a = i.id,\n      n = void 0 === a ? P.id : a,\n      r = i.value,\n      o = void 0 === r ? P.value : r,\n      d = i.valueFormat,\n      c = i.colors,\n      u = void 0 === c ? P.colors : c,\n      f = l(n),\n      v = l(o),\n      g = s(d),\n      h = V(u, \"id\");\n    return e(function () {\n      return t.map(function (e) {\n        var i,\n          t = f(e),\n          a = v(e),\n          n = {\n            id: t,\n            label: null != (i = e.label) ? i : t,\n            hidden: !1,\n            value: a,\n            formattedValue: g(a),\n            data: e\n          };\n        return E({}, n, {\n          color: h(n)\n        });\n      });\n    }, [t, f, v, g, h]);\n  },\n  J = function (a) {\n    var n = a.data,\n      r = a.startAngle,\n      o = a.endAngle,\n      d = a.innerRadius,\n      l = a.outerRadius,\n      s = a.padAngle,\n      f = a.sortByValue,\n      v = a.activeId,\n      g = a.activeInnerRadiusOffset,\n      h = a.activeOuterRadiusOffset,\n      L = a.hiddenIds,\n      b = a.forwardLegendData,\n      A = e(function () {\n        var e = D().value(function (e) {\n          return e.value;\n        }).startAngle(c(r)).endAngle(c(o)).padAngle(c(s));\n        return f || e.sortValues(null), e;\n      }, [r, o, s, f]),\n      p = e(function () {\n        var e = n.filter(function (e) {\n          return !L.includes(e.id);\n        });\n        return {\n          dataWithArc: A(e).map(function (e) {\n            var i = Math.abs(e.endAngle - e.startAngle);\n            return E({}, e.data, {\n              arc: {\n                index: e.index,\n                startAngle: e.startAngle,\n                endAngle: e.endAngle,\n                innerRadius: v === e.data.id ? d - g : d,\n                outerRadius: v === e.data.id ? l + h : l,\n                thickness: l - d,\n                padAngle: e.padAngle,\n                angle: i,\n                angleDeg: u(i)\n              }\n            });\n          }),\n          legendData: n.map(function (e) {\n            return {\n              id: e.id,\n              label: e.label,\n              color: e.color,\n              hidden: L.includes(e.id),\n              data: e\n            };\n          })\n        };\n      }, [A, n, L, v, d, g, l, h]),\n      R = p.legendData,\n      k = i(b);\n    return t(function () {\n      \"function\" == typeof k.current && k.current(R);\n    }, [k, R]), p;\n  },\n  K = function (e) {\n    var i = e.activeId,\n      t = e.onActiveIdChange,\n      r = e.defaultActiveId,\n      o = void 0 !== i,\n      d = a(o ? null : void 0 === r ? null : r),\n      l = d[0],\n      s = d[1];\n    return {\n      activeId: o ? i : l,\n      setActiveId: n(function (e) {\n        t && t(e), o || s(e);\n      }, [o, t, s])\n    };\n  },\n  N = function (e) {\n    var i = e.data,\n      t = e.radius,\n      r = e.innerRadius,\n      o = e.startAngle,\n      d = void 0 === o ? P.startAngle : o,\n      l = e.endAngle,\n      s = void 0 === l ? P.endAngle : l,\n      u = e.padAngle,\n      f = void 0 === u ? P.padAngle : u,\n      v = e.sortByValue,\n      g = void 0 === v ? P.sortByValue : v,\n      h = e.cornerRadius,\n      L = void 0 === h ? P.cornerRadius : h,\n      b = e.activeInnerRadiusOffset,\n      A = void 0 === b ? P.activeInnerRadiusOffset : b,\n      R = e.activeOuterRadiusOffset,\n      k = void 0 === R ? P.activeOuterRadiusOffset : R,\n      m = e.activeId,\n      I = e.onActiveIdChange,\n      O = e.defaultActiveId,\n      C = e.forwardLegendData,\n      w = K({\n        activeId: m,\n        onActiveIdChange: I,\n        defaultActiveId: O\n      }),\n      x = w.activeId,\n      W = w.setActiveId,\n      M = a([]),\n      y = M[0],\n      S = M[1],\n      T = J({\n        data: i,\n        startAngle: d,\n        endAngle: s,\n        innerRadius: r,\n        outerRadius: t,\n        padAngle: f,\n        sortByValue: g,\n        activeId: x,\n        activeInnerRadiusOffset: A,\n        activeOuterRadiusOffset: k,\n        hiddenIds: y,\n        forwardLegendData: C\n      }),\n      D = n(function (e) {\n        S(function (i) {\n          return i.indexOf(e) > -1 ? i.filter(function (i) {\n            return i !== e;\n          }) : [].concat(i, [e]);\n        });\n      }, []);\n    return E({}, T, {\n      arcGenerator: p({\n        cornerRadius: L,\n        padAngle: c(f)\n      }),\n      setActiveId: W,\n      toggleSerie: D\n    });\n  },\n  Q = function (i) {\n    var t = i.data,\n      r = i.width,\n      o = i.height,\n      d = i.innerRadius,\n      l = void 0 === d ? P.innerRadius : d,\n      s = i.startAngle,\n      u = void 0 === s ? P.startAngle : s,\n      f = i.endAngle,\n      v = void 0 === f ? P.endAngle : f,\n      g = i.padAngle,\n      h = void 0 === g ? P.padAngle : g,\n      L = i.sortByValue,\n      b = void 0 === L ? P.sortByValue : L,\n      A = i.cornerRadius,\n      k = void 0 === A ? P.cornerRadius : A,\n      m = i.fit,\n      I = void 0 === m ? P.fit : m,\n      O = i.activeInnerRadiusOffset,\n      C = void 0 === O ? P.activeInnerRadiusOffset : O,\n      w = i.activeOuterRadiusOffset,\n      x = void 0 === w ? P.activeOuterRadiusOffset : w,\n      W = i.activeId,\n      M = i.onActiveIdChange,\n      y = i.defaultActiveId,\n      S = i.forwardLegendData,\n      T = K({\n        activeId: W,\n        onActiveIdChange: M,\n        defaultActiveId: y\n      }),\n      D = T.activeId,\n      V = T.setActiveId,\n      B = a([]),\n      z = B[0],\n      H = B[1],\n      G = e(function () {\n        var e,\n          i = Math.min(r, o) / 2,\n          t = i * Math.min(l, 1),\n          a = r / 2,\n          n = o / 2;\n        if (I) {\n          var d = R(a, n, i, u - 90, v - 90),\n            s = d.points,\n            c = F(d, j),\n            f = Math.min(r / c.width, o / c.height),\n            g = {\n              width: c.width * f,\n              height: c.height * f\n            };\n          g.x = (r - g.width) / 2, g.y = (o - g.height) / 2, a = (a - c.x) / c.width * c.width * f + g.x, n = (n - c.y) / c.height * c.height * f + g.y, e = {\n            box: c,\n            ratio: f,\n            points: s\n          }, i *= f, t *= f;\n        }\n        return {\n          centerX: a,\n          centerY: n,\n          radius: i,\n          innerRadius: t,\n          debug: e\n        };\n      }, [r, o, l, u, v, I]),\n      X = J({\n        data: t,\n        startAngle: u,\n        endAngle: v,\n        innerRadius: G.innerRadius,\n        outerRadius: G.radius,\n        padAngle: h,\n        sortByValue: b,\n        activeId: D,\n        activeInnerRadiusOffset: C,\n        activeOuterRadiusOffset: x,\n        hiddenIds: z,\n        forwardLegendData: S\n      }),\n      Y = n(function (e) {\n        H(function (i) {\n          return i.indexOf(e) > -1 ? i.filter(function (i) {\n            return i !== e;\n          }) : [].concat(i, [e]);\n        });\n      }, []);\n    return E({\n      arcGenerator: p({\n        cornerRadius: k,\n        padAngle: c(h)\n      }),\n      activeId: D,\n      setActiveId: V,\n      toggleSerie: Y\n    }, X, G);\n  },\n  U = function (i) {\n    var t = i.dataWithArc,\n      a = i.arcGenerator,\n      n = i.centerX,\n      r = i.centerY,\n      o = i.radius,\n      d = i.innerRadius;\n    return e(function () {\n      return {\n        dataWithArc: t,\n        arcGenerator: a,\n        centerX: n,\n        centerY: r,\n        radius: o,\n        innerRadius: d\n      };\n    }, [t, a, n, r, o, d]);\n  },\n  Z = function (i) {\n    var t = i.center,\n      a = i.data,\n      n = i.arcGenerator,\n      o = i.borderWidth,\n      d = i.borderColor,\n      l = i.isInteractive,\n      s = i.onClick,\n      c = i.onMouseEnter,\n      u = i.onMouseMove,\n      f = i.onMouseLeave,\n      v = i.setActiveId,\n      g = i.tooltip,\n      h = i.transitionMode,\n      L = H(),\n      b = L.showTooltipFromEvent,\n      A = L.hideTooltip,\n      p = e(function () {\n        if (l) return function (e, i) {\n          null == s || s(e, i);\n        };\n      }, [l, s]),\n      R = e(function () {\n        if (l) return function (e, i) {\n          b(r(g, {\n            datum: e\n          }), i), v(e.id), null == c || c(e, i);\n        };\n      }, [l, b, v, c, g]),\n      m = e(function () {\n        if (l) return function (e, i) {\n          b(r(g, {\n            datum: e\n          }), i), null == u || u(e, i);\n        };\n      }, [l, b, u, g]),\n      I = e(function () {\n        if (l) return function (e, i) {\n          A(), v(null), null == f || f(e, i);\n        };\n      }, [l, A, v, f]);\n    return S(k, {\n      center: t,\n      data: a,\n      arcGenerator: n,\n      borderWidth: o,\n      borderColor: d,\n      transitionMode: h,\n      onClick: p,\n      onMouseEnter: R,\n      onMouseMove: m,\n      onMouseLeave: I\n    });\n  },\n  $ = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  _ = function (e) {\n    var i = e.data,\n      t = e.id,\n      a = void 0 === t ? P.id : t,\n      n = e.value,\n      o = void 0 === n ? P.value : n,\n      l = e.valueFormat,\n      s = e.sortByValue,\n      c = void 0 === s ? P.sortByValue : s,\n      u = e.layers,\n      f = void 0 === u ? P.layers : u,\n      L = e.startAngle,\n      b = void 0 === L ? P.startAngle : L,\n      A = e.endAngle,\n      p = void 0 === A ? P.endAngle : A,\n      R = e.padAngle,\n      k = void 0 === R ? P.padAngle : R,\n      O = e.fit,\n      C = void 0 === O ? P.fit : O,\n      w = e.innerRadius,\n      x = void 0 === w ? P.innerRadius : w,\n      W = e.cornerRadius,\n      M = void 0 === W ? P.cornerRadius : W,\n      y = e.activeInnerRadiusOffset,\n      T = void 0 === y ? P.activeInnerRadiusOffset : y,\n      D = e.activeOuterRadiusOffset,\n      V = void 0 === D ? P.activeOuterRadiusOffset : D,\n      B = e.width,\n      z = e.height,\n      H = e.margin,\n      G = e.colors,\n      E = void 0 === G ? P.colors : G,\n      F = e.borderWidth,\n      X = void 0 === F ? P.borderWidth : F,\n      j = e.borderColor,\n      J = void 0 === j ? P.borderColor : j,\n      K = e.enableArcLabels,\n      N = void 0 === K ? P.enableArcLabels : K,\n      $ = e.arcLabel,\n      _ = void 0 === $ ? P.arcLabel : $,\n      ee = e.arcLabelsSkipAngle,\n      ie = void 0 === ee ? P.arcLabelsSkipAngle : ee,\n      te = e.arcLabelsSkipRadius,\n      ae = void 0 === te ? P.arcLabelsSkipRadius : te,\n      ne = e.arcLabelsTextColor,\n      re = void 0 === ne ? P.arcLabelsTextColor : ne,\n      oe = e.arcLabelsRadiusOffset,\n      de = void 0 === oe ? P.arcLabelsRadiusOffset : oe,\n      le = e.arcLabelsComponent,\n      se = e.enableArcLinkLabels,\n      ce = void 0 === se ? P.enableArcLinkLabels : se,\n      ue = e.arcLinkLabel,\n      fe = void 0 === ue ? P.arcLinkLabel : ue,\n      ve = e.arcLinkLabelsSkipAngle,\n      ge = void 0 === ve ? P.arcLinkLabelsSkipAngle : ve,\n      he = e.arcLinkLabelsOffset,\n      Le = void 0 === he ? P.arcLinkLabelsOffset : he,\n      be = e.arcLinkLabelsDiagonalLength,\n      Ae = void 0 === be ? P.arcLinkLabelsDiagonalLength : be,\n      pe = e.arcLinkLabelsStraightLength,\n      Re = void 0 === pe ? P.arcLinkLabelsStraightLength : pe,\n      ke = e.arcLinkLabelsThickness,\n      me = void 0 === ke ? P.arcLinkLabelsThickness : ke,\n      Ie = e.arcLinkLabelsTextOffset,\n      Oe = void 0 === Ie ? P.arcLinkLabelsTextOffset : Ie,\n      Ce = e.arcLinkLabelsTextColor,\n      we = void 0 === Ce ? P.arcLinkLabelsTextColor : Ce,\n      xe = e.arcLinkLabelsColor,\n      We = void 0 === xe ? P.arcLinkLabelsColor : xe,\n      Me = e.arcLinkLabelComponent,\n      ye = e.defs,\n      Se = void 0 === ye ? P.defs : ye,\n      Te = e.fill,\n      De = void 0 === Te ? P.fill : Te,\n      Ve = e.isInteractive,\n      Be = void 0 === Ve ? P.isInteractive : Ve,\n      ze = e.onClick,\n      He = e.onMouseEnter,\n      Ge = e.onMouseMove,\n      Ee = e.onMouseLeave,\n      Fe = e.tooltip,\n      Xe = void 0 === Fe ? P.tooltip : Fe,\n      Ye = e.activeId,\n      Pe = e.onActiveIdChange,\n      je = e.defaultActiveId,\n      qe = e.transitionMode,\n      Je = void 0 === qe ? P.transitionMode : qe,\n      Ke = e.legends,\n      Ne = void 0 === Ke ? P.legends : Ke,\n      Qe = e.forwardLegendData,\n      Ue = e.role,\n      Ze = void 0 === Ue ? P.role : Ue,\n      $e = e.forwardedRef,\n      _e = v(B, z, H),\n      ei = _e.outerWidth,\n      ii = _e.outerHeight,\n      ti = _e.margin,\n      ai = _e.innerWidth,\n      ni = _e.innerHeight,\n      ri = q({\n        data: i,\n        id: a,\n        value: o,\n        valueFormat: l,\n        colors: E\n      }),\n      oi = Q({\n        data: ri,\n        width: ai,\n        height: ni,\n        fit: C,\n        innerRadius: x,\n        startAngle: b,\n        endAngle: p,\n        padAngle: k,\n        sortByValue: c,\n        cornerRadius: M,\n        activeInnerRadiusOffset: T,\n        activeOuterRadiusOffset: V,\n        activeId: Ye,\n        onActiveIdChange: Pe,\n        defaultActiveId: je,\n        forwardLegendData: Qe\n      }),\n      di = oi.dataWithArc,\n      li = oi.legendData,\n      si = oi.arcGenerator,\n      ci = oi.centerX,\n      ui = oi.centerY,\n      fi = oi.radius,\n      vi = oi.innerRadius,\n      gi = oi.setActiveId,\n      hi = oi.toggleSerie,\n      Li = g(Se, di, De),\n      bi = {\n        arcs: null,\n        arcLinkLabels: null,\n        arcLabels: null,\n        legends: null\n      };\n    f.includes(\"arcs\") && (bi.arcs = S(Z, {\n      center: [ci, ui],\n      data: di,\n      arcGenerator: si,\n      borderWidth: X,\n      borderColor: J,\n      isInteractive: Be,\n      onClick: ze,\n      onMouseEnter: He,\n      onMouseMove: Ge,\n      onMouseLeave: Ee,\n      setActiveId: gi,\n      tooltip: Xe,\n      transitionMode: Je\n    }, \"arcs\")), ce && f.includes(\"arcLinkLabels\") && (bi.arcLinkLabels = S(m, {\n      center: [ci, ui],\n      data: di,\n      label: fe,\n      skipAngle: ge,\n      offset: Le,\n      diagonalLength: Ae,\n      straightLength: Re,\n      strokeWidth: me,\n      textOffset: Oe,\n      textColor: we,\n      linkColor: We,\n      component: Me\n    }, \"arcLinkLabels\")), N && f.includes(\"arcLabels\") && (bi.arcLabels = S(I, {\n      center: [ci, ui],\n      data: di,\n      label: _,\n      radiusOffset: de,\n      skipAngle: ie,\n      skipRadius: ae,\n      textColor: re,\n      transitionMode: Je,\n      component: le\n    }, \"arcLabels\")), Ne.length > 0 && f.includes(\"legends\") && (bi.legends = S(Y, {\n      width: ai,\n      height: ni,\n      data: li,\n      legends: Ne,\n      toggleSerie: hi\n    }, \"legends\"));\n    var Ai = U({\n      dataWithArc: di,\n      arcGenerator: si,\n      centerX: ci,\n      centerY: ui,\n      radius: fi,\n      innerRadius: vi\n    });\n    return S(h, {\n      width: ei,\n      height: ii,\n      margin: ti,\n      defs: Li,\n      role: Ze,\n      ref: $e,\n      children: f.map(function (e, i) {\n        return void 0 !== bi[e] ? bi[e] : \"function\" == typeof e ? S(d, {\n          children: r(e, Ai)\n        }, i) : null;\n      })\n    });\n  },\n  ee = o(function (e, i) {\n    var t = e.isInteractive,\n      a = void 0 === t ? P.isInteractive : t,\n      n = e.animate,\n      r = void 0 === n ? P.animate : n,\n      o = e.motionConfig,\n      d = void 0 === o ? P.motionConfig : o,\n      l = e.theme,\n      s = e.renderWrapper,\n      c = F(e, $);\n    return S(f, {\n      animate: r,\n      isInteractive: a,\n      motionConfig: d,\n      renderWrapper: s,\n      theme: l,\n      children: S(_, E({\n        isInteractive: a\n      }, c, {\n        forwardedRef: i\n      }))\n    });\n  }),\n  ie = [\"defaultWidth\", \"defaultHeight\", \"onResize\", \"debounceResize\"],\n  te = o(function (e, i) {\n    var t = e.defaultWidth,\n      a = e.defaultHeight,\n      n = e.onResize,\n      r = e.debounceResize,\n      o = F(e, ie);\n    return S(L, {\n      defaultWidth: t,\n      defaultHeight: a,\n      onResize: n,\n      debounceResize: r,\n      children: function (e) {\n        var t = e.width,\n          a = e.height;\n        return S(ee, E({\n          width: t,\n          height: a\n        }, o, {\n          ref: i\n        }));\n      }\n    });\n  }),\n  ae = [\"isInteractive\", \"theme\", \"renderWrapper\"],\n  ne = function (a) {\n    var n = a.data,\n      o = a.id,\n      d = void 0 === o ? P.id : o,\n      l = a.value,\n      s = void 0 === l ? P.value : l,\n      c = a.valueFormat,\n      u = a.sortByValue,\n      f = void 0 === u ? P.sortByValue : u,\n      g = a.startAngle,\n      h = void 0 === g ? P.startAngle : g,\n      L = a.endAngle,\n      p = void 0 === L ? P.endAngle : L,\n      R = a.padAngle,\n      k = void 0 === R ? P.padAngle : R,\n      m = a.fit,\n      I = void 0 === m ? P.fit : m,\n      M = a.innerRadius,\n      T = void 0 === M ? P.innerRadius : M,\n      D = a.cornerRadius,\n      V = void 0 === D ? P.cornerRadius : D,\n      z = a.activeInnerRadiusOffset,\n      F = void 0 === z ? P.activeInnerRadiusOffset : z,\n      X = a.activeOuterRadiusOffset,\n      Y = void 0 === X ? P.activeOuterRadiusOffset : X,\n      j = a.width,\n      J = a.height,\n      K = a.margin,\n      N = a.pixelRatio,\n      U = void 0 === N ? P.pixelRatio : N,\n      Z = a.colors,\n      $ = void 0 === Z ? P.colors : Z,\n      _ = a.borderWidth,\n      ee = void 0 === _ ? P.borderWidth : _,\n      ie = a.borderColor,\n      te = void 0 === ie ? P.borderColor : ie,\n      ae = a.enableArcLabels,\n      ne = void 0 === ae ? P.enableArcLabels : ae,\n      re = a.arcLabel,\n      oe = void 0 === re ? P.arcLabel : re,\n      de = a.arcLabelsSkipAngle,\n      le = void 0 === de ? P.arcLabelsSkipAngle : de,\n      se = a.arcLabelsTextColor,\n      ce = void 0 === se ? P.arcLabelsTextColor : se,\n      ue = a.arcLabelsRadiusOffset,\n      fe = void 0 === ue ? P.arcLabelsRadiusOffset : ue,\n      ve = a.enableArcLinkLabels,\n      ge = void 0 === ve ? P.enableArcLinkLabels : ve,\n      he = a.arcLinkLabel,\n      Le = void 0 === he ? P.arcLinkLabel : he,\n      be = a.arcLinkLabelsSkipAngle,\n      Ae = void 0 === be ? P.arcLinkLabelsSkipAngle : be,\n      pe = a.arcLinkLabelsOffset,\n      Re = void 0 === pe ? P.arcLinkLabelsOffset : pe,\n      ke = a.arcLinkLabelsDiagonalLength,\n      me = void 0 === ke ? P.arcLinkLabelsDiagonalLength : ke,\n      Ie = a.arcLinkLabelsStraightLength,\n      Oe = void 0 === Ie ? P.arcLinkLabelsStraightLength : Ie,\n      Ce = a.arcLinkLabelsThickness,\n      we = void 0 === Ce ? P.arcLinkLabelsThickness : Ce,\n      xe = a.arcLinkLabelsTextOffset,\n      We = void 0 === xe ? P.arcLinkLabelsTextOffset : xe,\n      Me = a.arcLinkLabelsTextColor,\n      ye = void 0 === Me ? P.arcLinkLabelsTextColor : Me,\n      Se = a.arcLinkLabelsColor,\n      Te = void 0 === Se ? P.arcLinkLabelsColor : Se,\n      De = a.isInteractive,\n      Ve = void 0 === De ? P.isInteractive : De,\n      Be = a.onClick,\n      ze = a.onMouseMove,\n      He = a.tooltip,\n      Ge = void 0 === He ? P.tooltip : He,\n      Ee = a.activeId,\n      Fe = a.onActiveIdChange,\n      Xe = a.defaultActiveId,\n      Ye = a.legends,\n      Pe = void 0 === Ye ? P.legends : Ye,\n      je = a.forwardLegendData,\n      qe = a.role,\n      Je = a.forwardedRef,\n      Ke = i(null),\n      Ne = G(),\n      Qe = v(j, J, K),\n      Ue = Qe.margin,\n      Ze = Qe.innerWidth,\n      $e = Qe.innerHeight,\n      _e = Qe.outerWidth,\n      ei = Qe.outerHeight,\n      ii = q({\n        data: n,\n        id: d,\n        value: s,\n        valueFormat: c,\n        colors: $\n      }),\n      ti = Q({\n        data: ii,\n        width: Ze,\n        height: $e,\n        fit: I,\n        innerRadius: T,\n        startAngle: h,\n        endAngle: p,\n        padAngle: k,\n        sortByValue: f,\n        cornerRadius: V,\n        activeInnerRadiusOffset: F,\n        activeOuterRadiusOffset: Y,\n        activeId: Ee,\n        onActiveIdChange: Fe,\n        defaultActiveId: Xe,\n        forwardLegendData: je\n      }),\n      ai = ti.dataWithArc,\n      ni = ti.arcGenerator,\n      ri = ti.centerX,\n      oi = ti.centerY,\n      di = ti.radius,\n      li = ti.innerRadius,\n      si = ti.setActiveId,\n      ci = B(te, Ne),\n      ui = O({\n        data: ai,\n        label: oe,\n        skipAngle: le,\n        offset: fe,\n        textColor: ce\n      }),\n      fi = C({\n        data: ai,\n        skipAngle: Ae,\n        offset: Re,\n        diagonalLength: me,\n        straightLength: Oe,\n        label: Le,\n        linkColor: Te,\n        textOffset: We,\n        textColor: ye\n      });\n    t(function () {\n      if (Ke.current) {\n        Ke.current.width = _e * U, Ke.current.height = ei * U;\n        var e = Ke.current.getContext(\"2d\");\n        e.scale(U, U), e.fillStyle = Ne.background, e.fillRect(0, 0, _e, ei), e.save(), e.translate(Ue.left, Ue.top), ni.context(e), e.save(), e.translate(ri, oi), ai.forEach(function (i) {\n          e.beginPath(), e.fillStyle = i.color, e.strokeStyle = ci(i), e.lineWidth = ee, ni(i.arc), e.fill(), ee > 0 && e.stroke();\n        }), !0 === ge && w(e, fi, Ne, we), !0 === ne && x(e, ui, Ne), e.restore(), Pe.forEach(function (i) {\n          y(e, E({}, i, {\n            data: ai,\n            containerWidth: Ze,\n            containerHeight: $e,\n            theme: Ne\n          }));\n        });\n      }\n    }, [Ke, Ze, $e, _e, ei, Ue.top, Ue.left, U, ri, oi, ni, ai, ee, ci, ne, ui, ge, fi, we, Pe, Ne]);\n    var vi = e(function () {\n        return ai.map(function (e) {\n          return E({\n            id: e.id\n          }, e.arc);\n        });\n      }, [ai]),\n      gi = function (e) {\n        if (!Ke.current) return null;\n        var i = A(Ke.current, e),\n          t = i[0],\n          a = i[1],\n          n = W(Ue.left + ri, Ue.top + oi, di, li, vi, t, a);\n        return n ? ai.find(function (e) {\n          return e.id === n.id;\n        }) : null;\n      },\n      hi = H(),\n      Li = hi.showTooltipFromEvent,\n      bi = hi.hideTooltip,\n      Ai = function (e) {\n        var i = gi(e);\n        i ? (null == ze || ze(i, e), si(i.id), Li(r(Ge, {\n          datum: i\n        }), e)) : (si(null), bi());\n      };\n    return S(\"canvas\", {\n      ref: b(Ke, Je),\n      width: _e * U,\n      height: ei * U,\n      style: {\n        width: _e,\n        height: ei,\n        cursor: Ve ? \"auto\" : \"normal\"\n      },\n      onMouseEnter: Ve ? Ai : void 0,\n      onMouseMove: Ve ? Ai : void 0,\n      onMouseLeave: Ve ? function () {\n        bi();\n      } : void 0,\n      onClick: Ve ? function (e) {\n        if (Be) {\n          var i = gi(e);\n          i && Be(i, e);\n        }\n      } : void 0,\n      role: qe\n    });\n  },\n  re = o(function (e, i) {\n    var t = e.isInteractive,\n      a = void 0 === t ? P.isInteractive : t,\n      n = e.theme,\n      r = e.renderWrapper,\n      o = F(e, ae);\n    return S(f, {\n      isInteractive: a,\n      renderWrapper: r,\n      theme: n,\n      children: S(ne, E({\n        isInteractive: a\n      }, o, {\n        forwardedRef: i\n      }))\n    });\n  }),\n  oe = [\"defaultWidth\", \"defaultHeight\", \"onResize\", \"debounceResize\"],\n  de = o(function (e, i) {\n    var t = e.defaultWidth,\n      a = e.defaultHeight,\n      n = e.onResize,\n      r = e.debounceResize,\n      o = F(e, oe);\n    return S(L, {\n      defaultWidth: t,\n      defaultHeight: a,\n      onResize: n,\n      debounceResize: r,\n      children: function (e) {\n        var t = e.width,\n          a = e.height;\n        return S(re, E({\n          width: t,\n          height: a\n        }, o, {\n          ref: i\n        }));\n      }\n    });\n  });\nexport { ee as Pie, re as PieCanvas, te as ResponsivePie, de as ResponsivePieCanvas, P as defaultProps, q as useNormalizedData, N as usePie, J as usePieArcs, Q as usePieFromBox, U as usePieLayerContext };","map":{"version":3,"names":["X","Y","PieLegends","e","i","width","t","height","a","legends","n","data","r","toggleSerie","S","T","children","map","o","M","E","containerWidth","containerHeight","P","id","value","sortByValue","innerRadius","padAngle","cornerRadius","layers","startAngle","endAngle","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","enableArcLabels","arcLabel","arcLabelsSkipAngle","arcLabelsSkipRadius","arcLabelsRadiusOffset","arcLabelsTextColor","theme","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","colors","scheme","defs","fill","isInteractive","animate","motionConfig","transitionMode","tooltip","datum","z","formattedValue","enableChip","color","role","pixelRatio","window","devicePixelRatio","j","q","useNormalizedData","d","valueFormat","c","u","f","l","v","g","s","h","V","label","hidden","J","usePieArcs","outerRadius","activeId","L","hiddenIds","b","forwardLegendData","A","D","sortValues","p","filter","includes","dataWithArc","Math","abs","arc","index","thickness","angle","angleDeg","legendData","R","k","current","K","useActiveId","onActiveIdChange","defaultActiveId","setActiveId","N","usePie","radius","m","I","O","C","w","x","W","y","indexOf","concat","arcGenerator","Q","usePieFromBox","B","H","G","min","points","F","box","ratio","centerX","centerY","debug","U","usePieLayerContext","Z","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","showTooltipFromEvent","hideTooltip","$","_","InnerPie","margin","ee","ie","te","ae","ne","re","oe","de","le","arcLabelsComponent","se","ce","ue","fe","ve","ge","he","Le","be","Ae","pe","Re","ke","me","Ie","Oe","Ce","we","xe","We","Me","arcLinkLabelComponent","ye","Se","Te","De","Ve","Be","ze","He","Ge","Ee","Fe","Xe","Ye","Pe","je","qe","Je","Ke","Ne","Qe","Ue","Ze","$e","forwardedRef","_e","ei","outerWidth","ii","outerHeight","ti","ai","innerWidth","ni","innerHeight","ri","oi","di","li","si","ci","ui","fi","vi","gi","hi","Li","bi","arcs","arcLinkLabels","arcLabels","skipAngle","offset","diagonalLength","straightLength","strokeWidth","textOffset","textColor","linkColor","component","radiusOffset","skipRadius","length","Ai","ref","renderWrapper","defaultWidth","defaultHeight","onResize","debounceResize","InnerPieCanvas","getContext","scale","fillStyle","background","fillRect","save","translate","left","top","context","forEach","beginPath","strokeStyle","lineWidth","stroke","restore","getArcFromMouse","find","handleMouseHover","style","cursor","Pie","PieCanvas","ResponsivePie","ResponsivePieCanvas","defaultProps"],"sources":["C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\pie\\src\\PieLegends.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\pie\\src\\props.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\pie\\src\\PieTooltip.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\pie\\src\\hooks.ts","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\pie\\src\\Arcs.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\pie\\src\\Pie.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\pie\\src\\ResponsivePie.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\pie\\src\\PieCanvas.tsx","C:\\Users\\2020r\\dashboard\\frontend\\node_modules\\@nivo\\pie\\src\\ResponsivePieCanvas.tsx"],"sourcesContent":["import { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, DatumId, LegendDatum } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    data: LegendDatum<RawDatum>[]\n    toggleSerie: (id: DatumId) => void\n}\n\nexport const PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i: number) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n                />\n            ))}\n        </>\n    )\n}\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n    layers: ['arcs', 'arcLinkLabels', 'arcLabels', 'legends'],\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsSkipRadius: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n    isInteractive: true,\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n    tooltip: PieTooltip,\n    legends: [],\n    role: 'img',\n    pixelRatio: typeof window !== 'undefined' ? (window.devicePixelRatio ?? 1) : 1,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport {\n    MayHaveLabel,\n    CompletePieSvgProps,\n    ComputedDatum,\n    DatumId,\n    PieArc,\n    PieCustomLayerProps,\n    LegendDatum,\n    CommonPieProps,\n} from './types'\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: readonly RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    hidden: false,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n    hiddenIds,\n    forwardLegendData,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n    hiddenIds: DatumId[]\n    forwardLegendData?: CommonPieProps<RawDatum>['forwardLegendData']\n}): {\n    dataWithArc: Omit<ComputedDatum<RawDatum>, 'fill'>[]\n    legendData: LegendDatum<RawDatum>[]\n} => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    const result = useMemo(() => {\n        const hiddenData = data.filter(item => !hiddenIds.includes(item.id))\n        const dataWithArc = pie(hiddenData).map(\n            (\n                arc: Omit<\n                    PieArc,\n                    'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                > & {\n                    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                }\n            ) => {\n                const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                return {\n                    ...arc.data,\n                    arc: {\n                        index: arc.index,\n                        startAngle: arc.startAngle,\n                        endAngle: arc.endAngle,\n                        innerRadius:\n                            activeId === arc.data.id\n                                ? innerRadius - activeInnerRadiusOffset\n                                : innerRadius,\n                        outerRadius:\n                            activeId === arc.data.id\n                                ? outerRadius + activeOuterRadiusOffset\n                                : outerRadius,\n                        thickness: outerRadius - innerRadius,\n                        padAngle: arc.padAngle,\n                        angle,\n                        angleDeg: radiansToDegrees(angle),\n                    },\n                }\n            }\n        )\n        const legendData: LegendDatum<RawDatum>[] = data.map(item => ({\n            id: item.id,\n            label: item.label,\n            color: item.color,\n            hidden: hiddenIds.includes(item.id),\n            data: item,\n        }))\n\n        return { dataWithArc, legendData }\n    }, [\n        pie,\n        data,\n        hiddenIds,\n        activeId,\n        innerRadius,\n        activeInnerRadiusOffset,\n        outerRadius,\n        activeOuterRadiusOffset,\n    ])\n\n    // Forward the legends data if `forwardLegendData` is defined.\n    const legendData = result.legendData\n    const forwardLegendDataRef = useRef(forwardLegendData)\n    useEffect(() => {\n        if (typeof forwardLegendDataRef.current !== 'function') return\n        forwardLegendDataRef.current(legendData)\n    }, [forwardLegendDataRef, legendData])\n\n    return result\n}\n\n/**\n * Encapsulate the logic for defining/reading the active arc ID,\n * which can be either controlled (handled externally), or uncontrolled\n * (handled internally), we can optionally define a default value when\n * it's uncontrolled.\n */\nconst useActiveId = ({\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId = null,\n}: {\n    activeId?: DatumId | null\n    onActiveIdChange?: (id: DatumId | null) => void\n    defaultActiveId?: DatumId | null\n}) => {\n    const isControlled = typeof activeIdFromProps != 'undefined'\n\n    const [internalActiveId, setInternalActiveId] = useState<DatumId | null>(\n        !isControlled ? defaultActiveId : null\n    )\n\n    const activeId = isControlled ? activeIdFromProps : internalActiveId\n\n    const setActiveId = useCallback(\n        (id: DatumId | null) => {\n            if (onActiveIdChange) {\n                onActiveIdChange(id)\n            }\n\n            if (!isControlled) {\n                setInternalActiveId(id)\n            }\n        },\n        [isControlled, onActiveIdChange, setInternalActiveId]\n    )\n\n    return { activeId, setActiveId }\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n    forwardLegendData,\n}: Pick<\n    Partial<CompletePieSvgProps<RawDatum>>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n    | 'activeId'\n    | 'onActiveIdChange'\n    | 'defaultActiveId'\n    | 'forwardLegendData'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const { activeId, setActiveId } = useActiveId({\n        activeId: activeIdFromProps,\n        onActiveIdChange,\n        defaultActiveId,\n    })\n\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n        forwardLegendData,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { ...pieArcs, arcGenerator, setActiveId, toggleSerie }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n    forwardLegendData,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> &\n    Pick<\n        Partial<CompletePieSvgProps<RawDatum>>,\n        'activeId' | 'onActiveIdChange' | 'defaultActiveId' | 'forwardLegendData'\n    > & {\n        data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    }) => {\n    const { activeId, setActiveId } = useActiveId({\n        activeId: activeIdFromProps,\n        onActiveIdChange,\n        defaultActiveId,\n    })\n\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit])\n\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n        forwardLegendData,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        arcGenerator,\n        activeId,\n        setActiveId,\n        toggleSerie,\n        ...pieArcs,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: PieCustomLayerProps<RawDatum>): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter, tooltip])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove, tooltip])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import { ReactNode, Fragment, createElement, forwardRef, Ref, ReactElement } from 'react'\nimport {\n    // @ts-expect-error no types\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n    WithChartRef,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport { PieLegends } from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId, MayHaveLabel } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n    width,\n    height,\n    margin: partialMargin,\n    colors = defaultProps.colors,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsSkipRadius = defaultProps.arcLabelsSkipRadius,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n    transitionMode = defaultProps.transitionMode,\n    legends = defaultProps.legends,\n    forwardLegendData,\n    role = defaultProps.role,\n    forwardedRef,\n}: PieSvgProps<RawDatum> & {\n    forwardedRef: Ref<SVGSVGElement>\n}) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        legendData,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n        toggleSerie,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        activeId: activeIdFromProps,\n        onActiveIdChange,\n        defaultActiveId,\n        forwardLegendData,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcs: null,\n        arcLinkLabels: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                skipRadius={arcLabelsSkipRadius}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={legendData}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ref={forwardedRef}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = forwardRef(\n    <RawDatum extends MayHaveLabel>(\n        {\n            isInteractive = defaultProps.isInteractive,\n            animate = defaultProps.animate,\n            motionConfig = defaultProps.motionConfig,\n            theme,\n            renderWrapper,\n            ...otherProps\n        }: PieSvgProps<RawDatum>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <Container\n            animate={animate}\n            isInteractive={isInteractive}\n            motionConfig={motionConfig}\n            renderWrapper={renderWrapper}\n            theme={theme}\n        >\n            <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} forwardedRef={ref} />\n        </Container>\n    )\n) as <RawDatum extends MayHaveLabel>(\n    props: WithChartRef<PieSvgProps<RawDatum>, SVGSVGElement>\n) => ReactElement\n","import { forwardRef, Ref, ReactElement } from 'react'\nimport { ResponsiveWrapper, ResponsiveProps, WithChartRef } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps, MayHaveLabel } from './types'\n\nexport const ResponsivePie = forwardRef(\n    <RawDatum extends MayHaveLabel>(\n        {\n            defaultWidth,\n            defaultHeight,\n            onResize,\n            debounceResize,\n            ...props\n        }: ResponsiveProps<PieSvgProps<RawDatum>>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultHeight}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }: { width: number; height: number }) => (\n                <Pie<RawDatum> width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n) as <RawDatum extends MayHaveLabel>(\n    props: WithChartRef<ResponsiveProps<PieSvgProps<RawDatum>>, SVGSVGElement>\n) => ReactElement\n","import {\n    createElement,\n    useEffect,\n    useMemo,\n    useRef,\n    MouseEvent,\n    forwardRef,\n    Ref,\n    ReactElement,\n} from 'react'\nimport { getRelativeCursor, useDimensions, Container, WithChartRef, mergeRefs } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    Arc,\n    findArcUnderCursor,\n    useArcLabels,\n    drawCanvasArcLabels,\n    useArcLinkLabels,\n    drawCanvasArcLinkLabels,\n} from '@nivo/arcs'\nimport { useNormalizedData, usePieFromBox } from './hooks'\nimport { ComputedDatum, PieCanvasProps, MayHaveLabel } from './types'\nimport { defaultProps } from './props'\n\nconst InnerPieCanvas = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = defaultProps.pixelRatio,\n    colors = defaultProps.colors,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n    legends = defaultProps.legends,\n    forwardLegendData,\n    role,\n    forwardedRef,\n}: PieCanvasProps<RawDatum> & {\n    forwardedRef: Ref<HTMLCanvasElement>\n}) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius, setActiveId } =\n        usePieFromBox<RawDatum>({\n            data: normalizedData,\n            width: innerWidth,\n            height: innerHeight,\n            fit,\n            innerRadius: innerRadiusRatio,\n            startAngle,\n            endAngle,\n            padAngle,\n            sortByValue,\n            cornerRadius,\n            activeInnerRadiusOffset,\n            activeOuterRadiusOffset,\n            activeId: activeIdFromProps,\n            onActiveIdChange,\n            defaultActiveId,\n            forwardLegendData,\n        })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const arcLabels = useArcLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        label: arcLabel,\n        skipAngle: arcLabelsSkipAngle,\n        offset: arcLabelsRadiusOffset,\n        textColor: arcLabelsTextColor,\n    })\n\n    const arcLinkLabels = useArcLinkLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        skipAngle: arcLinkLabelsSkipAngle,\n        offset: arcLinkLabelsOffset,\n        diagonalLength: arcLinkLabelsDiagonalLength,\n        straightLength: arcLinkLabelsStraightLength,\n        label: arcLinkLabel,\n        linkColor: arcLinkLabelsColor,\n        textOffset: arcLinkLabelsTextOffset,\n        textColor: arcLinkLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n        arcGenerator.context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableArcLinkLabels === true) {\n            drawCanvasArcLinkLabels<ComputedDatum<RawDatum>>(\n                ctx,\n                arcLinkLabels,\n                theme,\n                arcLinkLabelsThickness\n            )\n        }\n\n        if (enableArcLabels === true) {\n            drawCanvasArcLabels<ComputedDatum<RawDatum>>(ctx, arcLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        borderWidth,\n        getBorderColor,\n        enableArcLabels,\n        arcLabels,\n        enableArcLinkLabels,\n        arcLinkLabels,\n        arcLinkLabelsThickness,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: MouseEvent<HTMLCanvasElement>) => {\n        if (!canvasEl.current) return null\n\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = findArcUnderCursor<Arc & { id: string | number }>(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            setActiveId(datum.id)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            setActiveId(null)\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={mergeRefs(canvasEl, forwardedRef)}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n            role={role}\n        />\n    )\n}\n\nexport const PieCanvas = forwardRef(\n    <RawDatum extends MayHaveLabel>(\n        {\n            isInteractive = defaultProps.isInteractive,\n            theme,\n            renderWrapper,\n            ...otherProps\n        }: PieCanvasProps<RawDatum>,\n        ref: Ref<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }}>\n            <InnerPieCanvas<RawDatum>\n                isInteractive={isInteractive}\n                {...otherProps}\n                forwardedRef={ref}\n            />\n        </Container>\n    )\n) as <RawDatum extends MayHaveLabel>(\n    props: WithChartRef<PieCanvasProps<RawDatum>, HTMLCanvasElement>\n) => ReactElement\n","import { forwardRef, Ref, ReactElement } from 'react'\nimport { ResponsiveWrapper, ResponsiveProps, WithChartRef } from '@nivo/core'\nimport { PieCanvas } from './PieCanvas'\nimport { PieCanvasProps, MayHaveLabel } from './types'\n\nexport const ResponsivePieCanvas = forwardRef(\n    <RawDatum extends MayHaveLabel>(\n        {\n            defaultWidth,\n            defaultHeight,\n            onResize,\n            debounceResize,\n            ...props\n        }: ResponsiveProps<PieCanvasProps<RawDatum>>,\n        ref: Ref<HTMLCanvasElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultHeight}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }: { width: number; height: number }) => (\n                <PieCanvas<RawDatum> width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n) as <RawDatum extends MayHaveLabel>(\n    props: WithChartRef<ResponsiveProps<PieCanvasProps<RawDatum>>, HTMLCanvasElement>\n) => ReactElement\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}