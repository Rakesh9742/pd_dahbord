{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\DVManagerView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  key: 'id',\n  label: 'ID'\n}, {\n  key: 'project_id',\n  label: 'Project ID'\n}, {\n  key: 'domain_id',\n  label: 'Domain ID'\n}, {\n  key: 'module',\n  label: 'Module'\n}, {\n  key: 'tb_dev_total',\n  label: 'TB Dev Total'\n}, {\n  key: 'tb_dev_coded',\n  label: 'TB Dev Coded'\n}, {\n  key: 'test_total',\n  label: 'Test Total'\n}, {\n  key: 'test_coded',\n  label: 'Test Coded'\n}, {\n  key: 'test_pass',\n  label: 'Test Pass'\n}, {\n  key: 'test_fail',\n  label: 'Test Fail'\n}, {\n  key: 'assert_total',\n  label: 'Assert Total'\n}, {\n  key: 'assert_coded',\n  label: 'Assert Coded'\n}, {\n  key: 'assert_pass',\n  label: 'Assert Pass'\n}, {\n  key: 'assert_fail',\n  label: 'Assert Fail'\n}, {\n  key: 'code_coverage_percent',\n  label: 'Code Coverage (%)'\n}, {\n  key: 'functional_coverage_percent',\n  label: 'Functional Coverage (%)'\n}, {\n  key: 'req_total',\n  label: 'Req Total'\n}, {\n  key: 'req_covered',\n  label: 'Req Covered'\n}, {\n  key: 'req_uncovered',\n  label: 'Req Uncovered'\n}, {\n  key: 'block_status',\n  label: 'Block Status'\n}, {\n  key: 'collected_by',\n  label: 'Collected By'\n}, {\n  key: 'collected_at',\n  label: 'Collected At'\n}, {\n  key: 'updated_at',\n  label: 'Updated At'\n}, {\n  key: 'is_deleted',\n  label: 'Is Deleted'\n}\n// Add more columns if your table has them\n];\nfunction DVManagerView() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('/api/dv-data').then(res => res.json()).then(json => setData(Array.isArray(json) ? json : [])).catch(() => setData([]));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"DV Manager View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: 1,\n      cellPadding: 6,\n      cellSpacing: 0,\n      style: {\n        minWidth: 1200\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col.label\n          }, col.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: columns.length,\n            children: \"No DV data found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this) : data.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(col => {\n            var _row$col$key;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_row$col$key = row[col.key]) !== null && _row$col$key !== void 0 ? _row$col$key : 'N/A'\n            }, col.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this);\n          })\n        }, row.id || idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(DVManagerView, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = DVManagerView;\nexport default DVManagerView;\nvar _c;\n$RefreshReg$(_c, \"DVManagerView\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","columns","key","label","DVManagerView","_s","data","setData","fetch","then","res","json","Array","isArray","catch","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","cellSpacing","minWidth","map","col","length","colSpan","row","idx","_row$col$key","id","_c","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/DVManagerView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst columns = [\r\n  { key: 'id', label: 'ID' },\r\n  { key: 'project_id', label: 'Project ID' },\r\n  { key: 'domain_id', label: 'Domain ID' },\r\n  { key: 'module', label: 'Module' },\r\n  { key: 'tb_dev_total', label: 'TB Dev Total' },\r\n  { key: 'tb_dev_coded', label: 'TB Dev Coded' },\r\n  { key: 'test_total', label: 'Test Total' },\r\n  { key: 'test_coded', label: 'Test Coded' },\r\n  { key: 'test_pass', label: 'Test Pass' },\r\n  { key: 'test_fail', label: 'Test Fail' },\r\n  { key: 'assert_total', label: 'Assert Total' },\r\n  { key: 'assert_coded', label: 'Assert Coded' },\r\n  { key: 'assert_pass', label: 'Assert Pass' },\r\n  { key: 'assert_fail', label: 'Assert Fail' },\r\n  { key: 'code_coverage_percent', label: 'Code Coverage (%)' },\r\n  { key: 'functional_coverage_percent', label: 'Functional Coverage (%)' },\r\n  { key: 'req_total', label: 'Req Total' },\r\n  { key: 'req_covered', label: 'Req Covered' },\r\n  { key: 'req_uncovered', label: 'Req Uncovered' },\r\n  { key: 'block_status', label: 'Block Status' },\r\n  { key: 'collected_by', label: 'Collected By' },\r\n  { key: 'collected_at', label: 'Collected At' },\r\n  { key: 'updated_at', label: 'Updated At' },\r\n  { key: 'is_deleted', label: 'Is Deleted' },\r\n  // Add more columns if your table has them\r\n];\r\n\r\nfunction DVManagerView() {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    fetch('/api/dv-data')\r\n      .then(res => res.json())\r\n      .then(json => setData(Array.isArray(json) ? json : []))\r\n      .catch(() => setData([]));\r\n  }, []);\r\n  return (\r\n    <div style={{ padding: 24 }}>\r\n      <h2>DV Manager View</h2>\r\n      <table border={1} cellPadding={6} cellSpacing={0} style={{ minWidth: 1200 }}>\r\n        <thead>\r\n          <tr>\r\n            {columns.map(col => (\r\n              <th key={col.key}>{col.label}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.length === 0 ? (\r\n            <tr><td colSpan={columns.length}>No DV data found.</td></tr>\r\n          ) : (\r\n            data.map((row, idx) => (\r\n              <tr key={row.id || idx}>\r\n                {columns.map(col => (\r\n                  <td key={col.key}>{row[col.key] ?? 'N/A'}</td>\r\n                ))}\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport default DVManagerView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}