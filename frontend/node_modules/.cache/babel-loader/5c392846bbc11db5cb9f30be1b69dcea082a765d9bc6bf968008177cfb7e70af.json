{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2020r\\\\dashboard\\\\frontend\\\\src\\\\components\\\\EngineeringCharts.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport './EngineeringCharts.css';\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n// Custom Tooltip Component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltip-label\",\n        children: `Stage: ${label}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), payload.map((entry, index) => {\n        let displayValue = entry.value;\n        let displayName = entry.name;\n\n        // Format timing values\n        if (entry.dataKey.includes('internal_timing_')) {\n          const timingType = entry.dataKey.split('_').pop().toUpperCase();\n          displayName = `Internal Timing ${timingType}`;\n          displayValue = entry.value.toFixed(2);\n        } else if (entry.dataKey === 'internal_timing') {\n          // Handle the combined internal timing string\n          displayName = 'Internal Timing';\n          displayValue = entry.value; // Keep as string format \"WNS/TNS/FEP\"\n        }\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-value\",\n          style: {\n            color: entry.color\n          },\n          children: `${displayName}: ${displayValue}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n\n// Debounce hook to prevent excessive re-renders\n_c = CustomTooltip;\nconst useDebounce = (value, delay) => {\n  _s();\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n};\n\n// Accept selectedDomainId and/or projectFilters as props\n_s(useDebounce, \"KDuPAtDOgxm8PU6legVJOb3oOmA=\");\nconst EngineeringCharts = ({\n  selectedDomainId,\n  projectFilters\n}) => {\n  _s2();\n  var _filterOptions$experi, _filterOptions$blocks;\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filterOptionsLoading, setFilterOptionsLoading] = useState(false);\n  // Replace single metric selection with multi-metric selection (max 2)\n  const [selectedMetrics, setSelectedMetrics] = useState(['area', 'internal_timing']);\n  const [filters, setFilters] = useState({\n    project_id: '',\n    experiment: '',\n    block_name: ''\n  });\n  const [filterOptions, setFilterOptions] = useState({});\n  const token = localStorage.getItem('token');\n\n  // Debounce filters to prevent excessive API calls\n  const debouncedFilters = useDebounce(filters, 300);\n  const metrics = [{\n    key: 'area',\n    label: 'Area (μm²)',\n    color: '#8884d8'\n  }, {\n    key: 'internal_timing',\n    label: 'Internal Timing (WNS/TNS/FEP)',\n    color: '#82ca9d'\n  }, {\n    key: 'interface_timing',\n    label: 'Interface Timing',\n    color: '#ffc658'\n  }, {\n    key: 'utilization',\n    label: 'Utilization (%)',\n    color: '#ff7300'\n  }, {\n    key: 'congestion',\n    label: 'Congestion',\n    color: '#ff0000'\n  }, {\n    key: 'inst_count',\n    label: 'Instance Count',\n    color: '#00ff00'\n  }];\n\n  // Memoize the fetch functions to prevent unnecessary re-renders\n  const fetchFilterOptions = useCallback(async () => {\n    try {\n      setFilterOptionsLoading(true);\n      const queryParams = new URLSearchParams();\n      if (selectedDomainId) {\n        queryParams.append('domain_id', selectedDomainId);\n      }\n      if (filters.project_id) {\n        queryParams.append('project_id', filters.project_id);\n      }\n      if (filters.block_name) {\n        queryParams.append('block_name', filters.block_name);\n      }\n      const response = await fetch(`http://localhost:5000/api/data/filter-options?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setFilterOptions(data);\n      }\n    } catch (error) {\n      console.error('Error fetching filter options:', error);\n    } finally {\n      setFilterOptionsLoading(false);\n    }\n  }, [selectedDomainId, filters.project_id, filters.block_name, token]);\n  const fetchChartData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const queryParams = new URLSearchParams();\n      if (selectedDomainId) queryParams.append('domain_id', selectedDomainId);\n      if (debouncedFilters.project_id) queryParams.append('project_id', debouncedFilters.project_id);\n      if (debouncedFilters.experiment) queryParams.append('experiment', debouncedFilters.experiment);\n      if (debouncedFilters.block_name) queryParams.append('block_name', debouncedFilters.block_name);\n      const response = await fetch(`http://localhost:5000/api/data/pd-data?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const result = await response.json();\n        processChartData(result.data);\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedDomainId, debouncedFilters, token]);\n  useEffect(() => {\n    if (selectedDomainId) {\n      fetchFilterOptions();\n    } else {\n      // Clear filter options when no domain is selected\n      setFilterOptions({});\n    }\n  }, [fetchFilterOptions, selectedDomainId]);\n  useEffect(() => {\n    if (selectedDomainId) {\n      fetchChartData();\n    } else {\n      // Clear chart data when no domain is selected\n      setChartData([]);\n      setLoading(false);\n    }\n  }, [fetchChartData, selectedDomainId]);\n\n  // Add a normalization function for stage names\n  const normalizeStage = s => {\n    if (!s) return 'Unknown';\n    const lower = s.trim().toLowerCase();\n    if (lower === 'synthesis') return 'synthesis';\n    if (lower === 'floorplan') return 'Floorplan';\n    if (lower === 'placement') return 'Placement';\n    return 'Unknown';\n  };\n  const processChartData = useCallback(data => {\n    // Define the expected stage order\n    const stageOrder = ['synthesis', 'Floorplan', 'Placement'];\n\n    // Group data by stage and calculate metrics\n    const stageData = {};\n    data.forEach(item => {\n      const stage = normalizeStage(item.stage);\n      if (!stageData[stage]) {\n        stageData[stage] = {\n          stage,\n          count: 0,\n          area_sum: 0,\n          internal_timing_wns_sum: 0,\n          internal_timing_tns_sum: 0,\n          internal_timing_fep_sum: 0,\n          interface_timing_sum: 0,\n          utilization_sum: 0,\n          congestion_sum: 0,\n          inst_count_sum: 0,\n          pass_count: 0,\n          fail_count: 0,\n          error_count: 0\n        };\n      }\n      stageData[stage].count++;\n      stageData[stage].area_sum += parseFloat(item.area_um2) || 0;\n\n      // Process internal timing - extract WNS, TNS, FEP values from complex strings\n      // Example: \"Setup: r2r: -0.35/-3.8/264 Hold: NA\"\n      // We extract: WNS = -0.35, TNS = -3.8, FEP = 264\n      let internalTimingWNS = 0;\n      let internalTimingTNS = 0;\n      let internalTimingFEP = 0;\n      if (item.internal_timing) {\n        // Look for patterns like \"r2r: -0.35/-3.8/264\" or \"i2r: -0.02/-1.4/241\"\n        const timingMatches = item.internal_timing.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/g);\n        if (timingMatches) {\n          // Take the first match (usually r2r)\n          const firstMatch = timingMatches[0];\n          const values = firstMatch.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/);\n          if (values) {\n            internalTimingWNS = parseFloat(values[1]) || 0;\n            internalTimingTNS = parseFloat(values[2]) || 0;\n            internalTimingFEP = parseFloat(values[3]) || 0;\n          }\n        }\n      }\n      stageData[stage].internal_timing_wns_sum += internalTimingWNS;\n      stageData[stage].internal_timing_tns_sum += internalTimingTNS;\n      stageData[stage].internal_timing_fep_sum += internalTimingFEP;\n\n      // Process interface timing - extract numeric values from complex strings\n      let interfaceTimingValue = 0;\n      if (item.interface_timing) {\n        const timingMatch = item.interface_timing.match(/(-?\\d+\\.?\\d*)/);\n        if (timingMatch) {\n          interfaceTimingValue = parseFloat(timingMatch[1]);\n        }\n      }\n      stageData[stage].interface_timing_sum += interfaceTimingValue;\n      stageData[stage].utilization_sum += parseFloat(item.utilization) || 0;\n      stageData[stage].inst_count_sum += parseInt(item.inst_count) || 0;\n\n      // Handle congestion (might be text, try to extract numeric value)\n      const congestionValue = parseFloat(item.congestion_drc_metrics) || 0;\n      stageData[stage].congestion_sum += congestionValue;\n\n      // Count status\n      if (item.run_status === 'pass') stageData[stage].pass_count++;else if (item.run_status === 'fail') stageData[stage].fail_count++;else if (item.run_status === 'continue_with_error') stageData[stage].error_count++;\n    });\n\n    // Calculate averages and format for charts, maintaining stage order\n    const processedData = stageOrder.map(stage => {\n      const stageInfo = stageData[stage] || {};\n      const count = stageInfo.count || 0;\n      return {\n        stage,\n        count,\n        area: count > 0 ? Number(stageInfo.area_sum) / count : 0,\n        internal_timing: count > 0 ? `${Number(stageInfo.internal_timing_wns_sum) / count}/${Number(stageInfo.internal_timing_tns_sum) / count}/${Number(stageInfo.internal_timing_fep_sum) / count}` : '0/0/0',\n        internal_timing_wns: count > 0 ? Number(stageInfo.internal_timing_wns_sum) / count : 0,\n        internal_timing_tns: count > 0 ? Number(stageInfo.internal_timing_tns_sum) / count : 0,\n        internal_timing_fep: count > 0 ? Number(stageInfo.internal_timing_fep_sum) / count : 0,\n        interface_timing: count > 0 ? Number(stageInfo.interface_timing_sum) / count : 0,\n        utilization: count > 0 ? Number(stageInfo.utilization_sum) / count : 0,\n        congestion: count > 0 ? Number(stageInfo.congestion_sum) / count : 0,\n        inst_count: count > 0 ? Number(stageInfo.inst_count_sum) / count : 0,\n        pass_rate: count > 0 ? stageInfo.pass_count / count * 100 : 0,\n        fail_rate: count > 0 ? stageInfo.fail_count / count * 100 : 0,\n        error_rate: count > 0 ? stageInfo.error_count / count * 100 : 0\n      };\n    });\n    setChartData(processedData);\n\n    // Debug: Log the processed data for each internal timing metric\n    console.log('Chart Data for WNS:', processedData.map(d => ({\n      stage: d.stage,\n      wns: d.internal_timing_wns,\n      type: typeof d.internal_timing_wns\n    })));\n    console.log('Chart Data for TNS:', processedData.map(d => ({\n      stage: d.stage,\n      tns: d.internal_timing_tns,\n      type: typeof d.internal_timing_tns\n    })));\n    console.log('Chart Data for FEP:', processedData.map(d => ({\n      stage: d.stage,\n      fep: d.internal_timing_fep,\n      type: typeof d.internal_timing_fep\n    })));\n\n    // Debug: Log the processed data\n    console.log('Processed Chart Data:', processedData);\n    console.log('Available stages in data:', Object.keys(stageData));\n\n    // Debug: Log timing extraction for first few items\n    if (data.length > 0) {\n      console.log('Sample timing extraction:');\n      data.slice(0, 3).forEach((item, index) => {\n        if (item.internal_timing) {\n          const timingMatches = item.internal_timing.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/g);\n          console.log(`Item ${index + 1} - Stage: ${item.stage}, Internal Timing: \"${item.internal_timing}\"`);\n          if (timingMatches) {\n            const firstMatch = timingMatches[0];\n            const values = firstMatch.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/);\n            if (values) {\n              console.log(`  Extracted - WNS: ${values[1]}, TNS: ${values[2]}, FEP: ${values[3]}`);\n            }\n          } else {\n            console.log(`  No timing pattern found`);\n          }\n        }\n      });\n    }\n  }, []);\n  const handleFilterChange = useCallback((key, value) => {\n    setFilters(prev => {\n      const newFilters = {\n        ...prev,\n        [key]: value\n      };\n\n      // Reset dependent filters when parent filter changes\n      if (key === 'project_id') {\n        // Reset experiment and block when project changes\n        newFilters.experiment = '';\n        newFilters.block_name = '';\n        // Show loading state briefly for cascading update\n        setFilterOptionsLoading(true);\n        setTimeout(() => setFilterOptionsLoading(false), 500);\n      } else if (key === 'block_name') {\n        // Reset experiment when block changes\n        newFilters.experiment = '';\n        // Show loading state briefly for cascading update\n        setFilterOptionsLoading(true);\n        setTimeout(() => setFilterOptionsLoading(false), 500);\n      }\n      return newFilters;\n    });\n  }, []);\n\n  // Memoize chart data to prevent unnecessary re-renders\n  const memoizedChartData = useMemo(() => chartData, [chartData]);\n  const memoizedStatusData = useMemo(() => {\n    if (chartData.length === 0) return [];\n    return chartData.map(stage => ({\n      stage: stage.stage,\n      pass: stage.pass_rate,\n      fail: stage.fail_rate,\n      error: stage.error_rate\n    }));\n  }, [chartData]);\n  const renderChart = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading chart data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this);\n    }\n    if (chartData.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available for the selected filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: memoizedChartData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        }\n        // Add these props to prevent blinking and improve performance\n        ,\n        syncId: \"engineering-charts\",\n        throttle: 100,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"stage\"\n          // Add these props to prevent x-axis blinking\n          ,\n          allowDataOverflow: false,\n          scale: \"band\",\n          type: \"category\"\n          // Add these props for better axis stability\n          ,\n          axisLine: true,\n          tickLine: true,\n          tick: {\n            fontSize: 12,\n            fill: '#b4b7bd'\n          }\n          // Prevent axis from jumping\n          ,\n          minTickGap: 10,\n          interval: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis\n        // Add these props for better axis stability\n        , {\n          axisLine: true,\n          tickLine: true,\n          tick: {\n            fontSize: 12,\n            fill: '#b4b7bd'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 22\n          }, this)\n          // Add animation and styling props\n          ,\n          animationDuration: 300,\n          animationEasing: \"ease-in-out\"\n          // Add these props for better tooltip behavior\n          ,\n          cursor: {\n            fill: 'rgba(115, 103, 240, 0.1)'\n          },\n          isAnimationActive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend\n        // Add these props for better legend stability\n        , {\n          verticalAlign: \"top\",\n          height: 36,\n          wrapperStyle: {\n            paddingBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), selectedMetrics.map(mKey => {\n          const metric = metrics.find(m => m.key === mKey);\n          return /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: mKey,\n            stroke: metric.color,\n            name: metric.label,\n            strokeWidth: 3,\n            dot: false,\n            activeDot: {\n              r: 7\n            }\n            // Add animation props\n            ,\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\"\n          }, mKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStatusChart = () => {\n    if (memoizedStatusData.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Run Status by Engineering Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: memoizedStatusData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }\n          // Add syncId to prevent conflicts\n          ,\n          syncId: \"status-charts\",\n          throttle: 100,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"stage\",\n            allowDataOverflow: false,\n            scale: \"band\",\n            type: \"category\"\n            // Add these props for better axis stability\n            ,\n            axisLine: true,\n            tickLine: true,\n            tick: {\n              fontSize: 12,\n              fill: '#b4b7bd'\n            }\n            // Prevent axis from jumping\n            ,\n            minTickGap: 10,\n            interval: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis\n          // Add these props for better axis stability\n          , {\n            axisLine: true,\n            tickLine: true,\n            tick: {\n              fontSize: 12,\n              fill: '#b4b7bd'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 24\n            }, this),\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\"\n            // Add these props for better tooltip behavior\n            ,\n            cursor: {\n              fill: 'rgba(115, 103, 240, 0.1)'\n            },\n            isAnimationActive: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend\n          // Add these props for better legend stability\n          , {\n            verticalAlign: \"top\",\n            height: 36,\n            wrapperStyle: {\n              paddingBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"pass\",\n            stroke: \"#16a34a\",\n            name: \"Pass Rate (%)\",\n            strokeWidth: 3,\n            dot: false,\n            activeDot: {\n              r: 7\n            },\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"fail\",\n            stroke: \"#dc2626\",\n            name: \"Fail Rate (%)\",\n            strokeWidth: 3,\n            dot: false,\n            activeDot: {\n              r: 7\n            },\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"error\",\n            stroke: \"#f59e0b\",\n            name: \"Error Rate (%)\",\n            strokeWidth: 3,\n            dot: false,\n            activeDot: {\n              r: 7\n            },\n            animationDuration: 300,\n            animationEasing: \"ease-in-out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"engineering-charts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Engineering Charts Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Visualize engineering data by stages and metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this), !selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-domain-message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-icon\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please Select a Domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a domain from the main engineering view to see the charts and filter options.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }, this), selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter-group ${filterOptionsLoading ? 'loading' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Experiment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.experiment,\n          onChange: e => handleFilterChange('experiment', e.target.value),\n          disabled: filterOptionsLoading,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Experiments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this), filterOptionsLoading ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Loading Experiments...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this) : (_filterOptions$experi = filterOptions.experiments) === null || _filterOptions$experi === void 0 ? void 0 : _filterOptions$experi.map(experiment => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: experiment,\n            children: experiment\n          }, experiment, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter-group ${filterOptionsLoading ? 'loading' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Block Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.block_name,\n          onChange: e => handleFilterChange('block_name', e.target.value),\n          disabled: filterOptionsLoading,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Blocks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this), filterOptionsLoading ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Loading Blocks...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 17\n          }, this) : (_filterOptions$blocks = filterOptions.blocks) === null || _filterOptions$blocks === void 0 ? void 0 : _filterOptions$blocks.map(block => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: block,\n            children: block\n          }, block, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 9\n    }, this), selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-checkboxes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select up to 2 Metrics to Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-checkboxes-grid\",\n        children: metrics.map(metric => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"metric-checkbox-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedMetrics.includes(metric.key),\n            onChange: () => {\n              setSelectedMetrics(prev => {\n                if (prev.includes(metric.key)) {\n                  // Remove metric\n                  return prev.filter(m => m !== metric.key);\n                } else if (prev.length < 2) {\n                  // Add metric if less than 2 selected\n                  return [...prev, metric.key];\n                } else {\n                  // Max 2 metrics\n                  return prev;\n                }\n              });\n            },\n            disabled: !selectedMetrics.includes(metric.key) && selectedMetrics.length >= 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-checkbox-icon\",\n            style: {\n              backgroundColor: metric.color\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-checkbox-label-text\",\n            children: metric.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 17\n          }, this)]\n        }, metric.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 9\n    }, this), selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [selectedMetrics.map(mKey => {\n          var _metrics$find;\n          return (_metrics$find = metrics.find(m => m.key === mKey)) === null || _metrics$find === void 0 ? void 0 : _metrics$find.label;\n        }).join(' & '), \" by Engineering Stage\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading chart data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 13\n      }, this) : chartData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available for the selected filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: selectedMetrics.includes('internal_timing') ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"internal-timing-charts-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"internal-timing-chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Internal Timing WNS by Engineering Stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 250,\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                data: memoizedChartData,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 5\n                },\n                syncId: \"engineering-charts-wns\",\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"stage\",\n                  allowDataOverflow: false,\n                  scale: \"band\",\n                  type: \"category\",\n                  axisLine: true,\n                  tickLine: true,\n                  tick: {\n                    fontSize: 12,\n                    fill: '#b4b7bd'\n                  },\n                  minTickGap: 10,\n                  interval: 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  axisLine: true,\n                  tickLine: true,\n                  tick: {\n                    fontSize: 12,\n                    fill: '#b4b7bd'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 43\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                  verticalAlign: \"top\",\n                  height: 36,\n                  wrapperStyle: {\n                    paddingBottom: '10px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"internal_timing_wns\",\n                  stroke: \"#82ca9d\",\n                  name: \"Internal Timing WNS\",\n                  strokeWidth: 3,\n                  dot: false,\n                  activeDot: {\n                    r: 7\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"internal-timing-chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Internal Timing TNS by Engineering Stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 250,\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                data: memoizedChartData,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 5\n                },\n                syncId: \"engineering-charts-tns\",\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"stage\",\n                  allowDataOverflow: false,\n                  scale: \"band\",\n                  type: \"category\",\n                  axisLine: true,\n                  tickLine: true,\n                  tick: {\n                    fontSize: 12,\n                    fill: '#b4b7bd'\n                  },\n                  minTickGap: 10,\n                  interval: 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  axisLine: true,\n                  tickLine: true,\n                  tick: {\n                    fontSize: 12,\n                    fill: '#b4b7bd'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 43\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                  verticalAlign: \"top\",\n                  height: 36,\n                  wrapperStyle: {\n                    paddingBottom: '10px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"internal_timing_tns\",\n                  stroke: \"#ffc658\",\n                  name: \"Internal Timing TNS\",\n                  strokeWidth: 3,\n                  dot: true,\n                  activeDot: {\n                    r: 7\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"internal-timing-chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Internal Timing FEP by Engineering Stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 250,\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                data: memoizedChartData,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 5\n                },\n                syncId: \"engineering-charts-fep\",\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"stage\",\n                  allowDataOverflow: false,\n                  scale: \"band\",\n                  type: \"category\",\n                  axisLine: true,\n                  tickLine: true,\n                  tick: {\n                    fontSize: 12,\n                    fill: '#b4b7bd'\n                  },\n                  minTickGap: 10,\n                  interval: 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  axisLine: true,\n                  tickLine: true,\n                  tick: {\n                    fontSize: 12,\n                    fill: '#b4b7bd'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 43\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                  verticalAlign: \"top\",\n                  height: 36,\n                  wrapperStyle: {\n                    paddingBottom: '10px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"internal_timing_fep\",\n                  stroke: \"#ff7300\",\n                  name: \"Internal Timing FEP\",\n                  strokeWidth: 3,\n                  dot: true,\n                  activeDot: {\n                    r: 7\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: memoizedChartData,\n            margin: {\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            syncId: \"engineering-charts\",\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"stage\",\n              allowDataOverflow: false,\n              scale: \"band\",\n              type: \"category\",\n              axisLine: true,\n              tickLine: true,\n              tick: {\n                fontSize: 12,\n                fill: '#b4b7bd'\n              },\n              minTickGap: 10,\n              interval: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              axisLine: true,\n              tickLine: true,\n              tick: {\n                fontSize: 12,\n                fill: '#b4b7bd'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {\n              verticalAlign: \"top\",\n              height: 36,\n              wrapperStyle: {\n                paddingBottom: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 21\n            }, this), selectedMetrics.map(mKey => {\n              const metric = metrics.find(m => m.key === mKey);\n              return /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: mKey,\n                stroke: metric.color,\n                name: metric.label,\n                strokeWidth: 3\n              }, mKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 25\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 17\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 9\n    }, this), selectedDomainId && renderStatusChart(), selectedDomainId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Stages:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: chartData.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Runs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: chartData.reduce((sum, stage) => sum + stage.count, 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 13\n        }, this), selectedMetrics.map(mKey => {\n          const metric = metrics.find(m => m.key === mKey);\n\n          // Special handling for internal timing - show averages for WNS, TNS, FEP\n          if (mKey === 'internal_timing') {\n            const avgWNS = chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_wns, 0) / chartData.length).toFixed(2) : '0';\n            const avgTNS = chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_tns, 0) / chartData.length).toFixed(2) : '0';\n            const avgFEP = chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_fep, 0) / chartData.length).toFixed(2) : '0';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"Average Internal Timing:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: [\"WNS: \", avgWNS, \", TNS: \", avgTNS, \", FEP: \", avgFEP]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 21\n              }, this)]\n            }, mKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 19\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"summary-label\",\n              children: [\"Average \", metric === null || metric === void 0 ? void 0 : metric.label, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"summary-value\",\n              children: chartData.length > 0 ? (chartData.reduce((sum, stage) => sum + stage[mKey], 0) / chartData.length).toFixed(2) : '0'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 19\n            }, this)]\n          }, mKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 519,\n    columnNumber: 5\n  }, this);\n};\n_s2(EngineeringCharts, \"m29l2/t3OpN4EfPWwmBNKFVPbUw=\", false, function () {\n  return [useDebounce];\n});\n_c2 = EngineeringCharts;\nexport default EngineeringCharts;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"EngineeringCharts\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomTooltip","active","payload","label","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","index","displayValue","value","displayName","name","dataKey","includes","timingType","split","pop","toUpperCase","toFixed","style","color","_c","useDebounce","delay","_s","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","EngineeringCharts","selectedDomainId","projectFilters","_s2","_filterOptions$experi","_filterOptions$blocks","chartData","setChartData","loading","setLoading","filterOptionsLoading","setFilterOptionsLoading","selectedMetrics","setSelectedMetrics","filters","setFilters","project_id","experiment","block_name","filterOptions","setFilterOptions","token","localStorage","getItem","debouncedFilters","metrics","key","fetchFilterOptions","queryParams","URLSearchParams","append","response","fetch","headers","ok","data","json","error","console","fetchChartData","result","processChartData","normalizeStage","s","lower","trim","toLowerCase","stageOrder","stageData","forEach","item","stage","count","area_sum","internal_timing_wns_sum","internal_timing_tns_sum","internal_timing_fep_sum","interface_timing_sum","utilization_sum","congestion_sum","inst_count_sum","pass_count","fail_count","error_count","parseFloat","area_um2","internalTimingWNS","internalTimingTNS","internalTimingFEP","internal_timing","timingMatches","match","firstMatch","values","interfaceTimingValue","interface_timing","timingMatch","utilization","parseInt","inst_count","congestionValue","congestion_drc_metrics","run_status","processedData","stageInfo","area","Number","internal_timing_wns","internal_timing_tns","internal_timing_fep","congestion","pass_rate","fail_rate","error_rate","log","d","wns","type","tns","fep","Object","keys","slice","handleFilterChange","prev","newFilters","memoizedChartData","memoizedStatusData","pass","fail","renderChart","width","height","margin","top","right","left","bottom","syncId","throttle","strokeDasharray","allowDataOverflow","scale","axisLine","tickLine","tick","fontSize","fill","minTickGap","interval","content","animationDuration","animationEasing","cursor","isAnimationActive","verticalAlign","wrapperStyle","paddingBottom","mKey","metric","find","m","stroke","strokeWidth","dot","activeDot","r","renderStatusChart","onChange","e","target","disabled","experiments","blocks","block","checked","filter","backgroundColor","_metrics$find","join","reduce","sum","avgWNS","avgTNS","avgFEP","_c2","$RefreshReg$"],"sources":["C:/Users/2020r/dashboard/frontend/src/components/EngineeringCharts.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport './EngineeringCharts.css';\nimport { \n  LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer \n} from 'recharts';\n\n// Custom Tooltip Component\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"tooltip-label\">{`Stage: ${label}`}</p>\n        {payload.map((entry, index) => {\n          let displayValue = entry.value;\n          let displayName = entry.name;\n          \n          // Format timing values\n          if (entry.dataKey.includes('internal_timing_')) {\n            const timingType = entry.dataKey.split('_').pop().toUpperCase();\n            displayName = `Internal Timing ${timingType}`;\n            displayValue = entry.value.toFixed(2);\n          } else if (entry.dataKey === 'internal_timing') {\n            // Handle the combined internal timing string\n            displayName = 'Internal Timing';\n            displayValue = entry.value; // Keep as string format \"WNS/TNS/FEP\"\n          }\n          \n          return (\n            <p key={index} className=\"tooltip-value\" style={{ color: entry.color }}>\n              {`${displayName}: ${displayValue}`}\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n  return null;\n};\n\n// Debounce hook to prevent excessive re-renders\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\n// Accept selectedDomainId and/or projectFilters as props\nconst EngineeringCharts = ({ selectedDomainId, projectFilters }) => {\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filterOptionsLoading, setFilterOptionsLoading] = useState(false);\n  // Replace single metric selection with multi-metric selection (max 2)\n  const [selectedMetrics, setSelectedMetrics] = useState(['area', 'internal_timing']);\n  const [filters, setFilters] = useState({\n    project_id: '',\n    experiment: '',\n    block_name: ''\n  });\n  const [filterOptions, setFilterOptions] = useState({});\n\n  const token = localStorage.getItem('token');\n\n  // Debounce filters to prevent excessive API calls\n  const debouncedFilters = useDebounce(filters, 300);\n\n  const metrics = [\n    { key: 'area', label: 'Area (μm²)', color: '#8884d8' },\n    { key: 'internal_timing', label: 'Internal Timing (WNS/TNS/FEP)', color: '#82ca9d' },\n    { key: 'interface_timing', label: 'Interface Timing', color: '#ffc658' },\n    { key: 'utilization', label: 'Utilization (%)', color: '#ff7300' },\n    { key: 'congestion', label: 'Congestion', color: '#ff0000' },\n    { key: 'inst_count', label: 'Instance Count', color: '#00ff00' }\n  ];\n\n  // Memoize the fetch functions to prevent unnecessary re-renders\n  const fetchFilterOptions = useCallback(async () => {\n    try {\n      setFilterOptionsLoading(true);\n      const queryParams = new URLSearchParams();\n      if (selectedDomainId) {\n        queryParams.append('domain_id', selectedDomainId);\n      }\n      if (filters.project_id) {\n        queryParams.append('project_id', filters.project_id);\n      }\n      if (filters.block_name) {\n        queryParams.append('block_name', filters.block_name);\n      }\n\n      const response = await fetch(`http://localhost:5000/api/data/filter-options?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setFilterOptions(data);\n      }\n    } catch (error) {\n      console.error('Error fetching filter options:', error);\n    } finally {\n      setFilterOptionsLoading(false);\n    }\n  }, [selectedDomainId, filters.project_id, filters.block_name, token]);\n\n  const fetchChartData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const queryParams = new URLSearchParams();\n      \n      if (selectedDomainId) queryParams.append('domain_id', selectedDomainId);\n      if (debouncedFilters.project_id) queryParams.append('project_id', debouncedFilters.project_id);\n      if (debouncedFilters.experiment) queryParams.append('experiment', debouncedFilters.experiment);\n      if (debouncedFilters.block_name) queryParams.append('block_name', debouncedFilters.block_name);\n\n      const response = await fetch(`http://localhost:5000/api/data/pd-data?${queryParams}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        processChartData(result.data);\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedDomainId, debouncedFilters, token]);\n\n  useEffect(() => {\n    if (selectedDomainId) {\n      fetchFilterOptions();\n    } else {\n      // Clear filter options when no domain is selected\n      setFilterOptions({});\n    }\n  }, [fetchFilterOptions, selectedDomainId]);\n\n  useEffect(() => {\n    if (selectedDomainId) {\n      fetchChartData();\n    } else {\n      // Clear chart data when no domain is selected\n      setChartData([]);\n      setLoading(false);\n    }\n  }, [fetchChartData, selectedDomainId]);\n\n  // Add a normalization function for stage names\n  const normalizeStage = s => {\n    if (!s) return 'Unknown';\n    const lower = s.trim().toLowerCase();\n    if (lower === 'synthesis') return 'synthesis';\n    if (lower === 'floorplan') return 'Floorplan';\n    if (lower === 'placement') return 'Placement';\n    return 'Unknown';\n  };\n\n  const processChartData = useCallback((data) => {\n    // Define the expected stage order\n    const stageOrder = ['synthesis', 'Floorplan', 'Placement'];\n    \n    // Group data by stage and calculate metrics\n    const stageData = {};\n    \n    data.forEach(item => {\n      const stage = normalizeStage(item.stage);\n      if (!stageData[stage]) {\n        stageData[stage] = {\n          stage,\n          count: 0,\n          area_sum: 0,\n          internal_timing_wns_sum: 0,\n          internal_timing_tns_sum: 0,\n          internal_timing_fep_sum: 0,\n          interface_timing_sum: 0,\n          utilization_sum: 0,\n          congestion_sum: 0,\n          inst_count_sum: 0,\n          pass_count: 0,\n          fail_count: 0,\n          error_count: 0\n        };\n      }\n      \n      stageData[stage].count++;\n      stageData[stage].area_sum += parseFloat(item.area_um2) || 0;\n      \n      // Process internal timing - extract WNS, TNS, FEP values from complex strings\n      // Example: \"Setup: r2r: -0.35/-3.8/264 Hold: NA\"\n      // We extract: WNS = -0.35, TNS = -3.8, FEP = 264\n      let internalTimingWNS = 0;\n      let internalTimingTNS = 0;\n      let internalTimingFEP = 0;\n      \n      if (item.internal_timing) {\n        // Look for patterns like \"r2r: -0.35/-3.8/264\" or \"i2r: -0.02/-1.4/241\"\n        const timingMatches = item.internal_timing.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/g);\n        if (timingMatches) {\n          // Take the first match (usually r2r)\n          const firstMatch = timingMatches[0];\n          const values = firstMatch.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/);\n          if (values) {\n            internalTimingWNS = parseFloat(values[1]) || 0;\n            internalTimingTNS = parseFloat(values[2]) || 0;\n            internalTimingFEP = parseFloat(values[3]) || 0;\n          }\n        }\n      }\n      \n      stageData[stage].internal_timing_wns_sum += internalTimingWNS;\n      stageData[stage].internal_timing_tns_sum += internalTimingTNS;\n      stageData[stage].internal_timing_fep_sum += internalTimingFEP;\n      \n      // Process interface timing - extract numeric values from complex strings\n      let interfaceTimingValue = 0;\n      if (item.interface_timing) {\n        const timingMatch = item.interface_timing.match(/(-?\\d+\\.?\\d*)/);\n        if (timingMatch) {\n          interfaceTimingValue = parseFloat(timingMatch[1]);\n        }\n      }\n      stageData[stage].interface_timing_sum += interfaceTimingValue;\n      \n      stageData[stage].utilization_sum += parseFloat(item.utilization) || 0;\n      stageData[stage].inst_count_sum += parseInt(item.inst_count) || 0;\n      \n      // Handle congestion (might be text, try to extract numeric value)\n      const congestionValue = parseFloat(item.congestion_drc_metrics) || 0;\n      stageData[stage].congestion_sum += congestionValue;\n      \n      // Count status\n      if (item.run_status === 'pass') stageData[stage].pass_count++;\n      else if (item.run_status === 'fail') stageData[stage].fail_count++;\n      else if (item.run_status === 'continue_with_error') stageData[stage].error_count++;\n    });\n\n    // Calculate averages and format for charts, maintaining stage order\n    const processedData = stageOrder.map(stage => {\n      const stageInfo = stageData[stage] || {};\n      const count = stageInfo.count || 0;\n      return {\n        stage,\n        count,\n        area: count > 0 ? Number(stageInfo.area_sum) / count : 0,\n        internal_timing: count > 0 ? `${Number(stageInfo.internal_timing_wns_sum) / count}/${Number(stageInfo.internal_timing_tns_sum) / count}/${Number(stageInfo.internal_timing_fep_sum) / count}` : '0/0/0',\n        internal_timing_wns: count > 0 ? Number(stageInfo.internal_timing_wns_sum) / count : 0,\n        internal_timing_tns: count > 0 ? Number(stageInfo.internal_timing_tns_sum) / count : 0,\n        internal_timing_fep: count > 0 ? Number(stageInfo.internal_timing_fep_sum) / count : 0,\n        interface_timing: count > 0 ? Number(stageInfo.interface_timing_sum) / count : 0,\n        utilization: count > 0 ? Number(stageInfo.utilization_sum) / count : 0,\n        congestion: count > 0 ? Number(stageInfo.congestion_sum) / count : 0,\n        inst_count: count > 0 ? Number(stageInfo.inst_count_sum) / count : 0,\n        pass_rate: count > 0 ? (stageInfo.pass_count / count) * 100 : 0,\n        fail_rate: count > 0 ? (stageInfo.fail_count / count) * 100 : 0,\n        error_rate: count > 0 ? (stageInfo.error_count / count) * 100 : 0\n      };\n    });\n\n    setChartData(processedData);\n\n    // Debug: Log the processed data for each internal timing metric\n    console.log('Chart Data for WNS:', processedData.map(d => ({ stage: d.stage, wns: d.internal_timing_wns, type: typeof d.internal_timing_wns })));\n    console.log('Chart Data for TNS:', processedData.map(d => ({ stage: d.stage, tns: d.internal_timing_tns, type: typeof d.internal_timing_tns })));\n    console.log('Chart Data for FEP:', processedData.map(d => ({ stage: d.stage, fep: d.internal_timing_fep, type: typeof d.internal_timing_fep })));\n    \n    // Debug: Log the processed data\n    console.log('Processed Chart Data:', processedData);\n    console.log('Available stages in data:', Object.keys(stageData));\n    \n    // Debug: Log timing extraction for first few items\n    if (data.length > 0) {\n      console.log('Sample timing extraction:');\n      data.slice(0, 3).forEach((item, index) => {\n        if (item.internal_timing) {\n          const timingMatches = item.internal_timing.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/g);\n          console.log(`Item ${index + 1} - Stage: ${item.stage}, Internal Timing: \"${item.internal_timing}\"`);\n          if (timingMatches) {\n            const firstMatch = timingMatches[0];\n            const values = firstMatch.match(/(?:r2r|i2r):\\s*([-\\d.]+)\\/([-\\d.]+)\\/(\\d+)/);\n            if (values) {\n              console.log(`  Extracted - WNS: ${values[1]}, TNS: ${values[2]}, FEP: ${values[3]}`);\n            }\n          } else {\n            console.log(`  No timing pattern found`);\n          }\n        }\n      });\n    }\n  }, []);\n\n  const handleFilterChange = useCallback((key, value) => {\n    setFilters(prev => {\n      const newFilters = { ...prev, [key]: value };\n      \n      // Reset dependent filters when parent filter changes\n      if (key === 'project_id') {\n        // Reset experiment and block when project changes\n        newFilters.experiment = '';\n        newFilters.block_name = '';\n        // Show loading state briefly for cascading update\n        setFilterOptionsLoading(true);\n        setTimeout(() => setFilterOptionsLoading(false), 500);\n      } else if (key === 'block_name') {\n        // Reset experiment when block changes\n        newFilters.experiment = '';\n        // Show loading state briefly for cascading update\n        setFilterOptionsLoading(true);\n        setTimeout(() => setFilterOptionsLoading(false), 500);\n      }\n      \n      return newFilters;\n    });\n  }, []);\n\n  // Memoize chart data to prevent unnecessary re-renders\n  const memoizedChartData = useMemo(() => chartData, [chartData]);\n  const memoizedStatusData = useMemo(() => {\n    if (chartData.length === 0) return [];\n    \n    return chartData.map(stage => ({\n      stage: stage.stage,\n      pass: stage.pass_rate,\n      fail: stage.fail_rate,\n      error: stage.error_rate\n    }));\n  }, [chartData]);\n\n  const renderChart = () => {\n    if (loading) {\n      return (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading chart data...</p>\n        </div>\n      );\n    }\n\n    if (chartData.length === 0) {\n      return (\n        <div className=\"no-data-container\">\n          <p>No data available for the selected filters</p>\n        </div>\n      );\n    }\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <LineChart \n          data={memoizedChartData} \n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n          // Add these props to prevent blinking and improve performance\n          syncId=\"engineering-charts\"\n          throttle={100}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis \n            dataKey=\"stage\" \n            // Add these props to prevent x-axis blinking\n            allowDataOverflow={false}\n            scale=\"band\"\n            type=\"category\"\n            // Add these props for better axis stability\n            axisLine={true}\n            tickLine={true}\n            tick={{ fontSize: 12, fill: '#b4b7bd' }}\n            // Prevent axis from jumping\n            minTickGap={10}\n            interval={0}\n          />\n          <YAxis \n            // Add these props for better axis stability\n            axisLine={true}\n            tickLine={true}\n            tick={{ fontSize: 12, fill: '#b4b7bd' }}\n          />\n          <Tooltip \n            content={<CustomTooltip />}\n            // Add animation and styling props\n            animationDuration={300}\n            animationEasing=\"ease-in-out\"\n            // Add these props for better tooltip behavior\n            cursor={{ fill: 'rgba(115, 103, 240, 0.1)' }}\n            isAnimationActive={true}\n          />\n          <Legend \n            // Add these props for better legend stability\n            verticalAlign=\"top\"\n            height={36}\n            wrapperStyle={{ paddingBottom: '10px' }}\n          />\n          {/* Update main chart to render multiple Lines for selected metrics */}\n          {selectedMetrics.map(mKey => {\n            const metric = metrics.find(m => m.key === mKey);\n            return (\n              <Line \n                key={mKey}\n                type=\"monotone\"\n                dataKey={mKey}\n                stroke={metric.color}\n                name={metric.label}\n                strokeWidth={3}\n                dot={false}\n                activeDot={{ r: 7 }}\n                // Add animation props\n                animationDuration={300}\n                animationEasing=\"ease-in-out\"\n              />\n            );\n          })}\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderStatusChart = () => {\n    if (memoizedStatusData.length === 0) return null;\n\n    return (\n      <div className=\"status-chart-container\">\n        <h3>Run Status by Engineering Stage</h3>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart \n            data={memoizedStatusData} \n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n            // Add syncId to prevent conflicts\n            syncId=\"status-charts\"\n            throttle={100}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"stage\" \n              allowDataOverflow={false}\n              scale=\"band\"\n              type=\"category\"\n              // Add these props for better axis stability\n              axisLine={true}\n              tickLine={true}\n              tick={{ fontSize: 12, fill: '#b4b7bd' }}\n              // Prevent axis from jumping\n              minTickGap={10}\n              interval={0}\n            />\n            <YAxis \n              // Add these props for better axis stability\n              axisLine={true}\n              tickLine={true}\n              tick={{ fontSize: 12, fill: '#b4b7bd' }}\n            />\n            <Tooltip \n              content={<CustomTooltip />}\n              animationDuration={300}\n              animationEasing=\"ease-in-out\"\n              // Add these props for better tooltip behavior\n              cursor={{ fill: 'rgba(115, 103, 240, 0.1)' }}\n              isAnimationActive={true}\n            />\n            <Legend \n              // Add these props for better legend stability\n              verticalAlign=\"top\"\n              height={36}\n              wrapperStyle={{ paddingBottom: '10px' }}\n            />\n            <Line \n              type=\"monotone\"\n              dataKey=\"pass\" \n              stroke=\"#16a34a\" \n              name=\"Pass Rate (%)\"\n              strokeWidth={3}\n              dot={false}\n              activeDot={{ r: 7 }}\n              animationDuration={300}\n              animationEasing=\"ease-in-out\"\n            />\n            <Line \n              type=\"monotone\"\n              dataKey=\"fail\" \n              stroke=\"#dc2626\" \n              name=\"Fail Rate (%)\"\n              strokeWidth={3}\n              dot={false}\n              activeDot={{ r: 7 }}\n              animationDuration={300}\n              animationEasing=\"ease-in-out\"\n            />\n            <Line \n              type=\"monotone\"\n              dataKey=\"error\" \n              stroke=\"#f59e0b\" \n              name=\"Error Rate (%)\"\n              strokeWidth={3}\n              dot={false}\n              activeDot={{ r: 7 }}\n              animationDuration={300}\n              animationEasing=\"ease-in-out\"\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"engineering-charts\">\n      <div className=\"charts-header\">\n        <h2>Engineering Charts Dashboard</h2>\n        <p>Visualize engineering data by stages and metrics</p>\n      </div>\n\n      {/* Show message when no domain is selected */}\n      {!selectedDomainId && (\n        <div className=\"no-domain-message\">\n          <div className=\"message-container\">\n            <div className=\"message-icon\">📊</div>\n            <h3>Please Select a Domain</h3>\n            <p>Choose a domain from the main engineering view to see the charts and filter options.</p>\n          </div>\n        </div>\n      )}\n\n      {/* Filters Section - Only show when domain is selected */}\n      {selectedDomainId && (\n        <div className=\"filters-section\">\n          {/* Removed Project Filter Dropdown */}\n          <div className={`filter-group ${filterOptionsLoading ? 'loading' : ''}`}>\n            <label>Experiment:</label>\n            <select \n              value={filters.experiment} \n              onChange={(e) => handleFilterChange('experiment', e.target.value)}\n              disabled={filterOptionsLoading}\n            >\n              <option value=\"\">All Experiments</option>\n              {filterOptionsLoading ? (\n                <option value=\"\">Loading Experiments...</option>\n              ) : (\n                filterOptions.experiments?.map(experiment => (\n                  <option key={experiment} value={experiment}>\n                    {experiment}\n                  </option>\n                ))\n              )}\n            </select>\n          </div>\n\n          <div className={`filter-group ${filterOptionsLoading ? 'loading' : ''}`}>\n            <label>Block Name:</label>\n            <select \n              value={filters.block_name} \n              onChange={(e) => handleFilterChange('block_name', e.target.value)}\n              disabled={filterOptionsLoading}\n            >\n              <option value=\"\">All Blocks</option>\n              {filterOptionsLoading ? (\n                <option value=\"\">Loading Blocks...</option>\n              ) : (\n                filterOptions.blocks?.map(block => (\n                  <option key={block} value={block}>\n                    {block}\n                  </option>\n                ))\n              )}\n            </select>\n          </div>\n        </div>\n      )}\n\n      {/* Metric Selection Buttons - Only show when domain is selected */}\n      {selectedDomainId && (\n        <div className=\"metric-checkboxes\">\n          <h3>Select up to 2 Metrics to Display</h3>\n          <div className=\"metric-checkboxes-grid\">\n            {metrics.map(metric => (\n              <label key={metric.key} className=\"metric-checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedMetrics.includes(metric.key)}\n                  onChange={() => {\n                    setSelectedMetrics(prev => {\n                      if (prev.includes(metric.key)) {\n                        // Remove metric\n                        return prev.filter(m => m !== metric.key);\n                      } else if (prev.length < 2) {\n                        // Add metric if less than 2 selected\n                        return [...prev, metric.key];\n                      } else {\n                        // Max 2 metrics\n                        return prev;\n                      }\n                    });\n                  }}\n                  disabled={\n                    !selectedMetrics.includes(metric.key) && selectedMetrics.length >= 2\n                  }\n                />\n                <span className=\"metric-checkbox-icon\" style={{ backgroundColor: metric.color }}></span>\n                <span className=\"metric-checkbox-label-text\">{metric.label}</span>\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Main Chart - Only show when domain is selected */}\n      {selectedDomainId && (\n        <div className=\"main-chart-container\">\n          <h3>\n            {selectedMetrics.map(mKey => metrics.find(m => m.key === mKey)?.label).join(' & ')} by Engineering Stage\n          </h3>\n          {loading ? (\n            <div className=\"loading-container\">\n              <div className=\"loading-spinner\"></div>\n              <p>Loading chart data...</p>\n            </div>\n          ) : chartData.length === 0 ? (\n            <div className=\"no-data-container\">\n              <p>No data available for the selected filters</p>\n            </div>\n          ) : (\n            <>\n              {/* Special case: Internal Timing selected, show 3 separate charts */}\n              {selectedMetrics.includes('internal_timing') ? (\n                <div className=\"internal-timing-charts-group\">\n                  {/* WNS Chart */}\n                  <div className=\"internal-timing-chart\">\n                    <h4>Internal Timing WNS by Engineering Stage</h4>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                      <LineChart\n                        data={memoizedChartData}\n                        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                        syncId=\"engineering-charts-wns\"\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"stage\" allowDataOverflow={false} scale=\"band\" type=\"category\" axisLine={true} tickLine={true} tick={{ fontSize: 12, fill: '#b4b7bd' }} minTickGap={10} interval={0} />\n                        <YAxis axisLine={true} tickLine={true} tick={{ fontSize: 12, fill: '#b4b7bd' }} />\n                        <Tooltip content={<CustomTooltip />} />\n                        <Legend verticalAlign=\"top\" height={36} wrapperStyle={{ paddingBottom: '10px' }} />\n                        <Line type=\"monotone\" dataKey=\"internal_timing_wns\" stroke=\"#82ca9d\" name=\"Internal Timing WNS\" strokeWidth={3} dot={false} activeDot={{ r: 7 }} />\n                      </LineChart>\n                    </ResponsiveContainer>\n                  </div>\n                  {/* TNS Chart */}\n                  <div className=\"internal-timing-chart\">\n                    <h4>Internal Timing TNS by Engineering Stage</h4>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                      <LineChart\n                        data={memoizedChartData}\n                        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                        syncId=\"engineering-charts-tns\"\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"stage\" allowDataOverflow={false} scale=\"band\" type=\"category\" axisLine={true} tickLine={true} tick={{ fontSize: 12, fill: '#b4b7bd' }} minTickGap={10} interval={0} />\n                        <YAxis axisLine={true} tickLine={true} tick={{ fontSize: 12, fill: '#b4b7bd' }} />\n                        <Tooltip content={<CustomTooltip />} />\n                        <Legend verticalAlign=\"top\" height={36} wrapperStyle={{ paddingBottom: '10px' }} />\n                        <Line type=\"monotone\" dataKey=\"internal_timing_tns\" stroke=\"#ffc658\" name=\"Internal Timing TNS\" strokeWidth={3} dot={true} activeDot={{ r: 7 }} />\n                      </LineChart>\n                    </ResponsiveContainer>\n                  </div>\n                  {/* FEP Chart */}\n                  <div className=\"internal-timing-chart\">\n                    <h4>Internal Timing FEP by Engineering Stage</h4>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                      <LineChart\n                        data={memoizedChartData}\n                        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                        syncId=\"engineering-charts-fep\"\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"stage\" allowDataOverflow={false} scale=\"band\" type=\"category\" axisLine={true} tickLine={true} tick={{ fontSize: 12, fill: '#b4b7bd' }} minTickGap={10} interval={0} />\n                        <YAxis axisLine={true} tickLine={true} tick={{ fontSize: 12, fill: '#b4b7bd' }} />\n                        <Tooltip content={<CustomTooltip />} />\n                        <Legend verticalAlign=\"top\" height={36} wrapperStyle={{ paddingBottom: '10px' }} />\n                        <Line type=\"monotone\" dataKey=\"internal_timing_fep\" stroke=\"#ff7300\" name=\"Internal Timing FEP\" strokeWidth={3} dot={true} activeDot={{ r: 7 }} />\n                      </LineChart>\n                    </ResponsiveContainer>\n                  </div>\n                </div>\n              ) : (\n                <ResponsiveContainer width=\"100%\" height={400}>\n                  <LineChart\n                    data={memoizedChartData}\n                    margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                    syncId=\"engineering-charts\"\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"stage\" allowDataOverflow={false} scale=\"band\" type=\"category\" axisLine={true} tickLine={true} tick={{ fontSize: 12, fill: '#b4b7bd' }} minTickGap={10} interval={0} />\n                    <YAxis axisLine={true} tickLine={true} tick={{ fontSize: 12, fill: '#b4b7bd' }} />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Legend verticalAlign=\"top\" height={36} wrapperStyle={{ paddingBottom: '10px' }} />\n                    {selectedMetrics.map(mKey => {\n                      const metric = metrics.find(m => m.key === mKey);\n                      return (\n                        <Line\n                          key={mKey}\n                          type=\"monotone\"\n                          dataKey={mKey}\n                          stroke={metric.color}\n                          name={metric.label}\n                          strokeWidth={3}\n                        />\n                      );\n                    })}\n                  </LineChart>\n                </ResponsiveContainer>\n              )}\n            </>\n          )}\n        </div>\n      )}\n\n      {/* Status Chart - Only show when domain is selected */}\n      {selectedDomainId && renderStatusChart()}\n\n      {/* Data Summary - Only show when domain is selected */}\n      {selectedDomainId && (\n        <div className=\"data-summary\">\n          <h3>Data Summary</h3>\n          <div className=\"summary-grid\">\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Total Stages:</span>\n              <span className=\"summary-value\">{chartData.length}</span>\n            </div>\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Total Runs:</span>\n              <span className=\"summary-value\">\n                {chartData.reduce((sum, stage) => sum + stage.count, 0)}\n              </span>\n            </div>\n            {/* Show average for each selected metric */}\n            {selectedMetrics.map(mKey => {\n              const metric = metrics.find(m => m.key === mKey);\n              \n              // Special handling for internal timing - show averages for WNS, TNS, FEP\n              if (mKey === 'internal_timing') {\n                const avgWNS = chartData.length > 0 \n                  ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_wns, 0) / chartData.length).toFixed(2)\n                  : '0';\n                const avgTNS = chartData.length > 0 \n                  ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_tns, 0) / chartData.length).toFixed(2)\n                  : '0';\n                const avgFEP = chartData.length > 0 \n                  ? (chartData.reduce((sum, stage) => sum + stage.internal_timing_fep, 0) / chartData.length).toFixed(2)\n                  : '0';\n                \n                return (\n                  <div className=\"summary-item\" key={mKey}>\n                    <span className=\"summary-label\">Average Internal Timing:</span>\n                    <span className=\"summary-value\">\n                      WNS: {avgWNS}, TNS: {avgTNS}, FEP: {avgFEP}\n                    </span>\n                  </div>\n                );\n              }\n              \n              return (\n                <div className=\"summary-item\" key={mKey}>\n                  <span className=\"summary-label\">Average {metric?.label}:</span>\n                  <span className=\"summary-value\">\n                    {chartData.length > 0 \n                      ? (chartData.reduce((sum, stage) => sum + stage[mKey], 0) / chartData.length).toFixed(2)\n                      : '0'\n                    }\n                  </span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EngineeringCharts; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}